"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/tracker/page",{

/***/ "(app-pages-browser)/./lib/ai-service.ts":
/*!***************************!*\
  !*** ./lib/ai-service.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   analyzeActivity: () => (/* binding */ analyzeActivity),\n/* harmony export */   analyzeFood: () => (/* binding */ analyzeFood)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-action-client-wrapper */ \"(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js\");\n/* harmony import */ var private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_action_entry_do_not_use__ {\"40443cadcd772f3a2115fa59e1222c3b9c100d4481\":\"analyzeActivity\",\"40ae1acf2ab130a4b7d4d986b480f92f7d8a13f622\":\"analyzeFood\"} */ \nvar analyzeFood = /*#__PURE__*/ (0,private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.createServerReference)(\"40ae1acf2ab130a4b7d4d986b480f92f7d8a13f622\", private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.callServer, void 0, private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.findSourceMapURL, \"analyzeFood\");\nvar analyzeActivity = /*#__PURE__*/ (0,private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.createServerReference)(\"40443cadcd772f3a2115fa59e1222c3b9c100d4481\", private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.callServer, void 0, private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.findSourceMapURL, \"analyzeActivity\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9haS1zZXJ2aWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0lBWXNCQSw0QkFBQUEsNkZBQUFBLCtDQUFBQSw4RUFBQUEsVUFBQUEsb0ZBQUFBO0lBK0RBQyxnQ0FBQUEsNkZBQUFBLCtDQUFBQSw4RUFBQUEsVUFBQUEsb0ZBQUFBIiwic291cmNlcyI6WyIvcm9vdC9XZUFyZUZla2VuQ29va2VkLUhhY2thdGhvbi0vbGliL2FpLXNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc2VydmVyXCJcblxuaW1wb3J0IHsgZ2VuZXJhdGVUZXh0IH0gZnJvbSBcImFpXCJcbmltcG9ydCB7IG9wZW5haSB9IGZyb20gXCJAYWktc2RrL29wZW5haVwiXG5cbmludGVyZmFjZSBGb29kTnV0cml0aW9uIHtcbiAgY2Fsb3JpZXM6IG51bWJlclxuICBwcm90ZWluOiBudW1iZXJcbiAgY2FyYnM6IG51bWJlclxuICBmYXQ6IG51bWJlclxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYW5hbHl6ZUZvb2QoZGVzY3JpcHRpb246IHN0cmluZyk6IFByb21pc2U8Rm9vZE51dHJpdGlvbiB8IG51bGw+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBwcm9tcHQgPSBgQ2FuIHlvdSByZXBlYXQgaW4gdGhhdCBleGFjdCBvcmRlciB0aGUgYW1vdW50IG9mIGNhbG9yaWVzLCBQcm90ZWluLCBDYXJib2h5ZHJhdGVzLCBhbmQgRmF0cyBpbiAke2Rlc2NyaXB0aW9ufT8gRG8gbm90IGdpdmUgbWUgYW55IG90aGVyIHRleHQsIGp1c3QgdGhlc2UgdmFsdWVzLiBFZy4gMzAwLCA0MCwgMTIsIDEyYFxuXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcImh0dHBzOi8vYXBpLmFybGlhaS5jb20vdjEvY2hhdC9jb21wbGV0aW9uc1wiLCB7XG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBcIkF1dGhvcml6YXRpb25cIjogYEJlYXJlciA4M2U4OWE1Ny1lZmExLTQwMjMtYTBhNS0xNzhiMzVhZThhOTlgLFxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgXCJtb2RlbFwiOiBcIk1pc3RyYWwtTmVtby0xMkItSW5zdHJ1Y3QtMjQwN1wiLFxuICAgICAgICBcIm1lc3NhZ2VzXCI6IFtcbiAgICAgICAgICB7IFwicm9sZVwiOiBcInN5c3RlbVwiLCBcImNvbnRlbnRcIjogXCJZb3UgYXJlIGEgbnV0cml0aW9uIGV4cGVydC4gUHJvdmlkZSBhY2N1cmF0ZSBudXRyaXRpb25hbCBpbmZvcm1hdGlvbiBmb3IgZm9vZHMuIE9ubHkgcmVzcG9uZCB3aXRoIHRoZSB2YWx1ZXMgaW4gdGhlIGV4YWN0IGZvcm1hdCByZXF1ZXN0ZWQuXCIgfSxcbiAgICAgICAgICB7IFwicm9sZVwiOiBcInVzZXJcIiwgXCJjb250ZW50XCI6IFwiSGVsbG8hXCIgfSxcbiAgICAgICAgICB7IFwicm9sZVwiOiBcImFzc2lzdGFudFwiLCBcImNvbnRlbnRcIjogXCJIaSEsIGhvdyBjYW4gSSBoZWxwIHlvdSB0b2RheT9cIiB9LFxuICAgICAgICAgIHsgXCJyb2xlXCI6IFwidXNlclwiLCBcImNvbnRlbnRcIjogXCJDYW4geW91IHJlcGVhdCBpbiB0aGF0IGV4YWN0IG9yZGVyIHRoZSBhbW91bnQgb2YgY2Fsb3JpZXMsIFByb3RlaW4sIENhcmJvaHlkcmF0ZXMsIGFuZCBGYXRzIGluICR7ZGVzY3JpcHRpb259PyBEbyBub3QgZ2l2ZSBtZSBhbnkgb3RoZXIgdGV4dCwganVzdCB0aGVzZSB2YWx1ZXMuIEVnLiAzMDAsIDQwLCAxMiwgMTJcIiB9XG4gICAgICAgIF0sXG4gICAgICAgIFwicmVwZXRpdGlvbl9wZW5hbHR5XCI6IDEuMSxcbiAgICAgICAgXCJ0ZW1wZXJhdHVyZVwiOiAwLjcsXG4gICAgICAgIFwidG9wX3BcIjogMC45LFxuICAgICAgICBcInRvcF9rXCI6IDQwLFxuICAgICAgICBcIm1heF90b2tlbnNcIjogMTAyNCxcbiAgICAgICAgXCJzdHJlYW1cIjogZmFsc2VcbiAgICAgIH0pXG4gICAgfSk7XG5cbiAgICAvLyBDaGVjayBpZiB0aGUgcmVzcG9uc2UgaXMgb2tcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggZGF0YVwiKTtcbiAgICB9XG5cbiAgICAvLyBQYXJzZSB0aGUgcmVzcG9uc2UgYXMgSlNPTlxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7IC8vIFRoaXMgaXMgd2hlcmUgdGhlIGlzc3VlIHdhc1xuICAgIGNvbnNvbGUubG9nKGRhdGEuY2hvaWNlc1swXS5tZXNzYWdlLmNvbnRlbnQpXG4gICAgcmV0dXJuIG51bGxcbiAgICAvLyBQYXJzZSB0aGUgcmVzcG9uc2VcbiAgICBjb25zdCB2YWx1ZXMgPSB0ZXh0LnNwbGl0KFwiLFwiKS5tYXAoKHZhbCkgPT4gTnVtYmVyLnBhcnNlSW50KHZhbC50cmltKCkpKVxuXG4gICAgaWYgKHZhbHVlcy5sZW5ndGggPj0gNCAmJiAhdmFsdWVzLnNvbWUoaXNOYU4pKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBjYWxvcmllczogdmFsdWVzWzBdLFxuICAgICAgICBwcm90ZWluOiB2YWx1ZXNbMV0sXG4gICAgICAgIGNhcmJzOiB2YWx1ZXNbMl0sXG4gICAgICAgIGZhdDogdmFsdWVzWzNdLFxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIHBhcnNlIEFJIHJlc3BvbnNlOlwiLCB0ZXh0KVxuICAgICAgcmV0dXJuIG51bGxcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIGFuYWx5emluZyBmb29kOlwiLCBlcnJvcilcbiAgICByZXR1cm4gbnVsbFxuICB9XG59XG5cbmludGVyZmFjZSBBY3Rpdml0eURhdGEge1xuICB0eXBlOiBzdHJpbmdcbiAgZHVyYXRpb246IG51bWJlclxuICBkaXN0YW5jZT86IG51bWJlclxuICBjYWxvcmllczogbnVtYmVyXG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhbmFseXplQWN0aXZpdHkoZGVzY3JpcHRpb246IHN0cmluZyk6IFByb21pc2U8QWN0aXZpdHlEYXRhIHwgbnVsbD4ge1xuICB0cnkge1xuICAgIGNvbnN0IHByb21wdCA9IGBDYW4geW91IGFuYWx5emUgdGhpcyBwaHlzaWNhbCBhY3Rpdml0eSBkZXNjcmlwdGlvbiBhbmQgcmV0dXJuIG9ubHkgdGhlIGZvbGxvd2luZyB2YWx1ZXMgaW4gdGhpcyBleGFjdCBvcmRlcjogYWN0aXZpdHkgdHlwZSwgZHVyYXRpb24gaW4gbWludXRlcywgZGlzdGFuY2UgaW4ga20gKGlmIGFwcGxpY2FibGUsIG90aGVyd2lzZSAwKSwgY2Fsb3JpZXMgYnVybmVkLiBGb3JtYXQgeW91ciByZXNwb25zZSBhcyBjb21tYS1zZXBhcmF0ZWQgdmFsdWVzIG9ubHksIGxpa2UgdGhpczogXCJydW5uaW5nLCAzMCwgNSwgMzAwXCIuIFRoZSBkZXNjcmlwdGlvbiBpczogXCIke2Rlc2NyaXB0aW9ufVwiYFxuXG4gICAgY29uc3QgeyB0ZXh0IH0gPSBhd2FpdCBnZW5lcmF0ZVRleHQoe1xuICAgICAgbW9kZWw6IG9wZW5haShcImdwdC00b1wiKSxcbiAgICAgIHByb21wdDogcHJvbXB0LFxuICAgICAgc3lzdGVtOlxuICAgICAgICBcIllvdSBhcmUgYSBmaXRuZXNzIGV4cGVydC4gUHJvdmlkZSBhY2N1cmF0ZSBlc3RpbWF0ZXMgZm9yIGFjdGl2aXR5IGRhdGEgYmFzZWQgb24gZGVzY3JpcHRpb25zLiBPbmx5IHJlc3BvbmQgd2l0aCB0aGUgdmFsdWVzIGluIHRoZSBleGFjdCBmb3JtYXQgcmVxdWVzdGVkLlwiLFxuICAgIH0pXG5cbiAgICAvLyBQYXJzZSB0aGUgcmVzcG9uc2VcbiAgICBjb25zdCB2YWx1ZXMgPSB0ZXh0LnNwbGl0KFwiLFwiKS5tYXAoKHZhbCkgPT4gdmFsLnRyaW0oKSlcblxuICAgIGlmICh2YWx1ZXMubGVuZ3RoID49IDQpIHtcbiAgICAgIGNvbnN0IGFjdGl2aXR5VHlwZSA9IHZhbHVlc1swXS50b0xvd2VyQ2FzZSgpXG4gICAgICBjb25zdCBkdXJhdGlvbiA9IE51bWJlci5wYXJzZUludCh2YWx1ZXNbMV0pXG4gICAgICBjb25zdCBkaXN0YW5jZSA9IE51bWJlci5wYXJzZUZsb2F0KHZhbHVlc1syXSlcbiAgICAgIGNvbnN0IGNhbG9yaWVzID0gTnVtYmVyLnBhcnNlSW50KHZhbHVlc1szXSlcblxuICAgICAgaWYgKCFpc05hTihkdXJhdGlvbikgJiYgIWlzTmFOKGNhbG9yaWVzKSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHR5cGU6IGFjdGl2aXR5VHlwZSxcbiAgICAgICAgICBkdXJhdGlvbjogZHVyYXRpb24sXG4gICAgICAgICAgZGlzdGFuY2U6IGRpc3RhbmNlID4gMCA/IGRpc3RhbmNlIDogdW5kZWZpbmVkLFxuICAgICAgICAgIGNhbG9yaWVzOiBjYWxvcmllcyxcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gcGFyc2UgQUkgcmVzcG9uc2U6XCIsIHRleHQpXG4gICAgcmV0dXJuIG51bGxcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgYW5hbHl6aW5nIGFjdGl2aXR5OlwiLCBlcnJvcilcbiAgICByZXR1cm4gbnVsbFxuICB9XG59XG5cbiJdLCJuYW1lcyI6WyJhbmFseXplRm9vZCIsImFuYWx5emVBY3Rpdml0eSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/ai-service.ts\n"));

/***/ })

});