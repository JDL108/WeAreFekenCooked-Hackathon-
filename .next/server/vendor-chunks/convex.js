"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/convex";
exports.ids = ["vendor-chunks/convex"];
exports.modules = {

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/http_client.js":
/*!*************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/http_client.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexHttpClient: () => (/* binding */ ConvexHttpClient),\n/* harmony export */   STATUS_CODE_BAD_REQUEST: () => (/* binding */ STATUS_CODE_BAD_REQUEST),\n/* harmony export */   STATUS_CODE_OK: () => (/* binding */ STATUS_CODE_OK),\n/* harmony export */   STATUS_CODE_UDF_FAILED: () => (/* binding */ STATUS_CODE_UDF_FAILED),\n/* harmony export */   setFetch: () => (/* binding */ setFetch)\n/* harmony export */ });\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\n\n\nconst STATUS_CODE_OK = 200;\nconst STATUS_CODE_BAD_REQUEST = 400;\nconst STATUS_CODE_UDF_FAILED = 560;\nlet specifiedFetch = void 0;\nfunction setFetch(f) {\n  specifiedFetch = f;\n}\nclass ConvexHttpClient {\n  /**\n   * Create a new {@link ConvexHttpClient}.\n   *\n   * @param address - The url of your Convex deployment, often provided\n   * by an environment variable. E.g. `https://small-mouse-123.convex.cloud`.\n   * @param options - An object of options.\n   * - `skipConvexDeploymentUrlCheck` - Skip validating that the Convex deployment URL looks like\n   * `https://happy-animal-123.convex.cloud` or localhost. This can be useful if running a self-hosted\n   * Convex backend that uses a different URL.\n   * - `logger` - A logger. If not provided, logs to the console.\n   * You can construct your own logger to customize logging to log elsewhere\n   * or not log at all.\n   */\n  constructor(address, options) {\n    __publicField(this, \"address\");\n    __publicField(this, \"auth\");\n    __publicField(this, \"adminAuth\");\n    __publicField(this, \"encodedTsPromise\");\n    __publicField(this, \"debug\");\n    __publicField(this, \"fetchOptions\");\n    __publicField(this, \"logger\");\n    if (typeof options === \"boolean\") {\n      throw new Error(\n        \"skipConvexDeploymentUrlCheck as the second argument is no longer supported. Please pass an options object, `{ skipConvexDeploymentUrlCheck: true }`.\"\n      );\n    }\n    const opts = options ?? {};\n    if (opts.skipConvexDeploymentUrlCheck !== true) {\n      (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.validateDeploymentUrl)(address);\n    }\n    this.logger = opts.logger ?? (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.instantiateDefaultLogger)({ verbose: false });\n    this.address = address;\n    this.debug = true;\n  }\n  /**\n   * Obtain the {@link ConvexHttpClient}'s URL to its backend.\n   * @deprecated Use url, which returns the url without /api at the end.\n   *\n   * @returns The URL to the Convex backend, including the client's API version.\n   */\n  backendUrl() {\n    return `${this.address}/api`;\n  }\n  /**\n   * Return the address for this client, useful for creating a new client.\n   *\n   * Not guaranteed to match the address with which this client was constructed:\n   * it may be canonicalized.\n   */\n  get url() {\n    return this.address;\n  }\n  /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   *\n   * Should be called whenever the token changes (i.e. due to expiration and refresh).\n   *\n   * @param value - JWT-encoded OpenID Connect identity token.\n   */\n  setAuth(value) {\n    this.clearAuth();\n    this.auth = value;\n  }\n  /**\n   * @internal\n   */\n  setAdminAuth(token, actingAsIdentity) {\n    this.clearAuth();\n    if (actingAsIdentity !== void 0) {\n      const bytes = new TextEncoder().encode(JSON.stringify(actingAsIdentity));\n      const actingAsIdentityEncoded = btoa(String.fromCodePoint(...bytes));\n      this.adminAuth = `${token}:${actingAsIdentityEncoded}`;\n    } else {\n      this.adminAuth = token;\n    }\n  }\n  /**\n   * Clear the current authentication token if set.\n   */\n  clearAuth() {\n    this.auth = void 0;\n    this.adminAuth = void 0;\n  }\n  /**\n   * Sets whether the result log lines should be printed on the console or not.\n   *\n   * @internal\n   */\n  setDebug(debug) {\n    this.debug = debug;\n  }\n  /**\n   * Used to customize the fetch behavior in some runtimes.\n   *\n   * @internal\n   */\n  setFetchOptions(fetchOptions) {\n    this.fetchOptions = fetchOptions;\n  }\n  /**\n   * This API is experimental: it may change or disappear.\n   *\n   * Execute a Convex query function at the same timestamp as every other\n   * consistent query execution run by this HTTP client.\n   *\n   * This doesn't make sense for long-lived ConvexHttpClients as Convex\n   * backends can read a limited amount into the past: beyond 30 seconds\n   * in the past may not be available.\n   *\n   * Create a new client to use a consistent time.\n   *\n   * @param name - The name of the query.\n   * @param args - The arguments object for the query. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the query's result.\n   *\n   * @deprecated This API is experimental: it may change or disappear.\n   */\n  async consistentQuery(query, ...args) {\n    const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n    const timestampPromise = this.getTimestamp();\n    return await this.queryInner(query, queryArgs, { timestampPromise });\n  }\n  async getTimestamp() {\n    if (this.encodedTsPromise) {\n      return this.encodedTsPromise;\n    }\n    return this.encodedTsPromise = this.getTimestampInner();\n  }\n  async getTimestampInner() {\n    const localFetch = specifiedFetch || fetch;\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n    };\n    const response = await localFetch(`${this.address}/api/query_ts`, {\n      ...this.fetchOptions,\n      method: \"POST\",\n      headers\n    });\n    if (!response.ok) {\n      throw new Error(await response.text());\n    }\n    const { ts } = await response.json();\n    return ts;\n  }\n  /**\n   * Execute a Convex query function.\n   *\n   * @param name - The name of the query.\n   * @param args - The arguments object for the query. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the query's result.\n   */\n  async query(query, ...args) {\n    const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n    return await this.queryInner(query, queryArgs, {});\n  }\n  async queryInner(query, queryArgs, options) {\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(query);\n    const args = [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(queryArgs)];\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n    };\n    if (this.adminAuth) {\n      headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n    } else if (this.auth) {\n      headers[\"Authorization\"] = `Bearer ${this.auth}`;\n    }\n    const localFetch = specifiedFetch || fetch;\n    const timestamp = options.timestampPromise ? await options.timestampPromise : void 0;\n    const body = JSON.stringify({\n      path: name,\n      format: \"convex_encoded_json\",\n      args,\n      ...timestamp ? { ts: timestamp } : {}\n    });\n    const endpoint = timestamp ? `${this.address}/api/query_at_ts` : `${this.address}/api/query`;\n    const response = await localFetch(endpoint, {\n      ...this.fetchOptions,\n      body,\n      method: \"POST\",\n      headers\n    });\n    if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n      throw new Error(await response.text());\n    }\n    const respJSON = await response.json();\n    if (this.debug) {\n      for (const line of respJSON.logLines ?? []) {\n        (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logForFunction)(this.logger, \"info\", \"query\", name, line);\n      }\n    }\n    switch (respJSON.status) {\n      case \"success\":\n        return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value);\n      case \"error\":\n        if (respJSON.errorData !== void 0) {\n          throw forwardErrorData(\n            respJSON.errorData,\n            new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage)\n          );\n        }\n        throw new Error(respJSON.errorMessage);\n      default:\n        throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n    }\n  }\n  /**\n   * Execute a Convex mutation function.\n   *\n   * @param name - The name of the mutation.\n   * @param args - The arguments object for the mutation. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the mutation's result.\n   */\n  async mutation(mutation, ...args) {\n    const mutationArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(mutation);\n    const body = JSON.stringify({\n      path: name,\n      format: \"convex_encoded_json\",\n      args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(mutationArgs)]\n    });\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n    };\n    if (this.adminAuth) {\n      headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n    } else if (this.auth) {\n      headers[\"Authorization\"] = `Bearer ${this.auth}`;\n    }\n    const localFetch = specifiedFetch || fetch;\n    const response = await localFetch(`${this.address}/api/mutation`, {\n      ...this.fetchOptions,\n      body,\n      method: \"POST\",\n      headers\n    });\n    if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n      throw new Error(await response.text());\n    }\n    const respJSON = await response.json();\n    if (this.debug) {\n      for (const line of respJSON.logLines ?? []) {\n        (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logForFunction)(this.logger, \"info\", \"mutation\", name, line);\n      }\n    }\n    switch (respJSON.status) {\n      case \"success\":\n        return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value);\n      case \"error\":\n        if (respJSON.errorData !== void 0) {\n          throw forwardErrorData(\n            respJSON.errorData,\n            new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage)\n          );\n        }\n        throw new Error(respJSON.errorMessage);\n      default:\n        throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n    }\n  }\n  /**\n   * Execute a Convex action function.\n   *\n   * @param name - The name of the action.\n   * @param args - The arguments object for the action. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the action's result.\n   */\n  async action(action, ...args) {\n    const actionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(action);\n    const body = JSON.stringify({\n      path: name,\n      format: \"convex_encoded_json\",\n      args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(actionArgs)]\n    });\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n    };\n    if (this.adminAuth) {\n      headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n    } else if (this.auth) {\n      headers[\"Authorization\"] = `Bearer ${this.auth}`;\n    }\n    const localFetch = specifiedFetch || fetch;\n    const response = await localFetch(`${this.address}/api/action`, {\n      ...this.fetchOptions,\n      body,\n      method: \"POST\",\n      headers\n    });\n    if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n      throw new Error(await response.text());\n    }\n    const respJSON = await response.json();\n    if (this.debug) {\n      for (const line of respJSON.logLines ?? []) {\n        (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logForFunction)(this.logger, \"info\", \"action\", name, line);\n      }\n    }\n    switch (respJSON.status) {\n      case \"success\":\n        return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value);\n      case \"error\":\n        if (respJSON.errorData !== void 0) {\n          throw forwardErrorData(\n            respJSON.errorData,\n            new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage)\n          );\n        }\n        throw new Error(respJSON.errorMessage);\n      default:\n        throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n    }\n  }\n  /**\n   * Execute a Convex function of an unknown type.\n   *\n   * @param name - The name of the function.\n   * @param args - The arguments object for the function. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the function's result.\n   *\n   * @internal\n   */\n  async function(anyFunction, componentPath, ...args) {\n    const functionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n    const name = typeof anyFunction === \"string\" ? anyFunction : (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(anyFunction);\n    const body = JSON.stringify({\n      componentPath,\n      path: name,\n      format: \"convex_encoded_json\",\n      args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.convexToJson)(functionArgs)\n    });\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_2__.version}`\n    };\n    if (this.adminAuth) {\n      headers[\"Authorization\"] = `Convex ${this.adminAuth}`;\n    } else if (this.auth) {\n      headers[\"Authorization\"] = `Bearer ${this.auth}`;\n    }\n    const localFetch = specifiedFetch || fetch;\n    const response = await localFetch(`${this.address}/api/function`, {\n      ...this.fetchOptions,\n      body,\n      method: \"POST\",\n      headers\n    });\n    if (!response.ok && response.status !== STATUS_CODE_UDF_FAILED) {\n      throw new Error(await response.text());\n    }\n    const respJSON = await response.json();\n    if (this.debug) {\n      for (const line of respJSON.logLines ?? []) {\n        (0,_logging_js__WEBPACK_IMPORTED_MODULE_4__.logForFunction)(this.logger, \"info\", \"any\", name, line);\n      }\n    }\n    switch (respJSON.status) {\n      case \"success\":\n        return (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(respJSON.value);\n      case \"error\":\n        if (respJSON.errorData !== void 0) {\n          throw forwardErrorData(\n            respJSON.errorData,\n            new _values_index_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError(respJSON.errorMessage)\n          );\n        }\n        throw new Error(respJSON.errorMessage);\n      default:\n        throw new Error(`Invalid response: ${JSON.stringify(respJSON)}`);\n    }\n  }\n}\nfunction forwardErrorData(errorData, error) {\n  error.data = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(errorData);\n  return error;\n}\n//# sourceMappingURL=http_client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/http_client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseConvexClient: () => (/* reexport safe */ _sync_client_js__WEBPACK_IMPORTED_MODULE_0__.BaseConvexClient),\n/* harmony export */   ConvexClient: () => (/* reexport safe */ _simple_client_js__WEBPACK_IMPORTED_MODULE_1__.ConvexClient),\n/* harmony export */   ConvexHttpClient: () => (/* reexport safe */ _http_client_js__WEBPACK_IMPORTED_MODULE_2__.ConvexHttpClient)\n/* harmony export */ });\n/* harmony import */ var _sync_client_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sync/client.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/client.js\");\n/* harmony import */ var _simple_client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./simple_client.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/simple_client.js\");\n/* harmony import */ var _http_client_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./http_client.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/http_client.js\");\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWE7QUFDdUM7QUFDRjtBQUNFO0FBQ3BEIiwic291cmNlcyI6WyIvVXNlcnMvamlhZGlsaS9EZXNrdG9wL3dlQXJlRmVrZW5Db2tlZC9XZUFyZUZla2VuQ29va2VkLUhhY2thdGhvbi0vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9icm93c2VyL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0IHsgQmFzZUNvbnZleENsaWVudCB9IGZyb20gXCIuL3N5bmMvY2xpZW50LmpzXCI7XG5leHBvcnQgeyBDb252ZXhDbGllbnQgfSBmcm9tIFwiLi9zaW1wbGVfY2xpZW50LmpzXCI7XG5leHBvcnQgeyBDb252ZXhIdHRwQ2xpZW50IH0gZnJvbSBcIi4vaHR0cF9jbGllbnQuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/logging.js":
/*!*********************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/logging.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Logger: () => (/* binding */ Logger),\n/* harmony export */   createHybridErrorStacktrace: () => (/* binding */ createHybridErrorStacktrace),\n/* harmony export */   forwardData: () => (/* binding */ forwardData),\n/* harmony export */   instantiateDefaultLogger: () => (/* binding */ instantiateDefaultLogger),\n/* harmony export */   logFatalError: () => (/* binding */ logFatalError),\n/* harmony export */   logForFunction: () => (/* binding */ logForFunction)\n/* harmony export */ });\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nconst INFO_COLOR = \"color:rgb(0, 145, 255)\";\nfunction prefix_for_source(source) {\n  switch (source) {\n    case \"query\":\n      return \"Q\";\n    case \"mutation\":\n      return \"M\";\n    case \"action\":\n      return \"A\";\n    case \"any\":\n      return \"?\";\n  }\n}\nclass Logger {\n  constructor(options) {\n    __publicField(this, \"_onLogLineFuncs\");\n    __publicField(this, \"_verbose\");\n    this._onLogLineFuncs = {};\n    this._verbose = options.verbose;\n  }\n  addLogLineListener(func) {\n    let id = Math.random().toString(36).substring(2, 15);\n    for (let i = 0; i < 10; i++) {\n      if (this._onLogLineFuncs[id] === void 0) {\n        break;\n      }\n      id = Math.random().toString(36).substring(2, 15);\n    }\n    this._onLogLineFuncs[id] = func;\n    return () => {\n      delete this._onLogLineFuncs[id];\n    };\n  }\n  logVerbose(...args) {\n    if (this._verbose) {\n      for (const func of Object.values(this._onLogLineFuncs)) {\n        func(\"debug\", `${(/* @__PURE__ */ new Date()).toISOString()}`, ...args);\n      }\n    }\n  }\n  log(...args) {\n    for (const func of Object.values(this._onLogLineFuncs)) {\n      func(\"info\", ...args);\n    }\n  }\n  warn(...args) {\n    for (const func of Object.values(this._onLogLineFuncs)) {\n      func(\"warn\", ...args);\n    }\n  }\n  error(...args) {\n    for (const func of Object.values(this._onLogLineFuncs)) {\n      func(\"error\", ...args);\n    }\n  }\n}\nfunction instantiateDefaultLogger(options) {\n  const logger = new Logger(options);\n  logger.addLogLineListener((level, ...args) => {\n    switch (level) {\n      case \"debug\":\n        console.debug(...args);\n        break;\n      case \"info\":\n        console.log(...args);\n        break;\n      case \"warn\":\n        console.warn(...args);\n        break;\n      case \"error\":\n        console.error(...args);\n        break;\n      default: {\n        const _typecheck = level;\n        console.log(...args);\n      }\n    }\n  });\n  return logger;\n}\nfunction logForFunction(logger, type, source, udfPath, message) {\n  const prefix = prefix_for_source(source);\n  if (typeof message === \"object\") {\n    message = `ConvexError ${JSON.stringify(message.errorData, null, 2)}`;\n  }\n  if (type === \"info\") {\n    const match = message.match(/^\\[.*?\\] /);\n    if (match === null) {\n      logger.error(\n        `[CONVEX ${prefix}(${udfPath})] Could not parse console.log`\n      );\n      return;\n    }\n    const level = message.slice(1, match[0].length - 2);\n    const args = message.slice(match[0].length);\n    logger.log(`%c[CONVEX ${prefix}(${udfPath})] [${level}]`, INFO_COLOR, args);\n  } else {\n    logger.error(`[CONVEX ${prefix}(${udfPath})] ${message}`);\n  }\n}\nfunction logFatalError(logger, message) {\n  const errorMessage = `[CONVEX FATAL ERROR] ${message}`;\n  logger.error(errorMessage);\n  return new Error(errorMessage);\n}\nfunction createHybridErrorStacktrace(source, udfPath, result) {\n  const prefix = prefix_for_source(source);\n  return `[CONVEX ${prefix}(${udfPath})] ${result.errorMessage}\n  Called by client`;\n}\nfunction forwardData(result, error) {\n  error.data = result.errorData;\n  return error;\n}\n//# sourceMappingURL=logging.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvbG9nZ2luZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTtBQUNiO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFFBQVE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsMkNBQTJDO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSw2QkFBNkIsMkNBQTJDO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsT0FBTyxHQUFHLFFBQVE7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixPQUFPLEdBQUcsUUFBUSxNQUFNLE1BQU07QUFDMUQsSUFBSTtBQUNKLDRCQUE0QixPQUFPLEdBQUcsUUFBUSxLQUFLLFFBQVE7QUFDM0Q7QUFDQTtBQUNPO0FBQ1AsK0NBQStDLFFBQVE7QUFDdkQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLG9CQUFvQixPQUFPLEdBQUcsUUFBUSxLQUFLO0FBQzNDO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvamlhZGlsaS9EZXNrdG9wL3dlQXJlRmVrZW5Db2tlZC9XZUFyZUZla2VuQ29va2VkLUhhY2thdGhvbi0vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9icm93c2VyL2xvZ2dpbmcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3Aob2JqLCB0eXBlb2Yga2V5ICE9PSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xuY29uc3QgSU5GT19DT0xPUiA9IFwiY29sb3I6cmdiKDAsIDE0NSwgMjU1KVwiO1xuZnVuY3Rpb24gcHJlZml4X2Zvcl9zb3VyY2Uoc291cmNlKSB7XG4gIHN3aXRjaCAoc291cmNlKSB7XG4gICAgY2FzZSBcInF1ZXJ5XCI6XG4gICAgICByZXR1cm4gXCJRXCI7XG4gICAgY2FzZSBcIm11dGF0aW9uXCI6XG4gICAgICByZXR1cm4gXCJNXCI7XG4gICAgY2FzZSBcImFjdGlvblwiOlxuICAgICAgcmV0dXJuIFwiQVwiO1xuICAgIGNhc2UgXCJhbnlcIjpcbiAgICAgIHJldHVybiBcIj9cIjtcbiAgfVxufVxuZXhwb3J0IGNsYXNzIExvZ2dlciB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiX29uTG9nTGluZUZ1bmNzXCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJfdmVyYm9zZVwiKTtcbiAgICB0aGlzLl9vbkxvZ0xpbmVGdW5jcyA9IHt9O1xuICAgIHRoaXMuX3ZlcmJvc2UgPSBvcHRpb25zLnZlcmJvc2U7XG4gIH1cbiAgYWRkTG9nTGluZUxpc3RlbmVyKGZ1bmMpIHtcbiAgICBsZXQgaWQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMiwgMTUpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xuICAgICAgaWYgKHRoaXMuX29uTG9nTGluZUZ1bmNzW2lkXSA9PT0gdm9pZCAwKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgaWQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMiwgMTUpO1xuICAgIH1cbiAgICB0aGlzLl9vbkxvZ0xpbmVGdW5jc1tpZF0gPSBmdW5jO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBkZWxldGUgdGhpcy5fb25Mb2dMaW5lRnVuY3NbaWRdO1xuICAgIH07XG4gIH1cbiAgbG9nVmVyYm9zZSguLi5hcmdzKSB7XG4gICAgaWYgKHRoaXMuX3ZlcmJvc2UpIHtcbiAgICAgIGZvciAoY29uc3QgZnVuYyBvZiBPYmplY3QudmFsdWVzKHRoaXMuX29uTG9nTGluZUZ1bmNzKSkge1xuICAgICAgICBmdW5jKFwiZGVidWdcIiwgYCR7KC8qIEBfX1BVUkVfXyAqLyBuZXcgRGF0ZSgpKS50b0lTT1N0cmluZygpfWAsIC4uLmFyZ3MpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBsb2coLi4uYXJncykge1xuICAgIGZvciAoY29uc3QgZnVuYyBvZiBPYmplY3QudmFsdWVzKHRoaXMuX29uTG9nTGluZUZ1bmNzKSkge1xuICAgICAgZnVuYyhcImluZm9cIiwgLi4uYXJncyk7XG4gICAgfVxuICB9XG4gIHdhcm4oLi4uYXJncykge1xuICAgIGZvciAoY29uc3QgZnVuYyBvZiBPYmplY3QudmFsdWVzKHRoaXMuX29uTG9nTGluZUZ1bmNzKSkge1xuICAgICAgZnVuYyhcIndhcm5cIiwgLi4uYXJncyk7XG4gICAgfVxuICB9XG4gIGVycm9yKC4uLmFyZ3MpIHtcbiAgICBmb3IgKGNvbnN0IGZ1bmMgb2YgT2JqZWN0LnZhbHVlcyh0aGlzLl9vbkxvZ0xpbmVGdW5jcykpIHtcbiAgICAgIGZ1bmMoXCJlcnJvclwiLCAuLi5hcmdzKTtcbiAgICB9XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBpbnN0YW50aWF0ZURlZmF1bHRMb2dnZXIob3B0aW9ucykge1xuICBjb25zdCBsb2dnZXIgPSBuZXcgTG9nZ2VyKG9wdGlvbnMpO1xuICBsb2dnZXIuYWRkTG9nTGluZUxpc3RlbmVyKChsZXZlbCwgLi4uYXJncykgPT4ge1xuICAgIHN3aXRjaCAobGV2ZWwpIHtcbiAgICAgIGNhc2UgXCJkZWJ1Z1wiOlxuICAgICAgICBjb25zb2xlLmRlYnVnKC4uLmFyZ3MpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJpbmZvXCI6XG4gICAgICAgIGNvbnNvbGUubG9nKC4uLmFyZ3MpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJ3YXJuXCI6XG4gICAgICAgIGNvbnNvbGUud2FybiguLi5hcmdzKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiZXJyb3JcIjpcbiAgICAgICAgY29uc29sZS5lcnJvciguLi5hcmdzKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OiB7XG4gICAgICAgIGNvbnN0IF90eXBlY2hlY2sgPSBsZXZlbDtcbiAgICAgICAgY29uc29sZS5sb2coLi4uYXJncyk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGxvZ2dlcjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBsb2dGb3JGdW5jdGlvbihsb2dnZXIsIHR5cGUsIHNvdXJjZSwgdWRmUGF0aCwgbWVzc2FnZSkge1xuICBjb25zdCBwcmVmaXggPSBwcmVmaXhfZm9yX3NvdXJjZShzb3VyY2UpO1xuICBpZiAodHlwZW9mIG1lc3NhZ2UgPT09IFwib2JqZWN0XCIpIHtcbiAgICBtZXNzYWdlID0gYENvbnZleEVycm9yICR7SlNPTi5zdHJpbmdpZnkobWVzc2FnZS5lcnJvckRhdGEsIG51bGwsIDIpfWA7XG4gIH1cbiAgaWYgKHR5cGUgPT09IFwiaW5mb1wiKSB7XG4gICAgY29uc3QgbWF0Y2ggPSBtZXNzYWdlLm1hdGNoKC9eXFxbLio/XFxdIC8pO1xuICAgIGlmIChtYXRjaCA9PT0gbnVsbCkge1xuICAgICAgbG9nZ2VyLmVycm9yKFxuICAgICAgICBgW0NPTlZFWCAke3ByZWZpeH0oJHt1ZGZQYXRofSldIENvdWxkIG5vdCBwYXJzZSBjb25zb2xlLmxvZ2BcbiAgICAgICk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IGxldmVsID0gbWVzc2FnZS5zbGljZSgxLCBtYXRjaFswXS5sZW5ndGggLSAyKTtcbiAgICBjb25zdCBhcmdzID0gbWVzc2FnZS5zbGljZShtYXRjaFswXS5sZW5ndGgpO1xuICAgIGxvZ2dlci5sb2coYCVjW0NPTlZFWCAke3ByZWZpeH0oJHt1ZGZQYXRofSldIFske2xldmVsfV1gLCBJTkZPX0NPTE9SLCBhcmdzKTtcbiAgfSBlbHNlIHtcbiAgICBsb2dnZXIuZXJyb3IoYFtDT05WRVggJHtwcmVmaXh9KCR7dWRmUGF0aH0pXSAke21lc3NhZ2V9YCk7XG4gIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBsb2dGYXRhbEVycm9yKGxvZ2dlciwgbWVzc2FnZSkge1xuICBjb25zdCBlcnJvck1lc3NhZ2UgPSBgW0NPTlZFWCBGQVRBTCBFUlJPUl0gJHttZXNzYWdlfWA7XG4gIGxvZ2dlci5lcnJvcihlcnJvck1lc3NhZ2UpO1xuICByZXR1cm4gbmV3IEVycm9yKGVycm9yTWVzc2FnZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlSHlicmlkRXJyb3JTdGFja3RyYWNlKHNvdXJjZSwgdWRmUGF0aCwgcmVzdWx0KSB7XG4gIGNvbnN0IHByZWZpeCA9IHByZWZpeF9mb3Jfc291cmNlKHNvdXJjZSk7XG4gIHJldHVybiBgW0NPTlZFWCAke3ByZWZpeH0oJHt1ZGZQYXRofSldICR7cmVzdWx0LmVycm9yTWVzc2FnZX1cbiAgQ2FsbGVkIGJ5IGNsaWVudGA7XG59XG5leHBvcnQgZnVuY3Rpb24gZm9yd2FyZERhdGEocmVzdWx0LCBlcnJvcikge1xuICBlcnJvci5kYXRhID0gcmVzdWx0LmVycm9yRGF0YTtcbiAgcmV0dXJuIGVycm9yO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nZ2luZy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/logging.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/long.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/long.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Long: () => (/* binding */ Long)\n/* harmony export */ });\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nclass Long {\n  constructor(low, high) {\n    __publicField(this, \"low\");\n    __publicField(this, \"high\");\n    __publicField(this, \"__isUnsignedLong__\");\n    this.low = low | 0;\n    this.high = high | 0;\n    this.__isUnsignedLong__ = true;\n  }\n  static isLong(obj) {\n    return (obj && obj.__isUnsignedLong__) === true;\n  }\n  // prettier-ignore\n  static fromBytesLE(bytes) {\n    return new Long(\n      bytes[0] | bytes[1] << 8 | bytes[2] << 16 | bytes[3] << 24,\n      bytes[4] | bytes[5] << 8 | bytes[6] << 16 | bytes[7] << 24\n    );\n  }\n  // prettier-ignore\n  toBytesLE() {\n    const hi = this.high;\n    const lo = this.low;\n    return [\n      lo & 255,\n      lo >>> 8 & 255,\n      lo >>> 16 & 255,\n      lo >>> 24,\n      hi & 255,\n      hi >>> 8 & 255,\n      hi >>> 16 & 255,\n      hi >>> 24\n    ];\n  }\n  static fromNumber(value) {\n    if (isNaN(value)) return UZERO;\n    if (value < 0) return UZERO;\n    if (value >= TWO_PWR_64_DBL) return MAX_UNSIGNED_VALUE;\n    return new Long(value % TWO_PWR_32_DBL | 0, value / TWO_PWR_32_DBL | 0);\n  }\n  toString() {\n    return (BigInt(this.high) * BigInt(TWO_PWR_32_DBL) + BigInt(this.low)).toString();\n  }\n  equals(other) {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    if (this.high >>> 31 === 1 && other.high >>> 31 === 1) return false;\n    return this.high === other.high && this.low === other.low;\n  }\n  notEquals(other) {\n    return !this.equals(other);\n  }\n  comp(other) {\n    if (!Long.isLong(other)) other = Long.fromValue(other);\n    if (this.equals(other)) return 0;\n    return other.high >>> 0 > this.high >>> 0 || other.high === this.high && other.low >>> 0 > this.low >>> 0 ? -1 : 1;\n  }\n  lessThanOrEqual(other) {\n    return this.comp(\n      /* validates */\n      other\n    ) <= 0;\n  }\n  static fromValue(val) {\n    if (typeof val === \"number\") return Long.fromNumber(val);\n    return new Long(val.low, val.high);\n  }\n}\nconst UZERO = new Long(0, 0);\nconst TWO_PWR_16_DBL = 1 << 16;\nconst TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\nconst TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\nconst MAX_UNSIGNED_VALUE = new Long(4294967295 | 0, 4294967295 | 0);\n//# sourceMappingURL=long.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvbG9uZy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7QUFDYjtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2ppYWRpbGkvRGVza3RvcC93ZUFyZUZla2VuQ29rZWQvV2VBcmVGZWtlbkNvb2tlZC1IYWNrYXRob24tL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vYnJvd3Nlci9sb25nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3B1YmxpY0ZpZWxkID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4gX19kZWZOb3JtYWxQcm9wKG9iaiwgdHlwZW9mIGtleSAhPT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcbmV4cG9ydCBjbGFzcyBMb25nIHtcbiAgY29uc3RydWN0b3IobG93LCBoaWdoKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImxvd1wiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiaGlnaFwiKTtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiX19pc1Vuc2lnbmVkTG9uZ19fXCIpO1xuICAgIHRoaXMubG93ID0gbG93IHwgMDtcbiAgICB0aGlzLmhpZ2ggPSBoaWdoIHwgMDtcbiAgICB0aGlzLl9faXNVbnNpZ25lZExvbmdfXyA9IHRydWU7XG4gIH1cbiAgc3RhdGljIGlzTG9uZyhvYmopIHtcbiAgICByZXR1cm4gKG9iaiAmJiBvYmouX19pc1Vuc2lnbmVkTG9uZ19fKSA9PT0gdHJ1ZTtcbiAgfVxuICAvLyBwcmV0dGllci1pZ25vcmVcbiAgc3RhdGljIGZyb21CeXRlc0xFKGJ5dGVzKSB7XG4gICAgcmV0dXJuIG5ldyBMb25nKFxuICAgICAgYnl0ZXNbMF0gfCBieXRlc1sxXSA8PCA4IHwgYnl0ZXNbMl0gPDwgMTYgfCBieXRlc1szXSA8PCAyNCxcbiAgICAgIGJ5dGVzWzRdIHwgYnl0ZXNbNV0gPDwgOCB8IGJ5dGVzWzZdIDw8IDE2IHwgYnl0ZXNbN10gPDwgMjRcbiAgICApO1xuICB9XG4gIC8vIHByZXR0aWVyLWlnbm9yZVxuICB0b0J5dGVzTEUoKSB7XG4gICAgY29uc3QgaGkgPSB0aGlzLmhpZ2g7XG4gICAgY29uc3QgbG8gPSB0aGlzLmxvdztcbiAgICByZXR1cm4gW1xuICAgICAgbG8gJiAyNTUsXG4gICAgICBsbyA+Pj4gOCAmIDI1NSxcbiAgICAgIGxvID4+PiAxNiAmIDI1NSxcbiAgICAgIGxvID4+PiAyNCxcbiAgICAgIGhpICYgMjU1LFxuICAgICAgaGkgPj4+IDggJiAyNTUsXG4gICAgICBoaSA+Pj4gMTYgJiAyNTUsXG4gICAgICBoaSA+Pj4gMjRcbiAgICBdO1xuICB9XG4gIHN0YXRpYyBmcm9tTnVtYmVyKHZhbHVlKSB7XG4gICAgaWYgKGlzTmFOKHZhbHVlKSkgcmV0dXJuIFVaRVJPO1xuICAgIGlmICh2YWx1ZSA8IDApIHJldHVybiBVWkVSTztcbiAgICBpZiAodmFsdWUgPj0gVFdPX1BXUl82NF9EQkwpIHJldHVybiBNQVhfVU5TSUdORURfVkFMVUU7XG4gICAgcmV0dXJuIG5ldyBMb25nKHZhbHVlICUgVFdPX1BXUl8zMl9EQkwgfCAwLCB2YWx1ZSAvIFRXT19QV1JfMzJfREJMIHwgMCk7XG4gIH1cbiAgdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIChCaWdJbnQodGhpcy5oaWdoKSAqIEJpZ0ludChUV09fUFdSXzMyX0RCTCkgKyBCaWdJbnQodGhpcy5sb3cpKS50b1N0cmluZygpO1xuICB9XG4gIGVxdWFscyhvdGhlcikge1xuICAgIGlmICghTG9uZy5pc0xvbmcob3RoZXIpKSBvdGhlciA9IExvbmcuZnJvbVZhbHVlKG90aGVyKTtcbiAgICBpZiAodGhpcy5oaWdoID4+PiAzMSA9PT0gMSAmJiBvdGhlci5oaWdoID4+PiAzMSA9PT0gMSkgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0aGlzLmhpZ2ggPT09IG90aGVyLmhpZ2ggJiYgdGhpcy5sb3cgPT09IG90aGVyLmxvdztcbiAgfVxuICBub3RFcXVhbHMob3RoZXIpIHtcbiAgICByZXR1cm4gIXRoaXMuZXF1YWxzKG90aGVyKTtcbiAgfVxuICBjb21wKG90aGVyKSB7XG4gICAgaWYgKCFMb25nLmlzTG9uZyhvdGhlcikpIG90aGVyID0gTG9uZy5mcm9tVmFsdWUob3RoZXIpO1xuICAgIGlmICh0aGlzLmVxdWFscyhvdGhlcikpIHJldHVybiAwO1xuICAgIHJldHVybiBvdGhlci5oaWdoID4+PiAwID4gdGhpcy5oaWdoID4+PiAwIHx8IG90aGVyLmhpZ2ggPT09IHRoaXMuaGlnaCAmJiBvdGhlci5sb3cgPj4+IDAgPiB0aGlzLmxvdyA+Pj4gMCA/IC0xIDogMTtcbiAgfVxuICBsZXNzVGhhbk9yRXF1YWwob3RoZXIpIHtcbiAgICByZXR1cm4gdGhpcy5jb21wKFxuICAgICAgLyogdmFsaWRhdGVzICovXG4gICAgICBvdGhlclxuICAgICkgPD0gMDtcbiAgfVxuICBzdGF0aWMgZnJvbVZhbHVlKHZhbCkge1xuICAgIGlmICh0eXBlb2YgdmFsID09PSBcIm51bWJlclwiKSByZXR1cm4gTG9uZy5mcm9tTnVtYmVyKHZhbCk7XG4gICAgcmV0dXJuIG5ldyBMb25nKHZhbC5sb3csIHZhbC5oaWdoKTtcbiAgfVxufVxuY29uc3QgVVpFUk8gPSBuZXcgTG9uZygwLCAwKTtcbmNvbnN0IFRXT19QV1JfMTZfREJMID0gMSA8PCAxNjtcbmNvbnN0IFRXT19QV1JfMzJfREJMID0gVFdPX1BXUl8xNl9EQkwgKiBUV09fUFdSXzE2X0RCTDtcbmNvbnN0IFRXT19QV1JfNjRfREJMID0gVFdPX1BXUl8zMl9EQkwgKiBUV09fUFdSXzMyX0RCTDtcbmNvbnN0IE1BWF9VTlNJR05FRF9WQUxVRSA9IG5ldyBMb25nKDQyOTQ5NjcyOTUgfCAwLCA0Mjk0OTY3Mjk1IHwgMCk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb25nLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/long.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/simple_client.js":
/*!***************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/simple_client.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexClient: () => (/* binding */ ConvexClient),\n/* harmony export */   setDefaultWebSocketConstructor: () => (/* binding */ setDefaultWebSocketConstructor)\n/* harmony export */ });\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/index.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\nlet defaultWebSocketConstructor;\nfunction setDefaultWebSocketConstructor(ws) {\n  defaultWebSocketConstructor = ws;\n}\nclass ConvexClient {\n  /**\n   * Construct a client and immediately initiate a WebSocket connection to the passed address.\n   *\n   * @public\n   */\n  constructor(address, options = {}) {\n    __publicField(this, \"listeners\");\n    __publicField(this, \"_client\");\n    // A synthetic server event to run callbacks the first time\n    __publicField(this, \"callNewListenersWithCurrentValuesTimer\");\n    __publicField(this, \"_closed\");\n    __publicField(this, \"disabled\");\n    if (options.skipConvexDeploymentUrlCheck !== true) {\n      (0,_common_index_js__WEBPACK_IMPORTED_MODULE_0__.validateDeploymentUrl)(address);\n    }\n    const { disabled, ...baseOptions } = options;\n    this._closed = false;\n    this.disabled = !!disabled;\n    if (defaultWebSocketConstructor && !(\"webSocketConstructor\" in baseOptions) && typeof WebSocket === \"undefined\") {\n      baseOptions.webSocketConstructor = defaultWebSocketConstructor;\n    }\n    if (typeof window === \"undefined\" && !(\"unsavedChangesWarning\" in baseOptions)) {\n      baseOptions.unsavedChangesWarning = false;\n    }\n    if (!this.disabled) {\n      this._client = new _index_js__WEBPACK_IMPORTED_MODULE_1__.BaseConvexClient(\n        address,\n        (updatedQueries) => this._transition(updatedQueries),\n        baseOptions\n      );\n    }\n    this.listeners = /* @__PURE__ */ new Set();\n  }\n  /**\n   * Once closed no registered callbacks will fire again.\n   */\n  get closed() {\n    return this._closed;\n  }\n  get client() {\n    if (this._client) return this._client;\n    throw new Error(\"ConvexClient is disabled\");\n  }\n  /**\n   * Call a callback whenever a new result for a query is received. The callback\n   * will run soon after being registered if a result for the query is already\n   * in memory.\n   *\n   * The return value is an {@link Unsubscribe} object which is both a function\n   * an an object with properties. Both of the patterns below work with this object:\n   *\n   *```ts\n   * // call the return value as a function\n   * const unsubscribe = client.onUpdate(api.messages.list, {}, (messages) => {\n   *   console.log(messages);\n   * });\n   * unsubscribe();\n   *\n   * // unpack the return value into its properties\n   * const {\n   *   getCurrentValue,\n   *   unsubscribe,\n   * } = client.onUpdate(api.messages.list, {}, (messages) => {\n   *   console.log(messages);\n   * });\n   *```\n   *\n   * @param query - A {@link server.FunctionReference} for the public query to run.\n   * @param args - The arguments to run the query with.\n   * @param callback - Function to call when the query result updates.\n   * @param onError - Function to call when the query result updates with an error.\n   * If not provided, errors will be thrown instead of calling the callback.\n   *\n   * @return an {@link Unsubscribe} function to stop calling the onUpdate function.\n   */\n  onUpdate(query, args, callback, onError) {\n    if (this.disabled) {\n      const disabledUnsubscribe = () => {\n      };\n      const unsubscribeProps2 = {\n        unsubscribe: disabledUnsubscribe,\n        getCurrentValue: () => void 0,\n        getQueryLogs: () => void 0\n      };\n      Object.assign(disabledUnsubscribe, unsubscribeProps2);\n      return disabledUnsubscribe;\n    }\n    const { queryToken, unsubscribe } = this.client.subscribe(\n      (0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(query),\n      args\n    );\n    const queryInfo = {\n      queryToken,\n      callback,\n      onError,\n      unsubscribe,\n      hasEverRun: false,\n      query,\n      args\n    };\n    this.listeners.add(queryInfo);\n    if (this.queryResultReady(queryToken) && this.callNewListenersWithCurrentValuesTimer === void 0) {\n      this.callNewListenersWithCurrentValuesTimer = setTimeout(\n        () => this.callNewListenersWithCurrentValues(),\n        0\n      );\n    }\n    const unsubscribeProps = {\n      unsubscribe: () => {\n        if (this.closed) {\n          return;\n        }\n        this.listeners.delete(queryInfo);\n        unsubscribe();\n      },\n      getCurrentValue: () => this.client.localQueryResultByToken(queryToken),\n      getQueryLogs: () => this.client.localQueryLogs(queryToken)\n    };\n    const ret = unsubscribeProps.unsubscribe;\n    Object.assign(ret, unsubscribeProps);\n    return ret;\n  }\n  // Run all callbacks that have never been run before if they have a query\n  // result available now.\n  callNewListenersWithCurrentValues() {\n    this.callNewListenersWithCurrentValuesTimer = void 0;\n    this._transition([], true);\n  }\n  queryResultReady(queryToken) {\n    return this.client.hasLocalQueryResultByToken(queryToken);\n  }\n  async close() {\n    if (this.disabled) return;\n    this.listeners.clear();\n    this._closed = true;\n    return this.client.close();\n  }\n  /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   * `fetchToken` will be called automatically again if a token expires.\n   * `fetchToken` should return `null` if the token cannot be retrieved, for example\n   * when the user's rights were permanently revoked.\n   * @param fetchToken - an async function returning the JWT-encoded OpenID Connect Identity Token\n   * @param onChange - a callback that will be called when the authentication status changes\n   */\n  setAuth(fetchToken, onChange) {\n    this.client.setAuth(\n      fetchToken,\n      onChange ?? (() => {\n      })\n    );\n  }\n  /**\n   * @internal\n   */\n  setAdminAuth(token, identity) {\n    if (this.closed) {\n      throw new Error(\"ConvexClient has already been closed.\");\n    }\n    if (this.disabled) return;\n    this.client.setAdminAuth(token, identity);\n  }\n  /**\n   * @internal\n   */\n  _transition(updatedQueries, callNewListeners = false) {\n    for (const queryInfo of this.listeners) {\n      const { callback, queryToken, onError, hasEverRun } = queryInfo;\n      if (updatedQueries.includes(queryToken) || callNewListeners && !hasEverRun && this.client.hasLocalQueryResultByToken(queryToken)) {\n        queryInfo.hasEverRun = true;\n        let newValue;\n        try {\n          newValue = this.client.localQueryResultByToken(queryToken);\n        } catch (error) {\n          if (!(error instanceof Error)) throw error;\n          if (onError) {\n            onError(\n              error,\n              \"Second argument to onUpdate onError is reserved for later use\"\n            );\n          } else {\n            void Promise.reject(error);\n          }\n          continue;\n        }\n        callback(\n          newValue,\n          \"Second argument to onUpdate callback is reserved for later use\"\n        );\n      }\n    }\n  }\n  /**\n   * Execute a mutation function.\n   *\n   * @param mutation - A {@link server.FunctionReference} for the public mutation\n   * to run.\n   * @param args - An arguments object for the mutation.\n   * @param options - A {@link MutationOptions} options object for the mutation.\n   * @returns A promise of the mutation's result.\n   */\n  async mutation(mutation, args) {\n    if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n    return await this.client.mutation((0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(mutation), args);\n  }\n  /**\n   * Execute an action function.\n   *\n   * @param action - A {@link server.FunctionReference} for the public action\n   * to run.\n   * @param args - An arguments object for the action.\n   * @returns A promise of the action's result.\n   */\n  async action(action, args) {\n    if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n    return await this.client.action((0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(action), args);\n  }\n  /**\n   * Fetch a query result once.\n   *\n   * @param query - A {@link server.FunctionReference} for the public query\n   * to run.\n   * @param args - An arguments object for the query.\n   * @returns A promise of the query's result.\n   */\n  async query(query, args) {\n    if (this.disabled) throw new Error(\"ConvexClient is disabled\");\n    const value = this.client.localQueryResult((0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(query), args);\n    if (value !== void 0) return Promise.resolve(value);\n    return new Promise((resolve, reject) => {\n      const { unsubscribe } = this.onUpdate(\n        query,\n        args,\n        (value2) => {\n          unsubscribe();\n          resolve(value2);\n        },\n        (e) => {\n          unsubscribe();\n          reject(e);\n        }\n      );\n    });\n  }\n}\n//# sourceMappingURL=simple_client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/simple_client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/authentication_manager.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/authentication_manager.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthenticationManager: () => (/* binding */ AuthenticationManager)\n/* harmony export */ });\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jwt-decode */ \"(ssr)/./node_modules/jwt-decode/build/jwt-decode.esm.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\nconst MAXIMUM_REFRESH_DELAY = 20 * 24 * 60 * 60 * 1e3;\nclass AuthenticationManager {\n  constructor(syncState, callbacks, config) {\n    __publicField(this, \"authState\", { state: \"noAuth\" });\n    // Used to detect races involving `setConfig` calls\n    // while a token is being fetched.\n    __publicField(this, \"configVersion\", 0);\n    // Shared by the BaseClient so that the auth manager can easily inspect it\n    __publicField(this, \"syncState\");\n    // Passed down by BaseClient, sends a message to the server\n    __publicField(this, \"authenticate\");\n    __publicField(this, \"stopSocket\");\n    __publicField(this, \"restartSocket\");\n    __publicField(this, \"pauseSocket\");\n    __publicField(this, \"resumeSocket\");\n    // Passed down by BaseClient, sends a message to the server\n    __publicField(this, \"clearAuth\");\n    __publicField(this, \"logger\");\n    __publicField(this, \"refreshTokenLeewaySeconds\");\n    this.syncState = syncState;\n    this.authenticate = callbacks.authenticate;\n    this.stopSocket = callbacks.stopSocket;\n    this.restartSocket = callbacks.restartSocket;\n    this.pauseSocket = callbacks.pauseSocket;\n    this.resumeSocket = callbacks.resumeSocket;\n    this.clearAuth = callbacks.clearAuth;\n    this.logger = config.logger;\n    this.refreshTokenLeewaySeconds = config.refreshTokenLeewaySeconds;\n  }\n  async setConfig(fetchToken, onChange) {\n    this.resetAuthState();\n    this._logVerbose(\"pausing WS for auth token fetch\");\n    this.pauseSocket();\n    const token = await this.fetchTokenAndGuardAgainstRace(fetchToken, {\n      forceRefreshToken: false\n    });\n    if (token.isFromOutdatedConfig) {\n      return;\n    }\n    if (token.value) {\n      this.setAuthState({\n        state: \"waitingForServerConfirmationOfCachedToken\",\n        config: { fetchToken, onAuthChange: onChange },\n        hasRetried: false\n      });\n      this.authenticate(token.value);\n      this._logVerbose(\"resuming WS after auth token fetch\");\n      this.resumeSocket();\n    } else {\n      this.setAuthState({\n        state: \"initialRefetch\",\n        config: { fetchToken, onAuthChange: onChange }\n      });\n      await this.refetchToken();\n    }\n  }\n  onTransition(serverMessage) {\n    if (!this.syncState.isCurrentOrNewerAuthVersion(\n      serverMessage.endVersion.identity\n    )) {\n      return;\n    }\n    if (serverMessage.endVersion.identity <= serverMessage.startVersion.identity) {\n      return;\n    }\n    if (this.authState.state === \"waitingForServerConfirmationOfCachedToken\") {\n      this._logVerbose(\"server confirmed auth token is valid\");\n      void this.refetchToken();\n      this.authState.config.onAuthChange(true);\n      return;\n    }\n    if (this.authState.state === \"waitingForServerConfirmationOfFreshToken\") {\n      this._logVerbose(\"server confirmed new auth token is valid\");\n      this.scheduleTokenRefetch(this.authState.token);\n      if (!this.authState.hadAuth) {\n        this.authState.config.onAuthChange(true);\n      }\n    }\n  }\n  onAuthError(serverMessage) {\n    const { baseVersion } = serverMessage;\n    if (baseVersion !== null && baseVersion !== void 0) {\n      if (!this.syncState.isCurrentOrNewerAuthVersion(baseVersion + 1)) {\n        this._logVerbose(\"ignoring auth error for previous auth attempt\");\n        return;\n      }\n      void this.tryToReauthenticate(serverMessage);\n      return;\n    }\n    void this.tryToReauthenticate(serverMessage);\n  }\n  // This is similar to `refetchToken` defined below, in fact we\n  // don't represent them as different states, but it is different\n  // in that we pause the WebSocket so that mutations\n  // don't retry with bad auth.\n  async tryToReauthenticate(serverMessage) {\n    if (\n      // No way to fetch another token, kaboom\n      this.authState.state === \"noAuth\" || // We failed on a fresh token, trying another one won't help\n      this.authState.state === \"waitingForServerConfirmationOfFreshToken\"\n    ) {\n      this.logger.error(\n        `Failed to authenticate: \"${serverMessage.error}\", check your server auth config`\n      );\n      if (this.syncState.hasAuth()) {\n        this.syncState.clearAuth();\n      }\n      if (this.authState.state !== \"noAuth\") {\n        this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n      }\n      return;\n    }\n    this._logVerbose(\"attempting to reauthenticate\");\n    await this.stopSocket();\n    const token = await this.fetchTokenAndGuardAgainstRace(\n      this.authState.config.fetchToken,\n      {\n        forceRefreshToken: true\n      }\n    );\n    if (token.isFromOutdatedConfig) {\n      return;\n    }\n    if (token.value && this.syncState.isNewAuth(token.value)) {\n      this.authenticate(token.value);\n      this.setAuthState({\n        state: \"waitingForServerConfirmationOfFreshToken\",\n        config: this.authState.config,\n        token: token.value,\n        hadAuth: this.authState.state === \"notRefetching\" || this.authState.state === \"waitingForScheduledRefetch\"\n      });\n    } else {\n      this._logVerbose(\"reauthentication failed, could not fetch a new token\");\n      if (this.syncState.hasAuth()) {\n        this.syncState.clearAuth();\n      }\n      this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n    }\n    this.restartSocket();\n  }\n  // Force refetch the token and schedule another refetch\n  // before the token expires - an active client should never\n  // need to reauthenticate.\n  async refetchToken() {\n    if (this.authState.state === \"noAuth\") {\n      return;\n    }\n    this._logVerbose(\"refetching auth token\");\n    const token = await this.fetchTokenAndGuardAgainstRace(\n      this.authState.config.fetchToken,\n      {\n        forceRefreshToken: true\n      }\n    );\n    if (token.isFromOutdatedConfig) {\n      return;\n    }\n    if (token.value) {\n      if (this.syncState.isNewAuth(token.value)) {\n        this.setAuthState({\n          state: \"waitingForServerConfirmationOfFreshToken\",\n          hadAuth: this.syncState.hasAuth(),\n          token: token.value,\n          config: this.authState.config\n        });\n        this.authenticate(token.value);\n      } else {\n        this.setAuthState({\n          state: \"notRefetching\",\n          config: this.authState.config\n        });\n      }\n    } else {\n      this._logVerbose(\"refetching token failed\");\n      if (this.syncState.hasAuth()) {\n        this.clearAuth();\n      }\n      this.setAndReportAuthFailed(this.authState.config.onAuthChange);\n    }\n    this._logVerbose(\n      \"resuming WS after auth token fetch (if currently paused)\"\n    );\n    this.resumeSocket();\n  }\n  scheduleTokenRefetch(token) {\n    if (this.authState.state === \"noAuth\") {\n      return;\n    }\n    const decodedToken = this.decodeToken(token);\n    if (!decodedToken) {\n      this.logger.error(\n        \"Auth token is not a valid JWT, cannot refetch the token\"\n      );\n      return;\n    }\n    const { iat, exp } = decodedToken;\n    if (!iat || !exp) {\n      this.logger.error(\n        \"Auth token does not have required fields, cannot refetch the token\"\n      );\n      return;\n    }\n    const tokenValiditySeconds = exp - iat;\n    if (tokenValiditySeconds <= 2) {\n      this.logger.error(\n        \"Auth token does not live long enough, cannot refetch the token\"\n      );\n      return;\n    }\n    let delay = Math.min(\n      MAXIMUM_REFRESH_DELAY,\n      (tokenValiditySeconds - this.refreshTokenLeewaySeconds) * 1e3\n    );\n    if (delay <= 0) {\n      this.logger.warn(\n        `Refetching auth token immediately, configured leeway ${this.refreshTokenLeewaySeconds}s is larger than the token's lifetime ${tokenValiditySeconds}s`\n      );\n      delay = 0;\n    }\n    const refetchTokenTimeoutId = setTimeout(() => {\n      void this.refetchToken();\n    }, delay);\n    this.setAuthState({\n      state: \"waitingForScheduledRefetch\",\n      refetchTokenTimeoutId,\n      config: this.authState.config\n    });\n    this._logVerbose(\n      `scheduled preemptive auth token refetching in ${delay}ms`\n    );\n  }\n  // Protects against simultaneous calls to `setConfig`\n  // while we're fetching a token\n  async fetchTokenAndGuardAgainstRace(fetchToken, fetchArgs) {\n    const originalConfigVersion = ++this.configVersion;\n    const token = await fetchToken(fetchArgs);\n    if (this.configVersion !== originalConfigVersion) {\n      return { isFromOutdatedConfig: true };\n    }\n    return { isFromOutdatedConfig: false, value: token };\n  }\n  stop() {\n    this.resetAuthState();\n    this.configVersion++;\n  }\n  setAndReportAuthFailed(onAuthChange) {\n    onAuthChange(false);\n    this.resetAuthState();\n  }\n  resetAuthState() {\n    this.setAuthState({ state: \"noAuth\" });\n  }\n  setAuthState(newAuth) {\n    if (this.authState.state === \"waitingForScheduledRefetch\") {\n      clearTimeout(this.authState.refetchTokenTimeoutId);\n      this.syncState.markAuthCompletion();\n    }\n    this.authState = newAuth;\n  }\n  decodeToken(token) {\n    try {\n      return (0,jwt_decode__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(token);\n    } catch (e) {\n      this._logVerbose(\n        `Error decoding token: ${e instanceof Error ? e.message : \"Unknown error\"}`\n      );\n      return null;\n    }\n  }\n  _logVerbose(message) {\n    this.logger.logVerbose(`${message} [v${this.configVersion}]`);\n  }\n}\n//# sourceMappingURL=authentication_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/authentication_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/client.js":
/*!*************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/client.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseConvexClient: () => (/* binding */ BaseConvexClient)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../index.js */ \"(ssr)/./node_modules/convex/dist/esm/index.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n/* harmony import */ var _local_state_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./local_state.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/local_state.js\");\n/* harmony import */ var _request_manager_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./request_manager.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/request_manager.js\");\n/* harmony import */ var _optimistic_updates_impl_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./optimistic_updates_impl.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js\");\n/* harmony import */ var _remote_query_set_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./remote_query_set.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/remote_query_set.js\");\n/* harmony import */ var _udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./udf_path_utils.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\");\n/* harmony import */ var _web_socket_manager_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./web_socket_manager.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./session.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/session.js\");\n/* harmony import */ var _authentication_manager_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./authentication_manager.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/authentication_manager.js\");\n/* harmony import */ var _metrics_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./metrics.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/metrics.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _values_errors_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../values/errors.js */ \"(ssr)/./node_modules/convex/dist/esm/values/errors.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass BaseConvexClient {\n  /**\n   * @param address - The url of your Convex deployment, often provided\n   * by an environment variable. E.g. `https://small-mouse-123.convex.cloud`.\n   * @param onTransition - A callback receiving an array of query tokens\n   * corresponding to query results that have changed.\n   * @param options - See {@link BaseConvexClientOptions} for a full description.\n   */\n  constructor(address, onTransition, options) {\n    __publicField(this, \"address\");\n    __publicField(this, \"state\");\n    __publicField(this, \"requestManager\");\n    __publicField(this, \"webSocketManager\");\n    __publicField(this, \"authenticationManager\");\n    __publicField(this, \"remoteQuerySet\");\n    __publicField(this, \"optimisticQueryResults\");\n    __publicField(this, \"onTransition\");\n    __publicField(this, \"_nextRequestId\");\n    __publicField(this, \"_sessionId\");\n    __publicField(this, \"firstMessageReceived\", false);\n    __publicField(this, \"debug\");\n    __publicField(this, \"logger\");\n    __publicField(this, \"maxObservedTimestamp\");\n    // Instance property so that `mark()` doesn't need to be called as a method.\n    __publicField(this, \"mark\", (name) => {\n      if (this.debug) {\n        (0,_metrics_js__WEBPACK_IMPORTED_MODULE_11__.mark)(name, this.sessionId);\n      }\n    });\n    if (typeof address === \"object\") {\n      throw new Error(\n        \"Passing a ClientConfig object is no longer supported. Pass the URL of the Convex deployment as a string directly.\"\n      );\n    }\n    if (options?.skipConvexDeploymentUrlCheck !== true) {\n      (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.validateDeploymentUrl)(address);\n    }\n    options = { ...options };\n    const authRefreshTokenLeewaySeconds = options.authRefreshTokenLeewaySeconds ?? 2;\n    let webSocketConstructor = options.webSocketConstructor;\n    if (!webSocketConstructor && typeof WebSocket === \"undefined\") {\n      throw new Error(\n        \"No WebSocket global variable defined! To use Convex in an environment without WebSocket try the HTTP client: https://docs.convex.dev/api/classes/browser.ConvexHttpClient\"\n      );\n    }\n    webSocketConstructor = webSocketConstructor || WebSocket;\n    this.debug = options.reportDebugInfoToConvex ?? false;\n    this.address = address;\n    this.logger = options.logger ?? (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.instantiateDefaultLogger)({ verbose: options.verbose ?? false });\n    const i = address.search(\"://\");\n    if (i === -1) {\n      throw new Error(\"Provided address was not an absolute URL.\");\n    }\n    const origin = address.substring(i + 3);\n    const protocol = address.substring(0, i);\n    let wsProtocol;\n    if (protocol === \"http\") {\n      wsProtocol = \"ws\";\n    } else if (protocol === \"https\") {\n      wsProtocol = \"wss\";\n    } else {\n      throw new Error(`Unknown parent protocol ${protocol}`);\n    }\n    const wsUri = `${wsProtocol}://${origin}/api/${_index_js__WEBPACK_IMPORTED_MODULE_0__.version}/sync`;\n    this.state = new _local_state_js__WEBPACK_IMPORTED_MODULE_3__.LocalSyncState();\n    this.remoteQuerySet = new _remote_query_set_js__WEBPACK_IMPORTED_MODULE_6__.RemoteQuerySet(\n      (queryId) => this.state.queryPath(queryId),\n      this.logger\n    );\n    this.requestManager = new _request_manager_js__WEBPACK_IMPORTED_MODULE_4__.RequestManager(this.logger);\n    this.authenticationManager = new _authentication_manager_js__WEBPACK_IMPORTED_MODULE_10__.AuthenticationManager(\n      this.state,\n      {\n        authenticate: (token) => {\n          const message = this.state.setAuth(token);\n          this.webSocketManager.sendMessage(message);\n        },\n        stopSocket: () => this.webSocketManager.stop(),\n        restartSocket: () => this.webSocketManager.restart(),\n        pauseSocket: () => {\n          this.webSocketManager.pause();\n          this.state.pause();\n        },\n        resumeSocket: () => this.webSocketManager.resume(),\n        clearAuth: () => {\n          this.clearAuth();\n        }\n      },\n      {\n        logger: this.logger,\n        refreshTokenLeewaySeconds: authRefreshTokenLeewaySeconds\n      }\n    );\n    this.optimisticQueryResults = new _optimistic_updates_impl_js__WEBPACK_IMPORTED_MODULE_5__.OptimisticQueryResults();\n    this.onTransition = onTransition;\n    this._nextRequestId = 0;\n    this._sessionId = (0,_session_js__WEBPACK_IMPORTED_MODULE_9__.newSessionId)();\n    const { unsavedChangesWarning } = options;\n    if (typeof window === \"undefined\" || typeof window.addEventListener === \"undefined\") {\n      if (unsavedChangesWarning === true) {\n        throw new Error(\n          \"unsavedChangesWarning requested, but window.addEventListener not found! Remove {unsavedChangesWarning: true} from Convex client options.\"\n        );\n      }\n    } else if (unsavedChangesWarning !== false) {\n      window.addEventListener(\"beforeunload\", (e) => {\n        if (this.requestManager.hasIncompleteRequests()) {\n          e.preventDefault();\n          const confirmationMessage = \"Are you sure you want to leave? Your changes may not be saved.\";\n          (e || window.event).returnValue = confirmationMessage;\n          return confirmationMessage;\n        }\n      });\n    }\n    this.webSocketManager = new _web_socket_manager_js__WEBPACK_IMPORTED_MODULE_8__.WebSocketManager(\n      wsUri,\n      {\n        onOpen: (reconnectMetadata) => {\n          this.mark(\"convexWebSocketOpen\");\n          this.webSocketManager.sendMessage({\n            ...reconnectMetadata,\n            type: \"Connect\",\n            sessionId: this._sessionId,\n            maxObservedTimestamp: this.maxObservedTimestamp\n          });\n          const oldRemoteQueryResults = new Set(\n            this.remoteQuerySet.remoteQueryResults().keys()\n          );\n          this.remoteQuerySet = new _remote_query_set_js__WEBPACK_IMPORTED_MODULE_6__.RemoteQuerySet(\n            (queryId) => this.state.queryPath(queryId),\n            this.logger\n          );\n          const [querySetModification, authModification] = this.state.restart(\n            oldRemoteQueryResults\n          );\n          if (authModification) {\n            this.webSocketManager.sendMessage(authModification);\n          }\n          this.webSocketManager.sendMessage(querySetModification);\n          for (const message of this.requestManager.restart()) {\n            this.webSocketManager.sendMessage(message);\n          }\n        },\n        onResume: () => {\n          const [querySetModification, authModification] = this.state.resume();\n          if (authModification) {\n            this.webSocketManager.sendMessage(authModification);\n          }\n          if (querySetModification) {\n            this.webSocketManager.sendMessage(querySetModification);\n          }\n          for (const message of this.requestManager.resume()) {\n            this.webSocketManager.sendMessage(message);\n          }\n        },\n        onMessage: (serverMessage) => {\n          if (!this.firstMessageReceived) {\n            this.firstMessageReceived = true;\n            this.mark(\"convexFirstMessageReceived\");\n            this.reportMarks();\n          }\n          switch (serverMessage.type) {\n            case \"Transition\": {\n              this.observedTimestamp(serverMessage.endVersion.ts);\n              this.authenticationManager.onTransition(serverMessage);\n              this.remoteQuerySet.transition(serverMessage);\n              this.state.transition(serverMessage);\n              const completedRequests = this.requestManager.removeCompleted(\n                this.remoteQuerySet.timestamp()\n              );\n              this.notifyOnQueryResultChanges(completedRequests);\n              break;\n            }\n            case \"MutationResponse\": {\n              if (serverMessage.success) {\n                this.observedTimestamp(serverMessage.ts);\n              }\n              const completedMutationId = this.requestManager.onResponse(serverMessage);\n              if (completedMutationId !== null) {\n                this.notifyOnQueryResultChanges(/* @__PURE__ */ new Set([completedMutationId]));\n              }\n              break;\n            }\n            case \"ActionResponse\": {\n              this.requestManager.onResponse(serverMessage);\n              break;\n            }\n            case \"AuthError\": {\n              this.authenticationManager.onAuthError(serverMessage);\n              break;\n            }\n            case \"FatalError\": {\n              const error = (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.logFatalError)(this.logger, serverMessage.error);\n              void this.webSocketManager.terminate();\n              throw error;\n            }\n            case \"Ping\":\n              break;\n            default: {\n              const _typeCheck = serverMessage;\n            }\n          }\n          return {\n            hasSyncedPastLastReconnect: this.hasSyncedPastLastReconnect()\n          };\n        }\n      },\n      webSocketConstructor,\n      this.logger\n    );\n    this.mark(\"convexClientConstructed\");\n  }\n  /**\n   * Return true if there is outstanding work from prior to the time of the most recent restart.\n   * This indicates that the client has not proven itself to have gotten past the issue that\n   * potentially led to the restart. Use this to influence when to reset backoff after a failure.\n   */\n  hasSyncedPastLastReconnect() {\n    const hasSyncedPastLastReconnect = this.requestManager.hasSyncedPastLastReconnect() || this.state.hasSyncedPastLastReconnect();\n    return hasSyncedPastLastReconnect;\n  }\n  observedTimestamp(observedTs) {\n    if (this.maxObservedTimestamp === void 0 || this.maxObservedTimestamp.lessThanOrEqual(observedTs)) {\n      this.maxObservedTimestamp = observedTs;\n    }\n  }\n  getMaxObservedTimestamp() {\n    return this.maxObservedTimestamp;\n  }\n  /**\n   * Compute the current query results based on the remoteQuerySet and the\n   * current optimistic updates and call `onTransition` for all the changed\n   * queries.\n   *\n   * @param completedMutations - A set of mutation IDs whose optimistic updates\n   * are no longer needed.\n   */\n  notifyOnQueryResultChanges(completedRequest) {\n    const remoteQueryResults = this.remoteQuerySet.remoteQueryResults();\n    const queryTokenToValue = /* @__PURE__ */ new Map();\n    for (const [queryId, result] of remoteQueryResults) {\n      const queryToken = this.state.queryToken(queryId);\n      if (queryToken !== null) {\n        const query = {\n          result,\n          udfPath: this.state.queryPath(queryId),\n          args: this.state.queryArgs(queryId)\n        };\n        queryTokenToValue.set(queryToken, query);\n      }\n    }\n    this.onTransition(\n      this.optimisticQueryResults.ingestQueryResultsFromServer(\n        queryTokenToValue,\n        completedRequest\n      )\n    );\n  }\n  /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   * `fetchToken` will be called automatically again if a token expires.\n   * `fetchToken` should return `null` if the token cannot be retrieved, for example\n   * when the user's rights were permanently revoked.\n   * @param fetchToken - an async function returning the JWT-encoded OpenID Connect Identity Token\n   * @param onChange - a callback that will be called when the authentication status changes\n   */\n  setAuth(fetchToken, onChange) {\n    void this.authenticationManager.setConfig(fetchToken, onChange);\n  }\n  hasAuth() {\n    return this.state.hasAuth();\n  }\n  /** @internal */\n  setAdminAuth(value, fakeUserIdentity) {\n    const message = this.state.setAdminAuth(value, fakeUserIdentity);\n    this.webSocketManager.sendMessage(message);\n  }\n  clearAuth() {\n    const message = this.state.clearAuth();\n    this.webSocketManager.sendMessage(message);\n  }\n  /**\n     * Subscribe to a query function.\n     *\n     * Whenever this query's result changes, the `onTransition` callback\n     * passed into the constructor will be called.\n     *\n     * @param name - The name of the query.\n     * @param args - An arguments object for the query. If this is omitted, the\n     * arguments will be `{}`.\n     * @param options - A {@link SubscribeOptions} options object for this query.\n  \n     * @returns An object containing a {@link QueryToken} corresponding to this\n     * query and an `unsubscribe` callback.\n     */\n  subscribe(name, args, options) {\n    const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n    const { modification, queryToken, unsubscribe } = this.state.subscribe(\n      name,\n      argsObject,\n      options?.journal,\n      options?.componentPath\n    );\n    if (modification !== null) {\n      this.webSocketManager.sendMessage(modification);\n    }\n    return {\n      queryToken,\n      unsubscribe: () => {\n        const modification2 = unsubscribe();\n        if (modification2) {\n          this.webSocketManager.sendMessage(modification2);\n        }\n      }\n    };\n  }\n  /**\n   * A query result based only on the current, local state.\n   *\n   * The only way this will return a value is if we're already subscribed to the\n   * query or its value has been set optimistically.\n   */\n  localQueryResult(udfPath, args) {\n    const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n    const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__.serializePathAndArgs)(udfPath, argsObject);\n    return this.optimisticQueryResults.queryResult(queryToken);\n  }\n  /**\n   * Get query result by query token based on current, local state\n   *\n   * The only way this will return a value is if we're already subscribed to the\n   * query or its value has been set optimistically.\n   *\n   * @internal\n   */\n  localQueryResultByToken(queryToken) {\n    return this.optimisticQueryResults.queryResult(queryToken);\n  }\n  /**\n   * Whether local query result is available for a toke.\n   *\n   * This method does not throw if the result is an error.\n   *\n   * @internal\n   */\n  hasLocalQueryResultByToken(queryToken) {\n    return this.optimisticQueryResults.hasQueryResult(queryToken);\n  }\n  /**\n   * @internal\n   */\n  localQueryLogs(udfPath, args) {\n    const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n    const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__.serializePathAndArgs)(udfPath, argsObject);\n    return this.optimisticQueryResults.queryLogs(queryToken);\n  }\n  /**\n   * Retrieve the current {@link QueryJournal} for this query function.\n   *\n   * If we have not yet received a result for this query, this will be `undefined`.\n   *\n   * @param name - The name of the query.\n   * @param args - The arguments object for this query.\n   * @returns The query's {@link QueryJournal} or `undefined`.\n   */\n  queryJournal(name, args) {\n    const argsObject = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n    const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_7__.serializePathAndArgs)(name, argsObject);\n    return this.state.queryJournal(queryToken);\n  }\n  /**\n   * Get the current {@link ConnectionState} between the client and the Convex\n   * backend.\n   *\n   * @returns The {@link ConnectionState} with the Convex backend.\n   */\n  connectionState() {\n    return {\n      hasInflightRequests: this.requestManager.hasInflightRequests(),\n      isWebSocketConnected: this.webSocketManager.socketState() === \"ready\",\n      timeOfOldestInflightRequest: this.requestManager.timeOfOldestInflightRequest()\n    };\n  }\n  /**\n     * Execute a mutation function.\n     *\n     * @param name - The name of the mutation.\n     * @param args - An arguments object for the mutation. If this is omitted,\n     * the arguments will be `{}`.\n     * @param options - A {@link MutationOptions} options object for this mutation.\n  \n     * @returns - A promise of the mutation's result.\n     */\n  async mutation(name, args, options) {\n    const result = await this.mutationInternal(name, args, options);\n    if (!result.success) {\n      if (result.errorData !== void 0) {\n        throw (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.forwardData)(\n          result,\n          new _values_errors_js__WEBPACK_IMPORTED_MODULE_13__.ConvexError(\n            (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"mutation\", name, result)\n          )\n        );\n      }\n      throw new Error((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"mutation\", name, result));\n    }\n    return result.value;\n  }\n  /**\n   * @internal\n   */\n  async mutationInternal(udfPath, args, options, componentPath) {\n    const mutationArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n    this.tryReportLongDisconnect();\n    const requestId = this.nextRequestId;\n    this._nextRequestId++;\n    if (options !== void 0) {\n      const optimisticUpdate = options.optimisticUpdate;\n      if (optimisticUpdate !== void 0) {\n        const wrappedUpdate = (localQueryStore) => {\n          optimisticUpdate(localQueryStore, mutationArgs);\n        };\n        const changedQueries = this.optimisticQueryResults.applyOptimisticUpdate(\n          wrappedUpdate,\n          requestId\n        );\n        this.onTransition(changedQueries);\n      }\n    }\n    const message = {\n      type: \"Mutation\",\n      requestId,\n      udfPath,\n      componentPath,\n      args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(mutationArgs)]\n    };\n    const mightBeSent = this.webSocketManager.sendMessage(message);\n    return this.requestManager.request(message, mightBeSent);\n  }\n  /**\n   * Execute an action function.\n   *\n   * @param name - The name of the action.\n   * @param args - An arguments object for the action. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the action's result.\n   */\n  async action(name, args) {\n    const result = await this.actionInternal(name, args);\n    if (!result.success) {\n      if (result.errorData !== void 0) {\n        throw (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.forwardData)(\n          result,\n          new _values_errors_js__WEBPACK_IMPORTED_MODULE_13__.ConvexError((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"action\", name, result))\n        );\n      }\n      throw new Error((0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"action\", name, result));\n    }\n    return result.value;\n  }\n  /**\n   * @internal\n   */\n  async actionInternal(udfPath, args, componentPath) {\n    const actionArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_12__.parseArgs)(args);\n    const requestId = this.nextRequestId;\n    this._nextRequestId++;\n    this.tryReportLongDisconnect();\n    const message = {\n      type: \"Action\",\n      requestId,\n      udfPath,\n      componentPath,\n      args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(actionArgs)]\n    };\n    const mightBeSent = this.webSocketManager.sendMessage(message);\n    return this.requestManager.request(message, mightBeSent);\n  }\n  /**\n   * Close any network handles associated with this client and stop all subscriptions.\n   *\n   * Call this method when you're done with an {@link BaseConvexClient} to\n   * dispose of its sockets and resources.\n   *\n   * @returns A `Promise` fulfilled when the connection has been completely closed.\n   */\n  async close() {\n    this.authenticationManager.stop();\n    return this.webSocketManager.terminate();\n  }\n  /**\n   * Return the address for this client, useful for creating a new client.\n   *\n   * Not guaranteed to match the address with which this client was constructed:\n   * it may be canonicalized.\n   */\n  get url() {\n    return this.address;\n  }\n  /**\n   * @internal\n   */\n  get nextRequestId() {\n    return this._nextRequestId;\n  }\n  /**\n   * @internal\n   */\n  get sessionId() {\n    return this._sessionId;\n  }\n  /**\n   * Reports performance marks to the server. This should only be called when\n   * we have a functional websocket.\n   */\n  reportMarks() {\n    if (this.debug) {\n      const report = (0,_metrics_js__WEBPACK_IMPORTED_MODULE_11__.getMarksReport)(this.sessionId);\n      this.webSocketManager.sendMessage({\n        type: \"Event\",\n        eventType: \"ClientConnect\",\n        event: report\n      });\n    }\n  }\n  tryReportLongDisconnect() {\n    if (!this.debug) {\n      return;\n    }\n    const timeOfOldestRequest = this.connectionState().timeOfOldestInflightRequest;\n    if (timeOfOldestRequest === null || Date.now() - timeOfOldestRequest.getTime() <= 60 * 1e3) {\n      return;\n    }\n    const endpoint = `${this.address}/api/debug_event`;\n    fetch(endpoint, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Convex-Client\": `npm-${_index_js__WEBPACK_IMPORTED_MODULE_0__.version}`\n      },\n      body: JSON.stringify({ event: \"LongWebsocketDisconnect\" })\n    }).then((response) => {\n      if (!response.ok) {\n        this.logger.warn(\n          \"Analytics request failed with response:\",\n          response.body\n        );\n      }\n    }).catch((error) => {\n      this.logger.warn(\"Analytics response failed with error:\", error);\n    });\n  }\n}\n//# sourceMappingURL=client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/local_state.js":
/*!******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/local_state.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalSyncState: () => (/* binding */ LocalSyncState)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./udf_path_utils.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\nclass LocalSyncState {\n  constructor() {\n    __publicField(this, \"nextQueryId\");\n    __publicField(this, \"querySetVersion\");\n    __publicField(this, \"querySet\");\n    __publicField(this, \"queryIdToToken\");\n    __publicField(this, \"identityVersion\");\n    __publicField(this, \"auth\");\n    __publicField(this, \"outstandingQueriesOlderThanRestart\");\n    __publicField(this, \"outstandingAuthOlderThanRestart\");\n    __publicField(this, \"paused\");\n    __publicField(this, \"pendingQuerySetModifications\");\n    this.nextQueryId = 0;\n    this.querySetVersion = 0;\n    this.identityVersion = 0;\n    this.querySet = /* @__PURE__ */ new Map();\n    this.queryIdToToken = /* @__PURE__ */ new Map();\n    this.outstandingQueriesOlderThanRestart = /* @__PURE__ */ new Set();\n    this.outstandingAuthOlderThanRestart = false;\n    this.paused = false;\n    this.pendingQuerySetModifications = /* @__PURE__ */ new Map();\n  }\n  hasSyncedPastLastReconnect() {\n    return this.outstandingQueriesOlderThanRestart.size === 0 && !this.outstandingAuthOlderThanRestart;\n  }\n  markAuthCompletion() {\n    this.outstandingAuthOlderThanRestart = false;\n  }\n  subscribe(udfPath, args, journal, componentPath) {\n    const canonicalizedUdfPath = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.canonicalizeUdfPath)(udfPath);\n    const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.serializePathAndArgs)(canonicalizedUdfPath, args);\n    const existingEntry = this.querySet.get(queryToken);\n    if (existingEntry !== void 0) {\n      existingEntry.numSubscribers += 1;\n      return {\n        queryToken,\n        modification: null,\n        unsubscribe: () => this.removeSubscriber(queryToken)\n      };\n    } else {\n      const queryId = this.nextQueryId++;\n      const query = {\n        id: queryId,\n        canonicalizedUdfPath,\n        args,\n        numSubscribers: 1,\n        journal,\n        componentPath\n      };\n      this.querySet.set(queryToken, query);\n      this.queryIdToToken.set(queryId, queryToken);\n      const baseVersion = this.querySetVersion;\n      const newVersion = this.querySetVersion + 1;\n      const add = {\n        type: \"Add\",\n        queryId,\n        udfPath: canonicalizedUdfPath,\n        args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(args)],\n        journal,\n        componentPath\n      };\n      if (this.paused) {\n        this.pendingQuerySetModifications.set(queryId, add);\n      } else {\n        this.querySetVersion = newVersion;\n      }\n      const modification = {\n        type: \"ModifyQuerySet\",\n        baseVersion,\n        newVersion,\n        modifications: [add]\n      };\n      return {\n        queryToken,\n        modification,\n        unsubscribe: () => this.removeSubscriber(queryToken)\n      };\n    }\n  }\n  transition(transition) {\n    for (const modification of transition.modifications) {\n      switch (modification.type) {\n        case \"QueryUpdated\":\n        case \"QueryFailed\": {\n          this.outstandingQueriesOlderThanRestart.delete(modification.queryId);\n          const journal = modification.journal;\n          if (journal !== void 0) {\n            const queryToken = this.queryIdToToken.get(modification.queryId);\n            if (queryToken !== void 0) {\n              this.querySet.get(queryToken).journal = journal;\n            }\n          }\n          break;\n        }\n        case \"QueryRemoved\": {\n          this.outstandingQueriesOlderThanRestart.delete(modification.queryId);\n          break;\n        }\n        default: {\n          const _ = modification;\n          throw new Error(`Invalid modification ${modification.type}`);\n        }\n      }\n    }\n  }\n  queryId(udfPath, args) {\n    const canonicalizedUdfPath = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.canonicalizeUdfPath)(udfPath);\n    const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_1__.serializePathAndArgs)(canonicalizedUdfPath, args);\n    const existingEntry = this.querySet.get(queryToken);\n    if (existingEntry !== void 0) {\n      return existingEntry.id;\n    }\n    return null;\n  }\n  isCurrentOrNewerAuthVersion(version) {\n    return version >= this.identityVersion;\n  }\n  setAuth(value) {\n    this.auth = {\n      tokenType: \"User\",\n      value\n    };\n    const baseVersion = this.identityVersion;\n    if (!this.paused) {\n      this.identityVersion = baseVersion + 1;\n    }\n    return {\n      type: \"Authenticate\",\n      baseVersion,\n      ...this.auth\n    };\n  }\n  setAdminAuth(value, actingAs) {\n    const auth = {\n      tokenType: \"Admin\",\n      value,\n      impersonating: actingAs\n    };\n    this.auth = auth;\n    const baseVersion = this.identityVersion;\n    if (!this.paused) {\n      this.identityVersion = baseVersion + 1;\n    }\n    return {\n      type: \"Authenticate\",\n      baseVersion,\n      ...auth\n    };\n  }\n  clearAuth() {\n    this.auth = void 0;\n    this.markAuthCompletion();\n    const baseVersion = this.identityVersion;\n    if (!this.paused) {\n      this.identityVersion = baseVersion + 1;\n    }\n    return {\n      type: \"Authenticate\",\n      tokenType: \"None\",\n      baseVersion\n    };\n  }\n  hasAuth() {\n    return !!this.auth;\n  }\n  isNewAuth(value) {\n    return this.auth?.value !== value;\n  }\n  queryPath(queryId) {\n    const pathAndArgs = this.queryIdToToken.get(queryId);\n    if (pathAndArgs) {\n      return this.querySet.get(pathAndArgs).canonicalizedUdfPath;\n    }\n    return null;\n  }\n  queryArgs(queryId) {\n    const pathAndArgs = this.queryIdToToken.get(queryId);\n    if (pathAndArgs) {\n      return this.querySet.get(pathAndArgs).args;\n    }\n    return null;\n  }\n  queryToken(queryId) {\n    return this.queryIdToToken.get(queryId) ?? null;\n  }\n  queryJournal(queryToken) {\n    return this.querySet.get(queryToken)?.journal;\n  }\n  restart(oldRemoteQueryResults) {\n    this.unpause();\n    this.outstandingQueriesOlderThanRestart.clear();\n    const modifications = [];\n    for (const localQuery of this.querySet.values()) {\n      const add = {\n        type: \"Add\",\n        queryId: localQuery.id,\n        udfPath: localQuery.canonicalizedUdfPath,\n        args: [(0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(localQuery.args)],\n        journal: localQuery.journal,\n        componentPath: localQuery.componentPath\n      };\n      modifications.push(add);\n      if (!oldRemoteQueryResults.has(localQuery.id)) {\n        this.outstandingQueriesOlderThanRestart.add(localQuery.id);\n      }\n    }\n    this.querySetVersion = 1;\n    const querySet = {\n      type: \"ModifyQuerySet\",\n      baseVersion: 0,\n      newVersion: 1,\n      modifications\n    };\n    if (!this.auth) {\n      this.identityVersion = 0;\n      return [querySet, void 0];\n    }\n    this.outstandingAuthOlderThanRestart = true;\n    const authenticate = {\n      type: \"Authenticate\",\n      baseVersion: 0,\n      ...this.auth\n    };\n    this.identityVersion = 1;\n    return [querySet, authenticate];\n  }\n  pause() {\n    this.paused = true;\n  }\n  resume() {\n    const querySet = this.pendingQuerySetModifications.size > 0 ? {\n      type: \"ModifyQuerySet\",\n      baseVersion: this.querySetVersion,\n      newVersion: ++this.querySetVersion,\n      modifications: Array.from(\n        this.pendingQuerySetModifications.values()\n      )\n    } : void 0;\n    const authenticate = this.auth !== void 0 ? {\n      type: \"Authenticate\",\n      baseVersion: this.identityVersion++,\n      ...this.auth\n    } : void 0;\n    this.unpause();\n    return [querySet, authenticate];\n  }\n  unpause() {\n    this.paused = false;\n    this.pendingQuerySetModifications.clear();\n  }\n  removeSubscriber(queryToken) {\n    const localQuery = this.querySet.get(queryToken);\n    if (localQuery.numSubscribers > 1) {\n      localQuery.numSubscribers -= 1;\n      return null;\n    } else {\n      this.querySet.delete(queryToken);\n      this.queryIdToToken.delete(localQuery.id);\n      this.outstandingQueriesOlderThanRestart.delete(localQuery.id);\n      const baseVersion = this.querySetVersion;\n      const newVersion = this.querySetVersion + 1;\n      const remove = {\n        type: \"Remove\",\n        queryId: localQuery.id\n      };\n      if (this.paused) {\n        if (this.pendingQuerySetModifications.has(localQuery.id)) {\n          this.pendingQuerySetModifications.delete(localQuery.id);\n        } else {\n          this.pendingQuerySetModifications.set(localQuery.id, remove);\n        }\n      } else {\n        this.querySetVersion = newVersion;\n      }\n      return {\n        type: \"ModifyQuerySet\",\n        baseVersion,\n        newVersion,\n        modifications: [remove]\n      };\n    }\n  }\n}\n//# sourceMappingURL=local_state.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/local_state.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/metrics.js":
/*!**************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/metrics.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMarksReport: () => (/* binding */ getMarksReport),\n/* harmony export */   mark: () => (/* binding */ mark)\n/* harmony export */ });\n\nconst markNames = [\n  \"convexClientConstructed\",\n  \"convexWebSocketOpen\",\n  \"convexFirstMessageReceived\"\n];\nfunction mark(name, sessionId) {\n  const detail = { sessionId };\n  if (typeof performance === \"undefined\" || !performance.mark) return;\n  performance.mark(name, { detail });\n}\nfunction performanceMarkToJson(mark2) {\n  let name = mark2.name.slice(\"convex\".length);\n  name = name.charAt(0).toLowerCase() + name.slice(1);\n  return {\n    name,\n    startTime: mark2.startTime\n  };\n}\nfunction getMarksReport(sessionId) {\n  if (typeof performance === \"undefined\" || !performance.getEntriesByName) {\n    return [];\n  }\n  const allMarks = [];\n  for (const name of markNames) {\n    const marks = performance.getEntriesByName(name).filter((entry) => entry.entryType === \"mark\").filter((mark2) => mark2.detail.sessionId === sessionId);\n    allMarks.push(...marks);\n  }\n  return allMarks.map(performanceMarkToJson);\n}\n//# sourceMappingURL=metrics.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9tZXRyaWNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxtQkFBbUI7QUFDbkI7QUFDQSwyQkFBMkIsUUFBUTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qaWFkaWxpL0Rlc2t0b3Avd2VBcmVGZWtlbkNva2VkL1dlQXJlRmVrZW5Db29rZWQtSGFja2F0aG9uLS9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9tZXRyaWNzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuY29uc3QgbWFya05hbWVzID0gW1xuICBcImNvbnZleENsaWVudENvbnN0cnVjdGVkXCIsXG4gIFwiY29udmV4V2ViU29ja2V0T3BlblwiLFxuICBcImNvbnZleEZpcnN0TWVzc2FnZVJlY2VpdmVkXCJcbl07XG5leHBvcnQgZnVuY3Rpb24gbWFyayhuYW1lLCBzZXNzaW9uSWQpIHtcbiAgY29uc3QgZGV0YWlsID0geyBzZXNzaW9uSWQgfTtcbiAgaWYgKHR5cGVvZiBwZXJmb3JtYW5jZSA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhcGVyZm9ybWFuY2UubWFyaykgcmV0dXJuO1xuICBwZXJmb3JtYW5jZS5tYXJrKG5hbWUsIHsgZGV0YWlsIH0pO1xufVxuZnVuY3Rpb24gcGVyZm9ybWFuY2VNYXJrVG9Kc29uKG1hcmsyKSB7XG4gIGxldCBuYW1lID0gbWFyazIubmFtZS5zbGljZShcImNvbnZleFwiLmxlbmd0aCk7XG4gIG5hbWUgPSBuYW1lLmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpICsgbmFtZS5zbGljZSgxKTtcbiAgcmV0dXJuIHtcbiAgICBuYW1lLFxuICAgIHN0YXJ0VGltZTogbWFyazIuc3RhcnRUaW1lXG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0TWFya3NSZXBvcnQoc2Vzc2lvbklkKSB7XG4gIGlmICh0eXBlb2YgcGVyZm9ybWFuY2UgPT09IFwidW5kZWZpbmVkXCIgfHwgIXBlcmZvcm1hbmNlLmdldEVudHJpZXNCeU5hbWUpIHtcbiAgICByZXR1cm4gW107XG4gIH1cbiAgY29uc3QgYWxsTWFya3MgPSBbXTtcbiAgZm9yIChjb25zdCBuYW1lIG9mIG1hcmtOYW1lcykge1xuICAgIGNvbnN0IG1hcmtzID0gcGVyZm9ybWFuY2UuZ2V0RW50cmllc0J5TmFtZShuYW1lKS5maWx0ZXIoKGVudHJ5KSA9PiBlbnRyeS5lbnRyeVR5cGUgPT09IFwibWFya1wiKS5maWx0ZXIoKG1hcmsyKSA9PiBtYXJrMi5kZXRhaWwuc2Vzc2lvbklkID09PSBzZXNzaW9uSWQpO1xuICAgIGFsbE1hcmtzLnB1c2goLi4ubWFya3MpO1xuICB9XG4gIHJldHVybiBhbGxNYXJrcy5tYXAocGVyZm9ybWFuY2VNYXJrVG9Kc29uKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1ldHJpY3MuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/metrics.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js":
/*!******************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OptimisticQueryResults: () => (/* binding */ OptimisticQueryResults)\n/* harmony export */ });\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n/* harmony import */ var _udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./udf_path_utils.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\");\n/* harmony import */ var _values_errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../values/errors.js */ \"(ssr)/./node_modules/convex/dist/esm/values/errors.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\n\n\nclass OptimisticLocalStoreImpl {\n  constructor(queryResults) {\n    // A references of the query results in OptimisticQueryResults\n    __publicField(this, \"queryResults\");\n    // All of the queries modified by this class\n    __publicField(this, \"modifiedQueries\");\n    this.queryResults = queryResults;\n    this.modifiedQueries = [];\n  }\n  getQuery(query, ...args) {\n    const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args[0]);\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(query);\n    const queryResult = this.queryResults.get(\n      (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__.serializePathAndArgs)(name, queryArgs)\n    );\n    if (queryResult === void 0) {\n      return void 0;\n    }\n    return OptimisticLocalStoreImpl.queryValue(queryResult.result);\n  }\n  getAllQueries(query) {\n    const queriesWithName = [];\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(query);\n    for (const queryResult of this.queryResults.values()) {\n      if (queryResult.udfPath === (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__.canonicalizeUdfPath)(name)) {\n        queriesWithName.push({\n          args: queryResult.args,\n          value: OptimisticLocalStoreImpl.queryValue(queryResult.result)\n        });\n      }\n    }\n    return queriesWithName;\n  }\n  setQuery(queryReference, args, value) {\n    const queryArgs = (0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.parseArgs)(args);\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(queryReference);\n    const queryToken = (0,_udf_path_utils_js__WEBPACK_IMPORTED_MODULE_3__.serializePathAndArgs)(name, queryArgs);\n    let result;\n    if (value === void 0) {\n      result = void 0;\n    } else {\n      result = {\n        success: true,\n        value,\n        // It's an optimistic update, so there are no function logs to show.\n        logLines: []\n      };\n    }\n    const query = {\n      udfPath: name,\n      args: queryArgs,\n      result\n    };\n    this.queryResults.set(queryToken, query);\n    this.modifiedQueries.push(queryToken);\n  }\n  static queryValue(result) {\n    if (result === void 0) {\n      return void 0;\n    } else if (result.success) {\n      return result.value;\n    } else {\n      return void 0;\n    }\n  }\n}\nclass OptimisticQueryResults {\n  constructor() {\n    __publicField(this, \"queryResults\");\n    __publicField(this, \"optimisticUpdates\");\n    this.queryResults = /* @__PURE__ */ new Map();\n    this.optimisticUpdates = [];\n  }\n  ingestQueryResultsFromServer(serverQueryResults, optimisticUpdatesToDrop) {\n    this.optimisticUpdates = this.optimisticUpdates.filter((updateAndId) => {\n      return !optimisticUpdatesToDrop.has(updateAndId.mutationId);\n    });\n    const oldQueryResults = this.queryResults;\n    this.queryResults = new Map(serverQueryResults);\n    const localStore = new OptimisticLocalStoreImpl(this.queryResults);\n    for (const updateAndId of this.optimisticUpdates) {\n      updateAndId.update(localStore);\n    }\n    const changedQueries = [];\n    for (const [queryToken, query] of this.queryResults) {\n      const oldQuery = oldQueryResults.get(queryToken);\n      if (oldQuery === void 0 || oldQuery.result !== query.result) {\n        changedQueries.push(queryToken);\n      }\n    }\n    return changedQueries;\n  }\n  applyOptimisticUpdate(update, mutationId) {\n    this.optimisticUpdates.push({\n      update,\n      mutationId\n    });\n    const localStore = new OptimisticLocalStoreImpl(this.queryResults);\n    update(localStore);\n    return localStore.modifiedQueries;\n  }\n  queryResult(queryToken) {\n    const query = this.queryResults.get(queryToken);\n    if (query === void 0) {\n      return void 0;\n    }\n    const result = query.result;\n    if (result === void 0) {\n      return void 0;\n    } else if (result.success) {\n      return result.value;\n    } else {\n      if (result.errorData !== void 0) {\n        throw (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.forwardData)(\n          result,\n          new _values_errors_js__WEBPACK_IMPORTED_MODULE_4__.ConvexError(\n            (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"query\", query.udfPath, result)\n          )\n        );\n      }\n      throw new Error(\n        (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.createHybridErrorStacktrace)(\"query\", query.udfPath, result)\n      );\n    }\n  }\n  hasQueryResult(queryToken) {\n    return this.queryResults.get(queryToken) !== void 0;\n  }\n  /**\n   * @internal\n   */\n  queryLogs(queryToken) {\n    const query = this.queryResults.get(queryToken);\n    return query?.result?.logLines;\n  }\n}\n//# sourceMappingURL=optimistic_updates_impl.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/optimistic_updates_impl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/protocol.js":
/*!***************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/protocol.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeClientMessage: () => (/* binding */ encodeClientMessage),\n/* harmony export */   longToU64: () => (/* binding */ longToU64),\n/* harmony export */   parseServerMessage: () => (/* binding */ parseServerMessage),\n/* harmony export */   u64ToLong: () => (/* binding */ u64ToLong)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _long_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../long.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/long.js\");\n\n\n\nfunction u64ToLong(encoded) {\n  const integerBytes = _values_index_js__WEBPACK_IMPORTED_MODULE_0__.Base64.toByteArray(encoded);\n  return _long_js__WEBPACK_IMPORTED_MODULE_1__.Long.fromBytesLE(Array.from(integerBytes));\n}\nfunction longToU64(raw) {\n  const integerBytes = new Uint8Array(raw.toBytesLE());\n  return _values_index_js__WEBPACK_IMPORTED_MODULE_0__.Base64.fromByteArray(integerBytes);\n}\nfunction parseServerMessage(encoded) {\n  switch (encoded.type) {\n    case \"FatalError\":\n    case \"AuthError\":\n    case \"ActionResponse\":\n    case \"Ping\": {\n      return { ...encoded };\n    }\n    case \"MutationResponse\": {\n      if (encoded.success) {\n        return { ...encoded, ts: u64ToLong(encoded.ts) };\n      } else {\n        return { ...encoded };\n      }\n    }\n    case \"Transition\": {\n      return {\n        ...encoded,\n        startVersion: {\n          ...encoded.startVersion,\n          ts: u64ToLong(encoded.startVersion.ts)\n        },\n        endVersion: {\n          ...encoded.endVersion,\n          ts: u64ToLong(encoded.endVersion.ts)\n        }\n      };\n    }\n    default: {\n      const _exhaustivenessCheck = encoded;\n    }\n  }\n  return void 0;\n}\nfunction encodeClientMessage(message) {\n  switch (message.type) {\n    case \"Authenticate\":\n    case \"ModifyQuerySet\":\n    case \"Mutation\":\n    case \"Action\":\n    case \"Event\": {\n      return { ...message };\n    }\n    case \"Connect\": {\n      if (message.maxObservedTimestamp !== void 0) {\n        return {\n          ...message,\n          maxObservedTimestamp: longToU64(message.maxObservedTimestamp)\n        };\n      } else {\n        return { ...message, maxObservedTimestamp: void 0 };\n      }\n    }\n    default: {\n      const _exhaustivenessCheck = message;\n    }\n  }\n  return void 0;\n}\n//# sourceMappingURL=protocol.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9wcm90b2NvbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBYTtBQUNrQztBQUNiO0FBQzNCO0FBQ1AsdUJBQXVCLGdFQUFrQjtBQUN6QyxTQUFTLDBDQUFJO0FBQ2I7QUFDTztBQUNQO0FBQ0EsU0FBUyxrRUFBb0I7QUFDN0I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLFFBQVE7QUFDUixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvamlhZGlsaS9EZXNrdG9wL3dlQXJlRmVrZW5Db2tlZC9XZUFyZUZla2VuQ29va2VkLUhhY2thdGhvbi0vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9icm93c2VyL3N5bmMvcHJvdG9jb2wuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyBCYXNlNjQgfSBmcm9tIFwiLi4vLi4vdmFsdWVzL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBMb25nIH0gZnJvbSBcIi4uL2xvbmcuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiB1NjRUb0xvbmcoZW5jb2RlZCkge1xuICBjb25zdCBpbnRlZ2VyQnl0ZXMgPSBCYXNlNjQudG9CeXRlQXJyYXkoZW5jb2RlZCk7XG4gIHJldHVybiBMb25nLmZyb21CeXRlc0xFKEFycmF5LmZyb20oaW50ZWdlckJ5dGVzKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gbG9uZ1RvVTY0KHJhdykge1xuICBjb25zdCBpbnRlZ2VyQnl0ZXMgPSBuZXcgVWludDhBcnJheShyYXcudG9CeXRlc0xFKCkpO1xuICByZXR1cm4gQmFzZTY0LmZyb21CeXRlQXJyYXkoaW50ZWdlckJ5dGVzKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVNlcnZlck1lc3NhZ2UoZW5jb2RlZCkge1xuICBzd2l0Y2ggKGVuY29kZWQudHlwZSkge1xuICAgIGNhc2UgXCJGYXRhbEVycm9yXCI6XG4gICAgY2FzZSBcIkF1dGhFcnJvclwiOlxuICAgIGNhc2UgXCJBY3Rpb25SZXNwb25zZVwiOlxuICAgIGNhc2UgXCJQaW5nXCI6IHtcbiAgICAgIHJldHVybiB7IC4uLmVuY29kZWQgfTtcbiAgICB9XG4gICAgY2FzZSBcIk11dGF0aW9uUmVzcG9uc2VcIjoge1xuICAgICAgaWYgKGVuY29kZWQuc3VjY2Vzcykge1xuICAgICAgICByZXR1cm4geyAuLi5lbmNvZGVkLCB0czogdTY0VG9Mb25nKGVuY29kZWQudHMpIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4geyAuLi5lbmNvZGVkIH07XG4gICAgICB9XG4gICAgfVxuICAgIGNhc2UgXCJUcmFuc2l0aW9uXCI6IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmVuY29kZWQsXG4gICAgICAgIHN0YXJ0VmVyc2lvbjoge1xuICAgICAgICAgIC4uLmVuY29kZWQuc3RhcnRWZXJzaW9uLFxuICAgICAgICAgIHRzOiB1NjRUb0xvbmcoZW5jb2RlZC5zdGFydFZlcnNpb24udHMpXG4gICAgICAgIH0sXG4gICAgICAgIGVuZFZlcnNpb246IHtcbiAgICAgICAgICAuLi5lbmNvZGVkLmVuZFZlcnNpb24sXG4gICAgICAgICAgdHM6IHU2NFRvTG9uZyhlbmNvZGVkLmVuZFZlcnNpb24udHMpXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICAgIGRlZmF1bHQ6IHtcbiAgICAgIGNvbnN0IF9leGhhdXN0aXZlbmVzc0NoZWNrID0gZW5jb2RlZDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHZvaWQgMDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVDbGllbnRNZXNzYWdlKG1lc3NhZ2UpIHtcbiAgc3dpdGNoIChtZXNzYWdlLnR5cGUpIHtcbiAgICBjYXNlIFwiQXV0aGVudGljYXRlXCI6XG4gICAgY2FzZSBcIk1vZGlmeVF1ZXJ5U2V0XCI6XG4gICAgY2FzZSBcIk11dGF0aW9uXCI6XG4gICAgY2FzZSBcIkFjdGlvblwiOlxuICAgIGNhc2UgXCJFdmVudFwiOiB7XG4gICAgICByZXR1cm4geyAuLi5tZXNzYWdlIH07XG4gICAgfVxuICAgIGNhc2UgXCJDb25uZWN0XCI6IHtcbiAgICAgIGlmIChtZXNzYWdlLm1heE9ic2VydmVkVGltZXN0YW1wICE9PSB2b2lkIDApIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5tZXNzYWdlLFxuICAgICAgICAgIG1heE9ic2VydmVkVGltZXN0YW1wOiBsb25nVG9VNjQobWVzc2FnZS5tYXhPYnNlcnZlZFRpbWVzdGFtcClcbiAgICAgICAgfTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB7IC4uLm1lc3NhZ2UsIG1heE9ic2VydmVkVGltZXN0YW1wOiB2b2lkIDAgfTtcbiAgICAgIH1cbiAgICB9XG4gICAgZGVmYXVsdDoge1xuICAgICAgY29uc3QgX2V4aGF1c3RpdmVuZXNzQ2hlY2sgPSBtZXNzYWdlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdm9pZCAwO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvdG9jb2wuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/protocol.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/remote_query_set.js":
/*!***********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/remote_query_set.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RemoteQuerySet: () => (/* binding */ RemoteQuerySet)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _long_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../long.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/long.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\nclass RemoteQuerySet {\n  constructor(queryPath, logger) {\n    __publicField(this, \"version\");\n    __publicField(this, \"remoteQuerySet\");\n    __publicField(this, \"queryPath\");\n    __publicField(this, \"logger\");\n    this.version = { querySet: 0, ts: _long_js__WEBPACK_IMPORTED_MODULE_1__.Long.fromNumber(0), identity: 0 };\n    this.remoteQuerySet = /* @__PURE__ */ new Map();\n    this.queryPath = queryPath;\n    this.logger = logger;\n  }\n  transition(transition) {\n    const start = transition.startVersion;\n    if (this.version.querySet !== start.querySet || this.version.ts.notEquals(start.ts) || this.version.identity !== start.identity) {\n      throw new Error(\n        `Invalid start version: ${start.ts.toString()}:${start.querySet}`\n      );\n    }\n    for (const modification of transition.modifications) {\n      switch (modification.type) {\n        case \"QueryUpdated\": {\n          const queryPath = this.queryPath(modification.queryId);\n          if (queryPath) {\n            for (const line of modification.logLines) {\n              (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.logForFunction)(this.logger, \"info\", \"query\", queryPath, line);\n            }\n          }\n          const value = (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(modification.value ?? null);\n          this.remoteQuerySet.set(modification.queryId, {\n            success: true,\n            value,\n            logLines: modification.logLines\n          });\n          break;\n        }\n        case \"QueryFailed\": {\n          const queryPath = this.queryPath(modification.queryId);\n          if (queryPath) {\n            for (const line of modification.logLines) {\n              (0,_logging_js__WEBPACK_IMPORTED_MODULE_2__.logForFunction)(this.logger, \"info\", \"query\", queryPath, line);\n            }\n          }\n          const { errorData } = modification;\n          this.remoteQuerySet.set(modification.queryId, {\n            success: false,\n            errorMessage: modification.errorMessage,\n            errorData: errorData !== void 0 ? (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(errorData) : void 0,\n            logLines: modification.logLines\n          });\n          break;\n        }\n        case \"QueryRemoved\": {\n          this.remoteQuerySet.delete(modification.queryId);\n          break;\n        }\n        default: {\n          const _ = modification;\n          throw new Error(`Invalid modification ${modification.type}`);\n        }\n      }\n    }\n    this.version = transition.endVersion;\n  }\n  remoteQueryResults() {\n    return this.remoteQuerySet;\n  }\n  timestamp() {\n    return this.version.ts;\n  }\n}\n//# sourceMappingURL=remote_query_set.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9yZW1vdGVfcXVlcnlfc2V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBYTtBQUNiO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNxRDtBQUNuQjtBQUNhO0FBQ3hDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixpQkFBaUIsMENBQUk7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxvQkFBb0IsR0FBRyxlQUFlO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDJEQUFjO0FBQzVCO0FBQ0E7QUFDQSx3QkFBd0IsOERBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYywyREFBYztBQUM1QjtBQUNBO0FBQ0Esa0JBQWtCLFlBQVk7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsOENBQThDLDhEQUFZO0FBQzFEO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0Qsa0JBQWtCO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvamlhZGlsaS9EZXNrdG9wL3dlQXJlRmVrZW5Db2tlZC9XZUFyZUZla2VuQ29va2VkLUhhY2thdGhvbi0vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9icm93c2VyL3N5bmMvcmVtb3RlX3F1ZXJ5X3NldC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2RlZlByb3AgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgX19kZWZOb3JtYWxQcm9wID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4ga2V5IGluIG9iaiA/IF9fZGVmUHJvcChvYmosIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlLCB2YWx1ZSB9KSA6IG9ialtrZXldID0gdmFsdWU7XG52YXIgX19wdWJsaWNGaWVsZCA9IChvYmosIGtleSwgdmFsdWUpID0+IF9fZGVmTm9ybWFsUHJvcChvYmosIHR5cGVvZiBrZXkgIT09IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG5pbXBvcnQgeyBqc29uVG9Db252ZXggfSBmcm9tIFwiLi4vLi4vdmFsdWVzL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBMb25nIH0gZnJvbSBcIi4uL2xvbmcuanNcIjtcbmltcG9ydCB7IGxvZ0ZvckZ1bmN0aW9uIH0gZnJvbSBcIi4uL2xvZ2dpbmcuanNcIjtcbmV4cG9ydCBjbGFzcyBSZW1vdGVRdWVyeVNldCB7XG4gIGNvbnN0cnVjdG9yKHF1ZXJ5UGF0aCwgbG9nZ2VyKSB7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInZlcnNpb25cIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInJlbW90ZVF1ZXJ5U2V0XCIpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJxdWVyeVBhdGhcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImxvZ2dlclwiKTtcbiAgICB0aGlzLnZlcnNpb24gPSB7IHF1ZXJ5U2V0OiAwLCB0czogTG9uZy5mcm9tTnVtYmVyKDApLCBpZGVudGl0eTogMCB9O1xuICAgIHRoaXMucmVtb3RlUXVlcnlTZXQgPSAvKiBAX19QVVJFX18gKi8gbmV3IE1hcCgpO1xuICAgIHRoaXMucXVlcnlQYXRoID0gcXVlcnlQYXRoO1xuICAgIHRoaXMubG9nZ2VyID0gbG9nZ2VyO1xuICB9XG4gIHRyYW5zaXRpb24odHJhbnNpdGlvbikge1xuICAgIGNvbnN0IHN0YXJ0ID0gdHJhbnNpdGlvbi5zdGFydFZlcnNpb247XG4gICAgaWYgKHRoaXMudmVyc2lvbi5xdWVyeVNldCAhPT0gc3RhcnQucXVlcnlTZXQgfHwgdGhpcy52ZXJzaW9uLnRzLm5vdEVxdWFscyhzdGFydC50cykgfHwgdGhpcy52ZXJzaW9uLmlkZW50aXR5ICE9PSBzdGFydC5pZGVudGl0eSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgSW52YWxpZCBzdGFydCB2ZXJzaW9uOiAke3N0YXJ0LnRzLnRvU3RyaW5nKCl9OiR7c3RhcnQucXVlcnlTZXR9YFxuICAgICAgKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBtb2RpZmljYXRpb24gb2YgdHJhbnNpdGlvbi5tb2RpZmljYXRpb25zKSB7XG4gICAgICBzd2l0Y2ggKG1vZGlmaWNhdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgXCJRdWVyeVVwZGF0ZWRcIjoge1xuICAgICAgICAgIGNvbnN0IHF1ZXJ5UGF0aCA9IHRoaXMucXVlcnlQYXRoKG1vZGlmaWNhdGlvbi5xdWVyeUlkKTtcbiAgICAgICAgICBpZiAocXVlcnlQYXRoKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGxpbmUgb2YgbW9kaWZpY2F0aW9uLmxvZ0xpbmVzKSB7XG4gICAgICAgICAgICAgIGxvZ0ZvckZ1bmN0aW9uKHRoaXMubG9nZ2VyLCBcImluZm9cIiwgXCJxdWVyeVwiLCBxdWVyeVBhdGgsIGxpbmUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCB2YWx1ZSA9IGpzb25Ub0NvbnZleChtb2RpZmljYXRpb24udmFsdWUgPz8gbnVsbCk7XG4gICAgICAgICAgdGhpcy5yZW1vdGVRdWVyeVNldC5zZXQobW9kaWZpY2F0aW9uLnF1ZXJ5SWQsIHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICAgIGxvZ0xpbmVzOiBtb2RpZmljYXRpb24ubG9nTGluZXNcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIFwiUXVlcnlGYWlsZWRcIjoge1xuICAgICAgICAgIGNvbnN0IHF1ZXJ5UGF0aCA9IHRoaXMucXVlcnlQYXRoKG1vZGlmaWNhdGlvbi5xdWVyeUlkKTtcbiAgICAgICAgICBpZiAocXVlcnlQYXRoKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGxpbmUgb2YgbW9kaWZpY2F0aW9uLmxvZ0xpbmVzKSB7XG4gICAgICAgICAgICAgIGxvZ0ZvckZ1bmN0aW9uKHRoaXMubG9nZ2VyLCBcImluZm9cIiwgXCJxdWVyeVwiLCBxdWVyeVBhdGgsIGxpbmUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBjb25zdCB7IGVycm9yRGF0YSB9ID0gbW9kaWZpY2F0aW9uO1xuICAgICAgICAgIHRoaXMucmVtb3RlUXVlcnlTZXQuc2V0KG1vZGlmaWNhdGlvbi5xdWVyeUlkLCB7XG4gICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgIGVycm9yTWVzc2FnZTogbW9kaWZpY2F0aW9uLmVycm9yTWVzc2FnZSxcbiAgICAgICAgICAgIGVycm9yRGF0YTogZXJyb3JEYXRhICE9PSB2b2lkIDAgPyBqc29uVG9Db252ZXgoZXJyb3JEYXRhKSA6IHZvaWQgMCxcbiAgICAgICAgICAgIGxvZ0xpbmVzOiBtb2RpZmljYXRpb24ubG9nTGluZXNcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlIFwiUXVlcnlSZW1vdmVkXCI6IHtcbiAgICAgICAgICB0aGlzLnJlbW90ZVF1ZXJ5U2V0LmRlbGV0ZShtb2RpZmljYXRpb24ucXVlcnlJZCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDoge1xuICAgICAgICAgIGNvbnN0IF8gPSBtb2RpZmljYXRpb247XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIG1vZGlmaWNhdGlvbiAke21vZGlmaWNhdGlvbi50eXBlfWApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHRoaXMudmVyc2lvbiA9IHRyYW5zaXRpb24uZW5kVmVyc2lvbjtcbiAgfVxuICByZW1vdGVRdWVyeVJlc3VsdHMoKSB7XG4gICAgcmV0dXJuIHRoaXMucmVtb3RlUXVlcnlTZXQ7XG4gIH1cbiAgdGltZXN0YW1wKCkge1xuICAgIHJldHVybiB0aGlzLnZlcnNpb24udHM7XG4gIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlbW90ZV9xdWVyeV9zZXQuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/remote_query_set.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/request_manager.js":
/*!**********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/request_manager.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestManager: () => (/* binding */ RequestManager)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _logging_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\nclass RequestManager {\n  constructor(logger) {\n    this.logger = logger;\n    __publicField(this, \"inflightRequests\");\n    __publicField(this, \"requestsOlderThanRestart\");\n    this.inflightRequests = /* @__PURE__ */ new Map();\n    this.requestsOlderThanRestart = /* @__PURE__ */ new Set();\n  }\n  request(message, sent) {\n    const result = new Promise((resolve) => {\n      const status = sent ? \"Requested\" : \"NotSent\";\n      this.inflightRequests.set(message.requestId, {\n        message,\n        status: { status, requestedAt: /* @__PURE__ */ new Date(), onResult: resolve }\n      });\n    });\n    return result;\n  }\n  /**\n   * Update the state after receiving a response.\n   *\n   * @returns A RequestId if the request is complete and its optimistic update\n   * can be dropped, null otherwise.\n   */\n  onResponse(response) {\n    const requestInfo = this.inflightRequests.get(response.requestId);\n    if (requestInfo === void 0) {\n      return null;\n    }\n    if (requestInfo.status.status === \"Completed\") {\n      return null;\n    }\n    const udfType = requestInfo.message.type === \"Mutation\" ? \"mutation\" : \"action\";\n    const udfPath = requestInfo.message.udfPath;\n    for (const line of response.logLines) {\n      (0,_logging_js__WEBPACK_IMPORTED_MODULE_1__.logForFunction)(this.logger, \"info\", udfType, udfPath, line);\n    }\n    const status = requestInfo.status;\n    let onResolve;\n    if (response.success) {\n      onResolve = () => status.onResult({\n        success: true,\n        logLines: response.logLines,\n        value: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(response.result)\n      });\n    } else {\n      const errorMessage = response.result;\n      const { errorData } = response;\n      (0,_logging_js__WEBPACK_IMPORTED_MODULE_1__.logForFunction)(this.logger, \"error\", udfType, udfPath, errorMessage);\n      onResolve = () => status.onResult({\n        success: false,\n        errorMessage,\n        errorData: errorData !== void 0 ? (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex)(errorData) : void 0,\n        logLines: response.logLines\n      });\n    }\n    if (response.type === \"ActionResponse\" || !response.success) {\n      onResolve();\n      this.inflightRequests.delete(response.requestId);\n      this.requestsOlderThanRestart.delete(response.requestId);\n      return response.requestId;\n    }\n    requestInfo.status = {\n      status: \"Completed\",\n      ts: response.ts,\n      onResolve\n    };\n    return null;\n  }\n  // Remove and returns completed requests.\n  removeCompleted(ts) {\n    const completeRequests = /* @__PURE__ */ new Set();\n    for (const [requestId, requestInfo] of this.inflightRequests.entries()) {\n      const status = requestInfo.status;\n      if (status.status === \"Completed\" && status.ts.lessThanOrEqual(ts)) {\n        status.onResolve();\n        completeRequests.add(requestId);\n        this.inflightRequests.delete(requestId);\n        this.requestsOlderThanRestart.delete(requestId);\n      }\n    }\n    return completeRequests;\n  }\n  restart() {\n    this.requestsOlderThanRestart = new Set(this.inflightRequests.keys());\n    const allMessages = [];\n    for (const [requestId, value] of this.inflightRequests) {\n      if (value.status.status === \"NotSent\") {\n        value.status.status = \"Requested\";\n        allMessages.push(value.message);\n        continue;\n      }\n      if (value.message.type === \"Mutation\") {\n        allMessages.push(value.message);\n      } else {\n        this.inflightRequests.delete(requestId);\n        this.requestsOlderThanRestart.delete(requestId);\n        if (value.status.status === \"Completed\") {\n          throw new Error(\"Action should never be in 'Completed' state\");\n        }\n        value.status.onResult({\n          success: false,\n          errorMessage: \"Connection lost while action was in flight\",\n          logLines: []\n        });\n      }\n    }\n    return allMessages;\n  }\n  resume() {\n    const allMessages = [];\n    for (const [, value] of this.inflightRequests) {\n      if (value.status.status === \"NotSent\") {\n        value.status.status = \"Requested\";\n        allMessages.push(value.message);\n        continue;\n      }\n    }\n    return allMessages;\n  }\n  /**\n   * @returns true if there are any requests that have been requested but have\n   * not be completed yet.\n   */\n  hasIncompleteRequests() {\n    for (const requestInfo of this.inflightRequests.values()) {\n      if (requestInfo.status.status === \"Requested\") {\n        return true;\n      }\n    }\n    return false;\n  }\n  /**\n   * @returns true if there are any inflight requests, including ones that have\n   * completed on the server, but have not been applied.\n   */\n  hasInflightRequests() {\n    return this.inflightRequests.size > 0;\n  }\n  /**\n   * @returns true if there are any inflight requests, that have been hanging around\n   * since prior to the most recent restart.\n   */\n  hasSyncedPastLastReconnect() {\n    return this.requestsOlderThanRestart.size === 0;\n  }\n  timeOfOldestInflightRequest() {\n    if (this.inflightRequests.size === 0) {\n      return null;\n    }\n    let oldestInflightRequest = Date.now();\n    for (const request of this.inflightRequests.values()) {\n      if (request.status.status !== \"Completed\") {\n        if (request.status.requestedAt.getTime() < oldestInflightRequest) {\n          oldestInflightRequest = request.status.requestedAt.getTime();\n        }\n      }\n    }\n    return new Date(oldestInflightRequest);\n  }\n}\n//# sourceMappingURL=request_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/request_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/session.js":
/*!**************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/session.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   newSessionId: () => (/* binding */ newSessionId)\n/* harmony export */ });\n\nfunction newSessionId() {\n  return uuidv4();\n}\nfunction uuidv4() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n    const r = Math.random() * 16 | 0, v = c === \"x\" ? r : r & 3 | 8;\n    return v.toString(16);\n  });\n}\n//# sourceMappingURL=session.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9zZXNzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNOO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qaWFkaWxpL0Rlc2t0b3Avd2VBcmVGZWtlbkNva2VkL1dlQXJlRmVrZW5Db29rZWQtSGFja2F0aG9uLS9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy9zZXNzaW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0IGZ1bmN0aW9uIG5ld1Nlc3Npb25JZCgpIHtcbiAgcmV0dXJuIHV1aWR2NCgpO1xufVxuZnVuY3Rpb24gdXVpZHY0KCkge1xuICByZXR1cm4gXCJ4eHh4eHh4eC14eHh4LTR4eHgteXh4eC14eHh4eHh4eHh4eHhcIi5yZXBsYWNlKC9beHldL2csIChjKSA9PiB7XG4gICAgY29uc3QgciA9IE1hdGgucmFuZG9tKCkgKiAxNiB8IDAsIHYgPSBjID09PSBcInhcIiA/IHIgOiByICYgMyB8IDg7XG4gICAgcmV0dXJuIHYudG9TdHJpbmcoMTYpO1xuICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlc3Npb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/session.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js":
/*!*********************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   canonicalizeUdfPath: () => (/* binding */ canonicalizeUdfPath),\n/* harmony export */   serializePathAndArgs: () => (/* binding */ serializePathAndArgs)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n\n\nfunction canonicalizeUdfPath(udfPath) {\n  const pieces = udfPath.split(\":\");\n  let moduleName;\n  let functionName;\n  if (pieces.length === 1) {\n    moduleName = pieces[0];\n    functionName = \"default\";\n  } else {\n    moduleName = pieces.slice(0, pieces.length - 1).join(\":\");\n    functionName = pieces[pieces.length - 1];\n  }\n  if (moduleName.endsWith(\".js\")) {\n    moduleName = moduleName.slice(0, -3);\n  }\n  return `${moduleName}:${functionName}`;\n}\nfunction serializePathAndArgs(udfPath, args) {\n  return JSON.stringify({\n    udfPath: canonicalizeUdfPath(udfPath),\n    args: (0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(args)\n  });\n}\n//# sourceMappingURL=udf_path_utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2Jyb3dzZXIvc3luYy91ZGZfcGF0aF91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTtBQUN3QztBQUM5QztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFdBQVcsR0FBRyxhQUFhO0FBQ3ZDO0FBQ087QUFDUDtBQUNBO0FBQ0EsVUFBVSw4REFBWTtBQUN0QixHQUFHO0FBQ0g7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2ppYWRpbGkvRGVza3RvcC93ZUFyZUZla2VuQ29rZWQvV2VBcmVGZWtlbkNvb2tlZC1IYWNrYXRob24tL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vYnJvd3Nlci9zeW5jL3VkZl9wYXRoX3V0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgY29udmV4VG9Kc29uIH0gZnJvbSBcIi4uLy4uL3ZhbHVlcy9pbmRleC5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGNhbm9uaWNhbGl6ZVVkZlBhdGgodWRmUGF0aCkge1xuICBjb25zdCBwaWVjZXMgPSB1ZGZQYXRoLnNwbGl0KFwiOlwiKTtcbiAgbGV0IG1vZHVsZU5hbWU7XG4gIGxldCBmdW5jdGlvbk5hbWU7XG4gIGlmIChwaWVjZXMubGVuZ3RoID09PSAxKSB7XG4gICAgbW9kdWxlTmFtZSA9IHBpZWNlc1swXTtcbiAgICBmdW5jdGlvbk5hbWUgPSBcImRlZmF1bHRcIjtcbiAgfSBlbHNlIHtcbiAgICBtb2R1bGVOYW1lID0gcGllY2VzLnNsaWNlKDAsIHBpZWNlcy5sZW5ndGggLSAxKS5qb2luKFwiOlwiKTtcbiAgICBmdW5jdGlvbk5hbWUgPSBwaWVjZXNbcGllY2VzLmxlbmd0aCAtIDFdO1xuICB9XG4gIGlmIChtb2R1bGVOYW1lLmVuZHNXaXRoKFwiLmpzXCIpKSB7XG4gICAgbW9kdWxlTmFtZSA9IG1vZHVsZU5hbWUuc2xpY2UoMCwgLTMpO1xuICB9XG4gIHJldHVybiBgJHttb2R1bGVOYW1lfToke2Z1bmN0aW9uTmFtZX1gO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNlcmlhbGl6ZVBhdGhBbmRBcmdzKHVkZlBhdGgsIGFyZ3MpIHtcbiAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHtcbiAgICB1ZGZQYXRoOiBjYW5vbmljYWxpemVVZGZQYXRoKHVkZlBhdGgpLFxuICAgIGFyZ3M6IGNvbnZleFRvSnNvbihhcmdzKVxuICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVkZl9wYXRoX3V0aWxzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/udf_path_utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js":
/*!*************************************************************************!*\
  !*** ./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketManager: () => (/* binding */ WebSocketManager)\n/* harmony export */ });\n/* harmony import */ var _protocol_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./protocol.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/sync/protocol.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\nconst CLOSE_NORMAL = 1e3;\nconst CLOSE_GOING_AWAY = 1001;\nconst CLOSE_NO_STATUS = 1005;\nconst CLOSE_NOT_FOUND = 4040;\nclass WebSocketManager {\n  constructor(uri, callbacks, webSocketConstructor, logger) {\n    __publicField(this, \"socket\");\n    __publicField(this, \"connectionCount\");\n    __publicField(this, \"lastCloseReason\");\n    /** Upon HTTPS/WSS failure, the first jittered backoff duration, in ms. */\n    __publicField(this, \"initialBackoff\");\n    /** We backoff exponentially, but we need to cap that--this is the jittered max. */\n    __publicField(this, \"maxBackoff\");\n    /** How many times have we failed consecutively? */\n    __publicField(this, \"retries\");\n    /** How long before lack of server response causes us to initiate a reconnect,\n     * in ms */\n    __publicField(this, \"serverInactivityThreshold\");\n    __publicField(this, \"reconnectDueToServerInactivityTimeout\");\n    __publicField(this, \"uri\");\n    __publicField(this, \"onOpen\");\n    __publicField(this, \"onResume\");\n    __publicField(this, \"onMessage\");\n    __publicField(this, \"webSocketConstructor\");\n    __publicField(this, \"logger\");\n    this.webSocketConstructor = webSocketConstructor;\n    this.socket = { state: \"disconnected\" };\n    this.connectionCount = 0;\n    this.lastCloseReason = \"InitialConnect\";\n    this.initialBackoff = 100;\n    this.maxBackoff = 16e3;\n    this.retries = 0;\n    this.serverInactivityThreshold = 3e4;\n    this.reconnectDueToServerInactivityTimeout = null;\n    this.uri = uri;\n    this.onOpen = callbacks.onOpen;\n    this.onResume = callbacks.onResume;\n    this.onMessage = callbacks.onMessage;\n    this.logger = logger;\n    this.connect();\n  }\n  connect() {\n    if (this.socket.state === \"terminated\") {\n      return;\n    }\n    if (this.socket.state !== \"disconnected\" && this.socket.state !== \"stopped\") {\n      throw new Error(\n        \"Didn't start connection from disconnected state: \" + this.socket.state\n      );\n    }\n    const ws = new this.webSocketConstructor(this.uri);\n    this._logVerbose(\"constructed WebSocket\");\n    this.socket = {\n      state: \"connecting\",\n      ws,\n      paused: \"no\"\n    };\n    this.resetServerInactivityTimeout();\n    ws.onopen = () => {\n      this.logger.logVerbose(\"begin ws.onopen\");\n      if (this.socket.state !== \"connecting\") {\n        throw new Error(\"onopen called with socket not in connecting state\");\n      }\n      this.socket = {\n        state: \"ready\",\n        ws,\n        paused: this.socket.paused === \"yes\" ? \"uninitialized\" : \"no\"\n      };\n      this.resetServerInactivityTimeout();\n      if (this.socket.paused === \"no\") {\n        this.onOpen({\n          connectionCount: this.connectionCount,\n          lastCloseReason: this.lastCloseReason\n        });\n      }\n      if (this.lastCloseReason !== \"InitialConnect\") {\n        this.logger.log(\"WebSocket reconnected\");\n      }\n      this.connectionCount += 1;\n      this.lastCloseReason = null;\n    };\n    ws.onerror = (error) => {\n      const message = error.message;\n      this.logger.log(`WebSocket error: ${message}`);\n    };\n    ws.onmessage = (message) => {\n      this.resetServerInactivityTimeout();\n      const serverMessage = (0,_protocol_js__WEBPACK_IMPORTED_MODULE_0__.parseServerMessage)(JSON.parse(message.data));\n      this._logVerbose(`received ws message with type ${serverMessage.type}`);\n      const response = this.onMessage(serverMessage);\n      if (response.hasSyncedPastLastReconnect) {\n        this.retries = 0;\n      }\n    };\n    ws.onclose = (event) => {\n      this._logVerbose(\"begin ws.onclose\");\n      if (this.lastCloseReason === null) {\n        this.lastCloseReason = event.reason ?? \"OnCloseInvoked\";\n      }\n      if (event.code !== CLOSE_NORMAL && event.code !== CLOSE_GOING_AWAY && // This commonly gets fired on mobile apps when the app is backgrounded\n      event.code !== CLOSE_NO_STATUS && event.code !== CLOSE_NOT_FOUND) {\n        let msg = `WebSocket closed with code ${event.code}`;\n        if (event.reason) {\n          msg += `: ${event.reason}`;\n        }\n        this.logger.log(msg);\n      }\n      this.scheduleReconnect();\n      return;\n    };\n  }\n  /**\n   * @returns The state of the {@link Socket}.\n   */\n  socketState() {\n    return this.socket.state;\n  }\n  /**\n   * @param message - A ClientMessage to send.\n   * @returns Whether the message (might have been) sent.\n   */\n  sendMessage(message) {\n    this._logVerbose(`sending message with type ${message.type}`);\n    if (this.socket.state === \"ready\" && this.socket.paused === \"no\") {\n      const encodedMessage = (0,_protocol_js__WEBPACK_IMPORTED_MODULE_0__.encodeClientMessage)(message);\n      const request = JSON.stringify(encodedMessage);\n      try {\n        this.socket.ws.send(request);\n      } catch (error) {\n        this.logger.log(\n          `Failed to send message on WebSocket, reconnecting: ${error}`\n        );\n        this.closeAndReconnect(\"FailedToSendMessage\");\n      }\n      return true;\n    }\n    return false;\n  }\n  resetServerInactivityTimeout() {\n    if (this.socket.state === \"terminated\") {\n      return;\n    }\n    if (this.reconnectDueToServerInactivityTimeout !== null) {\n      clearTimeout(this.reconnectDueToServerInactivityTimeout);\n      this.reconnectDueToServerInactivityTimeout = null;\n    }\n    this.reconnectDueToServerInactivityTimeout = setTimeout(() => {\n      this.closeAndReconnect(\"InactiveServer\");\n    }, this.serverInactivityThreshold);\n  }\n  scheduleReconnect() {\n    this.socket = { state: \"disconnected\" };\n    const backoff = this.nextBackoff();\n    this.logger.log(`Attempting reconnect in ${backoff}ms`);\n    setTimeout(() => this.connect(), backoff);\n  }\n  /**\n   * Close the WebSocket and schedule a reconnect.\n   *\n   * This should be used when we hit an error and would like to restart the session.\n   */\n  closeAndReconnect(closeReason) {\n    this._logVerbose(`begin closeAndReconnect with reason ${closeReason}`);\n    switch (this.socket.state) {\n      case \"disconnected\":\n      case \"terminated\":\n      case \"stopped\":\n        return;\n      case \"connecting\":\n      case \"ready\": {\n        this.lastCloseReason = closeReason;\n        void this.close();\n        this.scheduleReconnect();\n        return;\n      }\n      default: {\n        const _ = this.socket;\n      }\n    }\n  }\n  /**\n   * Close the WebSocket, being careful to clear the onclose handler to avoid re-entrant\n   * calls. Use this instead of directly calling `ws.close()`\n   *\n   * It is the callers responsibility to update the state after this method is called so that the\n   * closed socket is not accessible or used again after this method is called\n   */\n  close() {\n    switch (this.socket.state) {\n      case \"disconnected\":\n      case \"terminated\":\n      case \"stopped\":\n        return Promise.resolve();\n      case \"connecting\": {\n        const ws = this.socket.ws;\n        return new Promise((r) => {\n          ws.onclose = () => {\n            this._logVerbose(\"Closed after connecting\");\n            r();\n          };\n          ws.onopen = () => {\n            this._logVerbose(\"Opened after connecting\");\n            ws.close();\n          };\n        });\n      }\n      case \"ready\": {\n        this._logVerbose(\"ws.close called\");\n        const ws = this.socket.ws;\n        const result = new Promise((r) => {\n          ws.onclose = () => {\n            r();\n          };\n        });\n        ws.close();\n        return result;\n      }\n      default: {\n        const _ = this.socket;\n        return Promise.resolve();\n      }\n    }\n  }\n  /**\n   * Close the WebSocket and do not reconnect.\n   * @returns A Promise that resolves when the WebSocket `onClose` callback is called.\n   */\n  terminate() {\n    if (this.reconnectDueToServerInactivityTimeout) {\n      clearTimeout(this.reconnectDueToServerInactivityTimeout);\n    }\n    switch (this.socket.state) {\n      case \"terminated\":\n      case \"stopped\":\n      case \"disconnected\":\n      case \"connecting\":\n      case \"ready\": {\n        const result = this.close();\n        this.socket = { state: \"terminated\" };\n        return result;\n      }\n      default: {\n        const _ = this.socket;\n        throw new Error(\n          `Invalid websocket state: ${this.socket.state}`\n        );\n      }\n    }\n  }\n  stop() {\n    switch (this.socket.state) {\n      case \"terminated\":\n        return Promise.resolve();\n      case \"connecting\":\n      case \"stopped\":\n      case \"disconnected\":\n      case \"ready\": {\n        const result = this.close();\n        this.socket = { state: \"stopped\" };\n        return result;\n      }\n      default: {\n        const _ = this.socket;\n        return Promise.resolve();\n      }\n    }\n  }\n  /**\n   * Create a new WebSocket after a previous `stop()`, unless `terminate()` was\n   * called before.\n   */\n  restart() {\n    switch (this.socket.state) {\n      case \"stopped\":\n        break;\n      case \"terminated\":\n        return;\n      case \"connecting\":\n      case \"ready\":\n      case \"disconnected\":\n        throw new Error(\"`restart()` is only valid after `stop()`\");\n      default: {\n        const _ = this.socket;\n      }\n    }\n    this.connect();\n  }\n  pause() {\n    switch (this.socket.state) {\n      case \"disconnected\":\n      case \"stopped\":\n      case \"terminated\":\n        return;\n      case \"connecting\":\n      case \"ready\": {\n        this.socket = { ...this.socket, paused: \"yes\" };\n        return;\n      }\n      default: {\n        const _ = this.socket;\n        return;\n      }\n    }\n  }\n  /**\n   * Resume the state machine if previously paused.\n   */\n  resume() {\n    switch (this.socket.state) {\n      case \"connecting\":\n        this.socket = { ...this.socket, paused: \"no\" };\n        return;\n      case \"ready\":\n        if (this.socket.paused === \"uninitialized\") {\n          this.socket = { ...this.socket, paused: \"no\" };\n          this.onOpen({\n            connectionCount: this.connectionCount,\n            lastCloseReason: this.lastCloseReason\n          });\n        } else if (this.socket.paused === \"yes\") {\n          this.socket = { ...this.socket, paused: \"no\" };\n          this.onResume();\n        }\n        return;\n      case \"terminated\":\n      case \"stopped\":\n      case \"disconnected\":\n        return;\n      default: {\n        const _ = this.socket;\n      }\n    }\n    this.connect();\n  }\n  _logVerbose(message) {\n    this.logger.logVerbose(message);\n  }\n  nextBackoff() {\n    const baseBackoff = this.initialBackoff * Math.pow(2, this.retries);\n    this.retries += 1;\n    const actualBackoff = Math.min(baseBackoff, this.maxBackoff);\n    const jitter = actualBackoff * (Math.random() - 0.5);\n    return actualBackoff + jitter;\n  }\n}\n//# sourceMappingURL=web_socket_manager.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/browser/sync/web_socket_manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/common/index.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/common/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isSimpleObject: () => (/* binding */ isSimpleObject),\n/* harmony export */   parseArgs: () => (/* binding */ parseArgs),\n/* harmony export */   validateDeploymentUrl: () => (/* binding */ validateDeploymentUrl)\n/* harmony export */ });\n\nfunction parseArgs(args) {\n  if (args === void 0) {\n    return {};\n  }\n  if (!isSimpleObject(args)) {\n    throw new Error(\n      `The arguments to a Convex function must be an object. Received: ${args}`\n    );\n  }\n  return args;\n}\nfunction validateDeploymentUrl(deploymentUrl) {\n  if (typeof deploymentUrl === \"undefined\") {\n    throw new Error(\n      `Client created with undefined deployment address. If you used an environment variable, check that it's set.`\n    );\n  }\n  if (typeof deploymentUrl !== \"string\") {\n    throw new Error(\n      `Invalid deployment address: found ${deploymentUrl}\".`\n    );\n  }\n  if (!(deploymentUrl.startsWith(\"http:\") || deploymentUrl.startsWith(\"https:\"))) {\n    throw new Error(\n      `Invalid deployment address: Must start with \"https://\" or \"http://\". Found \"${deploymentUrl}\".`\n    );\n  }\n  try {\n    new URL(deploymentUrl);\n  } catch {\n    throw new Error(\n      `Invalid deployment address: \"${deploymentUrl}\" is not a valid URL. If you believe this URL is correct, use the \\`skipConvexDeploymentUrlCheck\\` option to bypass this.`\n    );\n  }\n  if (deploymentUrl.endsWith(\".convex.site\")) {\n    throw new Error(\n      `Invalid deployment address: \"${deploymentUrl}\" ends with .convex.site, which is used for HTTP Actions. Convex deployment URLs typically end with .convex.cloud? If you believe this URL is correct, use the \\`skipConvexDeploymentUrlCheck\\` option to bypass this.`\n    );\n  }\n}\nfunction isSimpleObject(value) {\n  const isObject = typeof value === \"object\";\n  const prototype = Object.getPrototypeOf(value);\n  const isSimple = prototype === null || prototype === Object.prototype || // Objects generated from other contexts (e.g. across Node.js `vm` modules) will not satisfy the previous\n  // conditions but are still simple objects.\n  prototype?.constructor?.name === \"Object\";\n  return isObject && isSimple;\n}\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2NvbW1vbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTtBQUNOO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlFQUF5RSxLQUFLO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxjQUFjO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUZBQXFGLGNBQWM7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxzQ0FBc0MsY0FBYztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxjQUFjO0FBQ3BEO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2ppYWRpbGkvRGVza3RvcC93ZUFyZUZla2VuQ29rZWQvV2VBcmVGZWtlbkNvb2tlZC1IYWNrYXRob24tL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vY29tbW9uL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQXJncyhhcmdzKSB7XG4gIGlmIChhcmdzID09PSB2b2lkIDApIHtcbiAgICByZXR1cm4ge307XG4gIH1cbiAgaWYgKCFpc1NpbXBsZU9iamVjdChhcmdzKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBUaGUgYXJndW1lbnRzIHRvIGEgQ29udmV4IGZ1bmN0aW9uIG11c3QgYmUgYW4gb2JqZWN0LiBSZWNlaXZlZDogJHthcmdzfWBcbiAgICApO1xuICB9XG4gIHJldHVybiBhcmdzO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlRGVwbG95bWVudFVybChkZXBsb3ltZW50VXJsKSB7XG4gIGlmICh0eXBlb2YgZGVwbG95bWVudFVybCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBDbGllbnQgY3JlYXRlZCB3aXRoIHVuZGVmaW5lZCBkZXBsb3ltZW50IGFkZHJlc3MuIElmIHlvdSB1c2VkIGFuIGVudmlyb25tZW50IHZhcmlhYmxlLCBjaGVjayB0aGF0IGl0J3Mgc2V0LmBcbiAgICApO1xuICB9XG4gIGlmICh0eXBlb2YgZGVwbG95bWVudFVybCAhPT0gXCJzdHJpbmdcIikge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBJbnZhbGlkIGRlcGxveW1lbnQgYWRkcmVzczogZm91bmQgJHtkZXBsb3ltZW50VXJsfVwiLmBcbiAgICApO1xuICB9XG4gIGlmICghKGRlcGxveW1lbnRVcmwuc3RhcnRzV2l0aChcImh0dHA6XCIpIHx8IGRlcGxveW1lbnRVcmwuc3RhcnRzV2l0aChcImh0dHBzOlwiKSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgSW52YWxpZCBkZXBsb3ltZW50IGFkZHJlc3M6IE11c3Qgc3RhcnQgd2l0aCBcImh0dHBzOi8vXCIgb3IgXCJodHRwOi8vXCIuIEZvdW5kIFwiJHtkZXBsb3ltZW50VXJsfVwiLmBcbiAgICApO1xuICB9XG4gIHRyeSB7XG4gICAgbmV3IFVSTChkZXBsb3ltZW50VXJsKTtcbiAgfSBjYXRjaCB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYEludmFsaWQgZGVwbG95bWVudCBhZGRyZXNzOiBcIiR7ZGVwbG95bWVudFVybH1cIiBpcyBub3QgYSB2YWxpZCBVUkwuIElmIHlvdSBiZWxpZXZlIHRoaXMgVVJMIGlzIGNvcnJlY3QsIHVzZSB0aGUgXFxgc2tpcENvbnZleERlcGxveW1lbnRVcmxDaGVja1xcYCBvcHRpb24gdG8gYnlwYXNzIHRoaXMuYFxuICAgICk7XG4gIH1cbiAgaWYgKGRlcGxveW1lbnRVcmwuZW5kc1dpdGgoXCIuY29udmV4LnNpdGVcIikpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgSW52YWxpZCBkZXBsb3ltZW50IGFkZHJlc3M6IFwiJHtkZXBsb3ltZW50VXJsfVwiIGVuZHMgd2l0aCAuY29udmV4LnNpdGUsIHdoaWNoIGlzIHVzZWQgZm9yIEhUVFAgQWN0aW9ucy4gQ29udmV4IGRlcGxveW1lbnQgVVJMcyB0eXBpY2FsbHkgZW5kIHdpdGggLmNvbnZleC5jbG91ZD8gSWYgeW91IGJlbGlldmUgdGhpcyBVUkwgaXMgY29ycmVjdCwgdXNlIHRoZSBcXGBza2lwQ29udmV4RGVwbG95bWVudFVybENoZWNrXFxgIG9wdGlvbiB0byBieXBhc3MgdGhpcy5gXG4gICAgKTtcbiAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGlzU2ltcGxlT2JqZWN0KHZhbHVlKSB7XG4gIGNvbnN0IGlzT2JqZWN0ID0gdHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiO1xuICBjb25zdCBwcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YodmFsdWUpO1xuICBjb25zdCBpc1NpbXBsZSA9IHByb3RvdHlwZSA9PT0gbnVsbCB8fCBwcm90b3R5cGUgPT09IE9iamVjdC5wcm90b3R5cGUgfHwgLy8gT2JqZWN0cyBnZW5lcmF0ZWQgZnJvbSBvdGhlciBjb250ZXh0cyAoZS5nLiBhY3Jvc3MgTm9kZS5qcyBgdm1gIG1vZHVsZXMpIHdpbGwgbm90IHNhdGlzZnkgdGhlIHByZXZpb3VzXG4gIC8vIGNvbmRpdGlvbnMgYnV0IGFyZSBzdGlsbCBzaW1wbGUgb2JqZWN0cy5cbiAgcHJvdG90eXBlPy5jb25zdHJ1Y3Rvcj8ubmFtZSA9PT0gXCJPYmplY3RcIjtcbiAgcmV0dXJuIGlzT2JqZWN0ICYmIGlzU2ltcGxlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/common/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/index.js":
/*!***********************************************!*\
  !*** ./node_modules/convex/dist/esm/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n\nconst version = \"1.17.3\";\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTtBQUNOO0FBQ1AiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qaWFkaWxpL0Rlc2t0b3Avd2VBcmVGZWtlbkNva2VkL1dlQXJlRmVrZW5Db29rZWQtSGFja2F0aG9uLS9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0IGNvbnN0IHZlcnNpb24gPSBcIjEuMTcuM1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/ConvexAuthState.js":
/*!***************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/ConvexAuthState.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexProviderWithAuth: () => (/* binding */ ConvexProviderWithAuth),\n/* harmony export */   useConvexAuth: () => (/* binding */ useConvexAuth)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/convex/dist/esm/react/client.js\");\n\n\n\nconst ConvexAuthContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(void 0);\nfunction useConvexAuth() {\n  const authContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ConvexAuthContext);\n  if (authContext === void 0) {\n    throw new Error(\n      \"Could not find `ConvexProviderWithAuth` (or `ConvexProviderWithClerk` or `ConvexProviderWithAuth0`) as an ancestor component. This component may be missing, or you might have two instances of the `convex/react` module loaded in your project.\"\n    );\n  }\n  return authContext;\n}\nfunction ConvexProviderWithAuth({\n  children,\n  client,\n  useAuth\n}) {\n  const {\n    isLoading: tokenLoading,\n    isAuthenticated,\n    fetchAccessToken\n  } = useAuth();\n  const [isConvexAuthenticated, setIsConvexAuthenticated] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  if (tokenLoading && isConvexAuthenticated !== null) {\n    setIsConvexAuthenticated(null);\n  }\n  if (!tokenLoading && !isAuthenticated && isConvexAuthenticated !== false) {\n    setIsConvexAuthenticated(false);\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n    ConvexAuthContext.Provider,\n    {\n      value: {\n        isLoading: isConvexAuthenticated === null,\n        isAuthenticated: isAuthenticated && (isConvexAuthenticated ?? false)\n      }\n    },\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      ConvexAuthStateFirstEffect,\n      {\n        isAuthenticated,\n        fetchAccessToken,\n        isLoading: tokenLoading,\n        client,\n        setIsConvexAuthenticated\n      }\n    ),\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_client_js__WEBPACK_IMPORTED_MODULE_1__.ConvexProvider, { client }, children),\n    /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\n      ConvexAuthStateLastEffect,\n      {\n        isAuthenticated,\n        fetchAccessToken,\n        isLoading: tokenLoading,\n        client,\n        setIsConvexAuthenticated\n      }\n    )\n  );\n}\nfunction ConvexAuthStateFirstEffect({\n  isAuthenticated,\n  fetchAccessToken,\n  isLoading,\n  client,\n  setIsConvexAuthenticated\n}) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    let isThisEffectRelevant = true;\n    if (isAuthenticated) {\n      client.setAuth(fetchAccessToken, (backendReportsIsAuthenticated) => {\n        if (isThisEffectRelevant) {\n          setIsConvexAuthenticated(() => backendReportsIsAuthenticated);\n        }\n      });\n      return () => {\n        isThisEffectRelevant = false;\n        setIsConvexAuthenticated(\n          (isConvexAuthenticated) => isConvexAuthenticated ? false : null\n        );\n      };\n    }\n  }, [\n    isAuthenticated,\n    fetchAccessToken,\n    isLoading,\n    client,\n    setIsConvexAuthenticated\n  ]);\n  return null;\n}\nfunction ConvexAuthStateLastEffect({\n  isAuthenticated,\n  fetchAccessToken,\n  isLoading,\n  client,\n  setIsConvexAuthenticated\n}) {\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (isAuthenticated) {\n      return () => {\n        client.clearAuth();\n        setIsConvexAuthenticated(() => null);\n      };\n    }\n  }, [\n    isAuthenticated,\n    fetchAccessToken,\n    isLoading,\n    client,\n    setIsConvexAuthenticated\n  ]);\n  return null;\n}\n//# sourceMappingURL=ConvexAuthState.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L0NvbnZleEF1dGhTdGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWE7QUFNRTtBQUM4QjtBQUM3QywwQkFBMEIsb0RBQWE7QUFDaEM7QUFDUCxzQkFBc0IsaURBQVU7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSiw0REFBNEQsK0NBQVE7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGdEQUFtQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsb0JBQW9CLGdEQUFtQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZ0RBQW1CLENBQUMsc0RBQWMsSUFBSSxRQUFRO0FBQ2xFLG9CQUFvQixnREFBbUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxFQUFFLGdEQUFTO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsRUFBRSxnREFBUztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qaWFkaWxpL0Rlc2t0b3Avd2VBcmVGZWtlbkNva2VkL1dlQXJlRmVrZW5Db29rZWQtSGFja2F0aG9uLS9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L0NvbnZleEF1dGhTdGF0ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCBSZWFjdCwge1xuICBjcmVhdGVDb250ZXh0LFxuICB1c2VDb250ZXh0LFxuICB1c2VFZmZlY3QsXG4gIHVzZVN0YXRlXG59IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgQ29udmV4UHJvdmlkZXIgfSBmcm9tIFwiLi9jbGllbnQuanNcIjtcbmNvbnN0IENvbnZleEF1dGhDb250ZXh0ID0gY3JlYXRlQ29udGV4dCh2b2lkIDApO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUNvbnZleEF1dGgoKSB7XG4gIGNvbnN0IGF1dGhDb250ZXh0ID0gdXNlQ29udGV4dChDb252ZXhBdXRoQ29udGV4dCk7XG4gIGlmIChhdXRoQ29udGV4dCA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgXCJDb3VsZCBub3QgZmluZCBgQ29udmV4UHJvdmlkZXJXaXRoQXV0aGAgKG9yIGBDb252ZXhQcm92aWRlcldpdGhDbGVya2Agb3IgYENvbnZleFByb3ZpZGVyV2l0aEF1dGgwYCkgYXMgYW4gYW5jZXN0b3IgY29tcG9uZW50LiBUaGlzIGNvbXBvbmVudCBtYXkgYmUgbWlzc2luZywgb3IgeW91IG1pZ2h0IGhhdmUgdHdvIGluc3RhbmNlcyBvZiB0aGUgYGNvbnZleC9yZWFjdGAgbW9kdWxlIGxvYWRlZCBpbiB5b3VyIHByb2plY3QuXCJcbiAgICApO1xuICB9XG4gIHJldHVybiBhdXRoQ29udGV4dDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBDb252ZXhQcm92aWRlcldpdGhBdXRoKHtcbiAgY2hpbGRyZW4sXG4gIGNsaWVudCxcbiAgdXNlQXV0aFxufSkge1xuICBjb25zdCB7XG4gICAgaXNMb2FkaW5nOiB0b2tlbkxvYWRpbmcsXG4gICAgaXNBdXRoZW50aWNhdGVkLFxuICAgIGZldGNoQWNjZXNzVG9rZW5cbiAgfSA9IHVzZUF1dGgoKTtcbiAgY29uc3QgW2lzQ29udmV4QXV0aGVudGljYXRlZCwgc2V0SXNDb252ZXhBdXRoZW50aWNhdGVkXSA9IHVzZVN0YXRlKG51bGwpO1xuICBpZiAodG9rZW5Mb2FkaW5nICYmIGlzQ29udmV4QXV0aGVudGljYXRlZCAhPT0gbnVsbCkge1xuICAgIHNldElzQ29udmV4QXV0aGVudGljYXRlZChudWxsKTtcbiAgfVxuICBpZiAoIXRva2VuTG9hZGluZyAmJiAhaXNBdXRoZW50aWNhdGVkICYmIGlzQ29udmV4QXV0aGVudGljYXRlZCAhPT0gZmFsc2UpIHtcbiAgICBzZXRJc0NvbnZleEF1dGhlbnRpY2F0ZWQoZmFsc2UpO1xuICB9XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBDb252ZXhBdXRoQ29udGV4dC5Qcm92aWRlcixcbiAgICB7XG4gICAgICB2YWx1ZToge1xuICAgICAgICBpc0xvYWRpbmc6IGlzQ29udmV4QXV0aGVudGljYXRlZCA9PT0gbnVsbCxcbiAgICAgICAgaXNBdXRoZW50aWNhdGVkOiBpc0F1dGhlbnRpY2F0ZWQgJiYgKGlzQ29udmV4QXV0aGVudGljYXRlZCA/PyBmYWxzZSlcbiAgICAgIH1cbiAgICB9LFxuICAgIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgQ29udmV4QXV0aFN0YXRlRmlyc3RFZmZlY3QsXG4gICAgICB7XG4gICAgICAgIGlzQXV0aGVudGljYXRlZCxcbiAgICAgICAgZmV0Y2hBY2Nlc3NUb2tlbixcbiAgICAgICAgaXNMb2FkaW5nOiB0b2tlbkxvYWRpbmcsXG4gICAgICAgIGNsaWVudCxcbiAgICAgICAgc2V0SXNDb252ZXhBdXRoZW50aWNhdGVkXG4gICAgICB9XG4gICAgKSxcbiAgICAvKiBAX19QVVJFX18gKi8gUmVhY3QuY3JlYXRlRWxlbWVudChDb252ZXhQcm92aWRlciwgeyBjbGllbnQgfSwgY2hpbGRyZW4pLFxuICAgIC8qIEBfX1BVUkVfXyAqLyBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgQ29udmV4QXV0aFN0YXRlTGFzdEVmZmVjdCxcbiAgICAgIHtcbiAgICAgICAgaXNBdXRoZW50aWNhdGVkLFxuICAgICAgICBmZXRjaEFjY2Vzc1Rva2VuLFxuICAgICAgICBpc0xvYWRpbmc6IHRva2VuTG9hZGluZyxcbiAgICAgICAgY2xpZW50LFxuICAgICAgICBzZXRJc0NvbnZleEF1dGhlbnRpY2F0ZWRcbiAgICAgIH1cbiAgICApXG4gICk7XG59XG5mdW5jdGlvbiBDb252ZXhBdXRoU3RhdGVGaXJzdEVmZmVjdCh7XG4gIGlzQXV0aGVudGljYXRlZCxcbiAgZmV0Y2hBY2Nlc3NUb2tlbixcbiAgaXNMb2FkaW5nLFxuICBjbGllbnQsXG4gIHNldElzQ29udmV4QXV0aGVudGljYXRlZFxufSkge1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGxldCBpc1RoaXNFZmZlY3RSZWxldmFudCA9IHRydWU7XG4gICAgaWYgKGlzQXV0aGVudGljYXRlZCkge1xuICAgICAgY2xpZW50LnNldEF1dGgoZmV0Y2hBY2Nlc3NUb2tlbiwgKGJhY2tlbmRSZXBvcnRzSXNBdXRoZW50aWNhdGVkKSA9PiB7XG4gICAgICAgIGlmIChpc1RoaXNFZmZlY3RSZWxldmFudCkge1xuICAgICAgICAgIHNldElzQ29udmV4QXV0aGVudGljYXRlZCgoKSA9PiBiYWNrZW5kUmVwb3J0c0lzQXV0aGVudGljYXRlZCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgaXNUaGlzRWZmZWN0UmVsZXZhbnQgPSBmYWxzZTtcbiAgICAgICAgc2V0SXNDb252ZXhBdXRoZW50aWNhdGVkKFxuICAgICAgICAgIChpc0NvbnZleEF1dGhlbnRpY2F0ZWQpID0+IGlzQ29udmV4QXV0aGVudGljYXRlZCA/IGZhbHNlIDogbnVsbFxuICAgICAgICApO1xuICAgICAgfTtcbiAgICB9XG4gIH0sIFtcbiAgICBpc0F1dGhlbnRpY2F0ZWQsXG4gICAgZmV0Y2hBY2Nlc3NUb2tlbixcbiAgICBpc0xvYWRpbmcsXG4gICAgY2xpZW50LFxuICAgIHNldElzQ29udmV4QXV0aGVudGljYXRlZFxuICBdKTtcbiAgcmV0dXJuIG51bGw7XG59XG5mdW5jdGlvbiBDb252ZXhBdXRoU3RhdGVMYXN0RWZmZWN0KHtcbiAgaXNBdXRoZW50aWNhdGVkLFxuICBmZXRjaEFjY2Vzc1Rva2VuLFxuICBpc0xvYWRpbmcsXG4gIGNsaWVudCxcbiAgc2V0SXNDb252ZXhBdXRoZW50aWNhdGVkXG59KSB7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGlzQXV0aGVudGljYXRlZCkge1xuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgY2xpZW50LmNsZWFyQXV0aCgpO1xuICAgICAgICBzZXRJc0NvbnZleEF1dGhlbnRpY2F0ZWQoKCkgPT4gbnVsbCk7XG4gICAgICB9O1xuICAgIH1cbiAgfSwgW1xuICAgIGlzQXV0aGVudGljYXRlZCxcbiAgICBmZXRjaEFjY2Vzc1Rva2VuLFxuICAgIGlzTG9hZGluZyxcbiAgICBjbGllbnQsXG4gICAgc2V0SXNDb252ZXhBdXRoZW50aWNhdGVkXG4gIF0pO1xuICByZXR1cm4gbnVsbDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbnZleEF1dGhTdGF0ZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/ConvexAuthState.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/auth_helpers.js":
/*!************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/auth_helpers.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthLoading: () => (/* binding */ AuthLoading),\n/* harmony export */   Authenticated: () => (/* binding */ Authenticated),\n/* harmony export */   Unauthenticated: () => (/* binding */ Unauthenticated)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ConvexAuthState.js */ \"(ssr)/./node_modules/convex/dist/esm/react/ConvexAuthState.js\");\n\n\n\nfunction Authenticated({ children }) {\n  const { isLoading, isAuthenticated } = (0,_ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_1__.useConvexAuth)();\n  if (isLoading || !isAuthenticated) {\n    return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n}\nfunction Unauthenticated({ children }) {\n  const { isLoading, isAuthenticated } = (0,_ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_1__.useConvexAuth)();\n  if (isLoading || isAuthenticated) {\n    return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n}\nfunction AuthLoading({ children }) {\n  const { isLoading } = (0,_ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_1__.useConvexAuth)();\n  if (!isLoading) {\n    return null;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, children);\n}\n//# sourceMappingURL=auth_helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L2F1dGhfaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFhO0FBQ2E7QUFDMkI7QUFDOUMseUJBQXlCLFVBQVU7QUFDMUMsVUFBVSw2QkFBNkIsRUFBRSxrRUFBYTtBQUN0RDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsZ0RBQW1CLENBQUMsMkNBQWM7QUFDM0Q7QUFDTywyQkFBMkIsVUFBVTtBQUM1QyxVQUFVLDZCQUE2QixFQUFFLGtFQUFhO0FBQ3REO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixnREFBbUIsQ0FBQywyQ0FBYztBQUMzRDtBQUNPLHVCQUF1QixVQUFVO0FBQ3hDLFVBQVUsWUFBWSxFQUFFLGtFQUFhO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixnREFBbUIsQ0FBQywyQ0FBYztBQUMzRDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvamlhZGlsaS9EZXNrdG9wL3dlQXJlRmVrZW5Db2tlZC9XZUFyZUZla2VuQ29va2VkLUhhY2thdGhvbi0vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9yZWFjdC9hdXRoX2hlbHBlcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VDb252ZXhBdXRoIH0gZnJvbSBcIi4vQ29udmV4QXV0aFN0YXRlLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gQXV0aGVudGljYXRlZCh7IGNoaWxkcmVuIH0pIHtcbiAgY29uc3QgeyBpc0xvYWRpbmcsIGlzQXV0aGVudGljYXRlZCB9ID0gdXNlQ29udmV4QXV0aCgpO1xuICBpZiAoaXNMb2FkaW5nIHx8ICFpc0F1dGhlbnRpY2F0ZWQpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIGNoaWxkcmVuKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBVbmF1dGhlbnRpY2F0ZWQoeyBjaGlsZHJlbiB9KSB7XG4gIGNvbnN0IHsgaXNMb2FkaW5nLCBpc0F1dGhlbnRpY2F0ZWQgfSA9IHVzZUNvbnZleEF1dGgoKTtcbiAgaWYgKGlzTG9hZGluZyB8fCBpc0F1dGhlbnRpY2F0ZWQpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIGNoaWxkcmVuKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBBdXRoTG9hZGluZyh7IGNoaWxkcmVuIH0pIHtcbiAgY29uc3QgeyBpc0xvYWRpbmcgfSA9IHVzZUNvbnZleEF1dGgoKTtcbiAgaWYgKCFpc0xvYWRpbmcpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICByZXR1cm4gLyogQF9fUFVSRV9fICovIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIGNoaWxkcmVuKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dGhfaGVscGVycy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/auth_helpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/client.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/client.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexProvider: () => (/* binding */ ConvexProvider),\n/* harmony export */   ConvexReactClient: () => (/* binding */ ConvexReactClient),\n/* harmony export */   createMutation: () => (/* binding */ createMutation),\n/* harmony export */   useAction: () => (/* binding */ useAction),\n/* harmony export */   useConvex: () => (/* binding */ useConvex),\n/* harmony export */   useMutation: () => (/* binding */ useMutation),\n/* harmony export */   useQuery: () => (/* binding */ useQuery)\n/* harmony export */ });\n/* harmony import */ var _browser_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../browser/index.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var _use_queries_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./use_queries.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_queries.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _browser_logging_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../browser/logging.js */ \"(ssr)/./node_modules/convex/dist/esm/browser/logging.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\n\n\n\n\n\n\nif (typeof react__WEBPACK_IMPORTED_MODULE_1__ === \"undefined\") {\n  throw new Error(\"Required dependency 'react' not found\");\n}\nif (typeof react_dom__WEBPACK_IMPORTED_MODULE_3__ === \"undefined\") {\n  throw new Error(\"Required dependency 'react-dom' not found\");\n}\nfunction createMutation(mutationReference, client, update) {\n  function mutation(args) {\n    assertNotAccidentalArgument(args);\n    return client.mutation(mutationReference, args, {\n      optimisticUpdate: update\n    });\n  }\n  mutation.withOptimisticUpdate = function withOptimisticUpdate(optimisticUpdate) {\n    if (update !== void 0) {\n      throw new Error(\n        `Already specified optimistic update for mutation ${(0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(\n          mutationReference\n        )}`\n      );\n    }\n    return createMutation(mutationReference, client, optimisticUpdate);\n  };\n  return mutation;\n}\nfunction createAction(actionReference, client) {\n  return function(args) {\n    return client.action(actionReference, args);\n  };\n}\nclass ConvexReactClient {\n  /**\n   * @param address - The url of your Convex deployment, often provided\n   * by an environment variable. E.g. `https://small-mouse-123.convex.cloud`.\n   * @param options - See {@link ConvexReactClientOptions} for a full description.\n   */\n  constructor(address, options) {\n    __publicField(this, \"address\");\n    __publicField(this, \"cachedSync\");\n    __publicField(this, \"listeners\");\n    __publicField(this, \"options\");\n    __publicField(this, \"closed\", false);\n    __publicField(this, \"_logger\");\n    __publicField(this, \"adminAuth\");\n    __publicField(this, \"fakeUserIdentity\");\n    if (address === void 0) {\n      throw new Error(\n        \"No address provided to ConvexReactClient.\\nIf trying to deploy to production, make sure to follow all the instructions found at https://docs.convex.dev/production/hosting/\\nIf running locally, make sure to run `convex dev` and ensure the .env.local file is populated.\"\n      );\n    }\n    if (typeof address !== \"string\") {\n      throw new Error(\n        `ConvexReactClient requires a URL like 'https://happy-otter-123.convex.cloud', received something of type ${typeof address} instead.`\n      );\n    }\n    if (!address.includes(\"://\")) {\n      throw new Error(\"Provided address was not an absolute URL.\");\n    }\n    this.address = address;\n    this.listeners = /* @__PURE__ */ new Map();\n    this._logger = options?.logger ?? (0,_browser_logging_js__WEBPACK_IMPORTED_MODULE_7__.instantiateDefaultLogger)({ verbose: options?.verbose ?? false });\n    this.options = { ...options, logger: this._logger };\n  }\n  /**\n   * Lazily instantiate the `BaseConvexClient` so we don't create the WebSocket\n   * when server-side rendering.\n   *\n   * @internal\n   */\n  get sync() {\n    if (this.closed) {\n      throw new Error(\"ConvexReactClient has already been closed.\");\n    }\n    if (this.cachedSync) {\n      return this.cachedSync;\n    }\n    this.cachedSync = new _browser_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseConvexClient(\n      this.address,\n      (updatedQueries) => this.transition(updatedQueries),\n      this.options\n    );\n    if (this.adminAuth) {\n      this.cachedSync.setAdminAuth(this.adminAuth, this.fakeUserIdentity);\n    }\n    return this.cachedSync;\n  }\n  /**\n   * Set the authentication token to be used for subsequent queries and mutations.\n   * `fetchToken` will be called automatically again if a token expires.\n   * `fetchToken` should return `null` if the token cannot be retrieved, for example\n   * when the user's rights were permanently revoked.\n   * @param fetchToken - an async function returning the JWT-encoded OpenID Connect Identity Token\n   * @param onChange - a callback that will be called when the authentication status changes\n   */\n  setAuth(fetchToken, onChange) {\n    if (typeof fetchToken === \"string\") {\n      throw new Error(\n        \"Passing a string to ConvexReactClient.setAuth is no longer supported, please upgrade to passing in an async function to handle reauthentication.\"\n      );\n    }\n    this.sync.setAuth(\n      fetchToken,\n      onChange ?? (() => {\n      })\n    );\n  }\n  /**\n   * Clear the current authentication token if set.\n   */\n  clearAuth() {\n    this.sync.clearAuth();\n  }\n  /**\n   * @internal\n   */\n  setAdminAuth(token, identity) {\n    this.adminAuth = token;\n    this.fakeUserIdentity = identity;\n    if (this.closed) {\n      throw new Error(\"ConvexReactClient has already been closed.\");\n    }\n    if (this.cachedSync) {\n      this.sync.setAdminAuth(token, identity);\n    }\n  }\n  /**\n   * Construct a new {@link Watch} on a Convex query function.\n   *\n   * **Most application code should not call this method directly. Instead use\n   * the {@link useQuery} hook.**\n   *\n   * @param query - A {@link server.FunctionReference} for the public query to run.\n   * @param args - An arguments object for the query. If this is omitted,\n   * the arguments will be `{}`.\n   * @param options - A {@link WatchQueryOptions} options object for this query.\n   *\n   * @returns The {@link Watch} object.\n   */\n  watchQuery(query, ...argsAndOptions) {\n    const [args, options] = argsAndOptions;\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(query);\n    return {\n      onUpdate: (callback) => {\n        const { queryToken, unsubscribe } = this.sync.subscribe(\n          name,\n          args,\n          options\n        );\n        const currentListeners = this.listeners.get(queryToken);\n        if (currentListeners !== void 0) {\n          currentListeners.add(callback);\n        } else {\n          this.listeners.set(queryToken, /* @__PURE__ */ new Set([callback]));\n        }\n        return () => {\n          if (this.closed) {\n            return;\n          }\n          const currentListeners2 = this.listeners.get(queryToken);\n          currentListeners2.delete(callback);\n          if (currentListeners2.size === 0) {\n            this.listeners.delete(queryToken);\n          }\n          unsubscribe();\n        };\n      },\n      localQueryResult: () => {\n        if (this.cachedSync) {\n          return this.cachedSync.localQueryResult(name, args);\n        }\n        return void 0;\n      },\n      localQueryLogs: () => {\n        if (this.cachedSync) {\n          return this.cachedSync.localQueryLogs(name, args);\n        }\n        return void 0;\n      },\n      journal: () => {\n        if (this.cachedSync) {\n          return this.cachedSync.queryJournal(name, args);\n        }\n        return void 0;\n      }\n    };\n  }\n  /**\n   * Execute a mutation function.\n   *\n   * @param mutation - A {@link server.FunctionReference} for the public mutation\n   * to run.\n   * @param args - An arguments object for the mutation. If this is omitted,\n   * the arguments will be `{}`.\n   * @param options - A {@link MutationOptions} options object for the mutation.\n   * @returns A promise of the mutation's result.\n   */\n  mutation(mutation, ...argsAndOptions) {\n    const [args, options] = argsAndOptions;\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(mutation);\n    return this.sync.mutation(name, args, options);\n  }\n  /**\n   * Execute an action function.\n   *\n   * @param action - A {@link server.FunctionReference} for the public action\n   * to run.\n   * @param args - An arguments object for the action. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the action's result.\n   */\n  action(action, ...args) {\n    const name = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(action);\n    return this.sync.action(name, ...args);\n  }\n  /**\n   * Fetch a query result once.\n   *\n   * **Most application code should subscribe to queries instead, using\n   * the {@link useQuery} hook.**\n   *\n   * @param query - A {@link server.FunctionReference} for the public query\n   * to run.\n   * @param args - An arguments object for the query. If this is omitted,\n   * the arguments will be `{}`.\n   * @returns A promise of the query's result.\n   */\n  query(query, ...args) {\n    const watch = this.watchQuery(query, ...args);\n    const existingResult = watch.localQueryResult();\n    if (existingResult !== void 0) {\n      return Promise.resolve(existingResult);\n    }\n    return new Promise((resolve, reject) => {\n      const unsubscribe = watch.onUpdate(() => {\n        unsubscribe();\n        try {\n          resolve(watch.localQueryResult());\n        } catch (e) {\n          reject(e);\n        }\n      });\n    });\n  }\n  /**\n   * Get the current {@link ConnectionState} between the client and the Convex\n   * backend.\n   *\n   * @returns The {@link ConnectionState} with the Convex backend.\n   */\n  connectionState() {\n    return this.sync.connectionState();\n  }\n  /**\n   * Get the logger for this client.\n   *\n   * @returns The {@link Logger} for this client.\n   */\n  get logger() {\n    return this._logger;\n  }\n  /**\n   * Close any network handles associated with this client and stop all subscriptions.\n   *\n   * Call this method when you're done with a {@link ConvexReactClient} to\n   * dispose of its sockets and resources.\n   *\n   * @returns A `Promise` fulfilled when the connection has been completely closed.\n   */\n  async close() {\n    this.closed = true;\n    this.listeners = /* @__PURE__ */ new Map();\n    if (this.cachedSync) {\n      const sync = this.cachedSync;\n      this.cachedSync = void 0;\n      await sync.close();\n    }\n  }\n  transition(updatedQueries) {\n    react_dom__WEBPACK_IMPORTED_MODULE_3__.unstable_batchedUpdates(() => {\n      for (const queryToken of updatedQueries) {\n        const callbacks = this.listeners.get(queryToken);\n        if (callbacks) {\n          for (const callback of callbacks) {\n            callback();\n          }\n        }\n      }\n    });\n  }\n}\nconst ConvexContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext(\n  void 0\n  // in the future this will be a mocked client for testing\n);\nfunction useConvex() {\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConvexContext);\n}\nconst ConvexProvider = ({ client, children }) => {\n  return react__WEBPACK_IMPORTED_MODULE_1__.createElement(\n    ConvexContext.Provider,\n    { value: client },\n    children\n  );\n};\nfunction useQuery(query, ...args) {\n  const skip = args[0] === \"skip\";\n  const argsObject = args[0] === \"skip\" ? {} : (0,_common_index_js__WEBPACK_IMPORTED_MODULE_5__.parseArgs)(args[0]);\n  const queryReference = typeof query === \"string\" ? (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.makeFunctionReference)(query) : query;\n  const queryName = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(queryReference);\n  const queries = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => skip ? {} : { query: { query: queryReference, args: argsObject } },\n    // Stringify args so args that are semantically the same don't trigger a\n    // rerender. Saves developers from adding `useMemo` on every args usage.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_2__.convexToJson)(argsObject)), queryName, skip]\n  );\n  const results = (0,_use_queries_js__WEBPACK_IMPORTED_MODULE_4__.useQueries)(queries);\n  const result = results[\"query\"];\n  if (result instanceof Error) {\n    throw result;\n  }\n  return result;\n}\nfunction useMutation(mutation) {\n  const mutationReference = typeof mutation === \"string\" ? (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.makeFunctionReference)(mutation) : mutation;\n  const convex = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConvexContext);\n  if (convex === void 0) {\n    throw new Error(\n      \"Could not find Convex client! `useMutation` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app\"\n    );\n  }\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => createMutation(mutationReference, convex),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [convex, (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(mutationReference)]\n  );\n}\nfunction useAction(action) {\n  const convex = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConvexContext);\n  const actionReference = typeof action === \"string\" ? (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.makeFunctionReference)(action) : action;\n  if (convex === void 0) {\n    throw new Error(\n      \"Could not find Convex client! `useAction` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app\"\n    );\n  }\n  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => createAction(actionReference, convex),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [convex, (0,_server_api_js__WEBPACK_IMPORTED_MODULE_6__.getFunctionName)(actionReference)]\n  );\n}\nfunction assertNotAccidentalArgument(value) {\n  if (typeof value === \"object\" && value !== null && \"bubbles\" in value && \"persist\" in value && \"isDefaultPrevented\" in value) {\n    throw new Error(\n      `Convex function called with SyntheticEvent object. Did you use a Convex function as an event handler directly? Event handlers like onClick receive an event object as their first argument. These SyntheticEvent objects are not valid Convex values. Try wrapping the function like \\`const handler = () => myMutation();\\` and using \\`handler\\` in the event handler.`\n    );\n  }\n}\n//# sourceMappingURL=client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/hydration.js":
/*!*********************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/hydration.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   usePreloadedQuery: () => (/* binding */ usePreloadedQuery)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _react_client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../react/client.js */ \"(ssr)/./node_modules/convex/dist/esm/react/client.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n\n\n\n\n\nfunction usePreloadedQuery(preloadedQuery) {\n  const args = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(preloadedQuery._argsJSON),\n    [preloadedQuery._argsJSON]\n  );\n  const preloadedResult = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => (0,_values_index_js__WEBPACK_IMPORTED_MODULE_3__.jsonToConvex)(preloadedQuery._valueJSON),\n    [preloadedQuery._valueJSON]\n  );\n  const result = (0,_react_client_js__WEBPACK_IMPORTED_MODULE_1__.useQuery)(\n    (0,_server_api_js__WEBPACK_IMPORTED_MODULE_2__.makeFunctionReference)(preloadedQuery._name),\n    args\n  );\n  return result === void 0 ? preloadedResult : result;\n}\n//# sourceMappingURL=hydration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L2h5ZHJhdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFhO0FBQ21CO0FBQ2M7QUFDVztBQUNQO0FBQzNDO0FBQ1AsZUFBZSw4Q0FBTztBQUN0QixVQUFVLDhEQUFZO0FBQ3RCO0FBQ0E7QUFDQSwwQkFBMEIsOENBQU87QUFDakMsVUFBVSw4REFBWTtBQUN0QjtBQUNBO0FBQ0EsaUJBQWlCLDBEQUFRO0FBQ3pCLElBQUkscUVBQXFCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qaWFkaWxpL0Rlc2t0b3Avd2VBcmVGZWtlbkNva2VkL1dlQXJlRmVrZW5Db29rZWQtSGFja2F0aG9uLS9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L2h5ZHJhdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCB7IHVzZU1lbW8gfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZVF1ZXJ5IH0gZnJvbSBcIi4uL3JlYWN0L2NsaWVudC5qc1wiO1xuaW1wb3J0IHsgbWFrZUZ1bmN0aW9uUmVmZXJlbmNlIH0gZnJvbSBcIi4uL3NlcnZlci9hcGkuanNcIjtcbmltcG9ydCB7IGpzb25Ub0NvbnZleCB9IGZyb20gXCIuLi92YWx1ZXMvaW5kZXguanNcIjtcbmV4cG9ydCBmdW5jdGlvbiB1c2VQcmVsb2FkZWRRdWVyeShwcmVsb2FkZWRRdWVyeSkge1xuICBjb25zdCBhcmdzID0gdXNlTWVtbyhcbiAgICAoKSA9PiBqc29uVG9Db252ZXgocHJlbG9hZGVkUXVlcnkuX2FyZ3NKU09OKSxcbiAgICBbcHJlbG9hZGVkUXVlcnkuX2FyZ3NKU09OXVxuICApO1xuICBjb25zdCBwcmVsb2FkZWRSZXN1bHQgPSB1c2VNZW1vKFxuICAgICgpID0+IGpzb25Ub0NvbnZleChwcmVsb2FkZWRRdWVyeS5fdmFsdWVKU09OKSxcbiAgICBbcHJlbG9hZGVkUXVlcnkuX3ZhbHVlSlNPTl1cbiAgKTtcbiAgY29uc3QgcmVzdWx0ID0gdXNlUXVlcnkoXG4gICAgbWFrZUZ1bmN0aW9uUmVmZXJlbmNlKHByZWxvYWRlZFF1ZXJ5Ll9uYW1lKSxcbiAgICBhcmdzXG4gICk7XG4gIHJldHVybiByZXN1bHQgPT09IHZvaWQgMCA/IHByZWxvYWRlZFJlc3VsdCA6IHJlc3VsdDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWh5ZHJhdGlvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/hydration.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthLoading: () => (/* reexport safe */ _auth_helpers_js__WEBPACK_IMPORTED_MODULE_2__.AuthLoading),\n/* harmony export */   Authenticated: () => (/* reexport safe */ _auth_helpers_js__WEBPACK_IMPORTED_MODULE_2__.Authenticated),\n/* harmony export */   ConvexProvider: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.ConvexProvider),\n/* harmony export */   ConvexProviderWithAuth: () => (/* reexport safe */ _ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_3__.ConvexProviderWithAuth),\n/* harmony export */   ConvexReactClient: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.ConvexReactClient),\n/* harmony export */   Unauthenticated: () => (/* reexport safe */ _auth_helpers_js__WEBPACK_IMPORTED_MODULE_2__.Unauthenticated),\n/* harmony export */   optimisticallyUpdateValueInPaginatedQuery: () => (/* reexport safe */ _use_paginated_query_js__WEBPACK_IMPORTED_MODULE_0__.optimisticallyUpdateValueInPaginatedQuery),\n/* harmony export */   resetPaginationId: () => (/* reexport safe */ _use_paginated_query_js__WEBPACK_IMPORTED_MODULE_0__.resetPaginationId),\n/* harmony export */   useAction: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.useAction),\n/* harmony export */   useConvex: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.useConvex),\n/* harmony export */   useConvexAuth: () => (/* reexport safe */ _ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_3__.useConvexAuth),\n/* harmony export */   useMutation: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.useMutation),\n/* harmony export */   usePaginatedQuery: () => (/* reexport safe */ _use_paginated_query_js__WEBPACK_IMPORTED_MODULE_0__.usePaginatedQuery),\n/* harmony export */   usePreloadedQuery: () => (/* reexport safe */ _hydration_js__WEBPACK_IMPORTED_MODULE_4__.usePreloadedQuery),\n/* harmony export */   useQueries: () => (/* reexport safe */ _use_queries_js__WEBPACK_IMPORTED_MODULE_1__.useQueries),\n/* harmony export */   useQuery: () => (/* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_6__.useQuery),\n/* harmony export */   useSubscription: () => (/* reexport safe */ _use_subscription_js__WEBPACK_IMPORTED_MODULE_5__.useSubscription)\n/* harmony export */ });\n/* harmony import */ var _use_paginated_query_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./use_paginated_query.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_paginated_query.js\");\n/* harmony import */ var _use_queries_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./use_queries.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_queries.js\");\n/* harmony import */ var _auth_helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth_helpers.js */ \"(ssr)/./node_modules/convex/dist/esm/react/auth_helpers.js\");\n/* harmony import */ var _ConvexAuthState_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ConvexAuthState.js */ \"(ssr)/./node_modules/convex/dist/esm/react/ConvexAuthState.js\");\n/* harmony import */ var _hydration_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hydration.js */ \"(ssr)/./node_modules/convex/dist/esm/react/hydration.js\");\n/* harmony import */ var _use_subscription_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./use_subscription.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_subscription.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/convex/dist/esm/react/client.js\");\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFhO0FBQzRCO0FBQ0s7QUFDWjtBQUNHO0FBQ047QUFDeUI7QUFRbkM7QUFDckIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qaWFkaWxpL0Rlc2t0b3Avd2VBcmVGZWtlbkNva2VkL1dlQXJlRmVrZW5Db29rZWQtSGFja2F0aG9uLS9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXNlX3BhZ2luYXRlZF9xdWVyeS5qc1wiO1xuZXhwb3J0IHsgdXNlUXVlcmllcyB9IGZyb20gXCIuL3VzZV9xdWVyaWVzLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9hdXRoX2hlbHBlcnMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL0NvbnZleEF1dGhTdGF0ZS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vaHlkcmF0aW9uLmpzXCI7XG5leHBvcnQgeyB1c2VTdWJzY3JpcHRpb24gfSBmcm9tIFwiLi91c2Vfc3Vic2NyaXB0aW9uLmpzXCI7XG5leHBvcnQge1xuICBDb252ZXhSZWFjdENsaWVudCxcbiAgdXNlQ29udmV4LFxuICBDb252ZXhQcm92aWRlcixcbiAgdXNlUXVlcnksXG4gIHVzZU11dGF0aW9uLFxuICB1c2VBY3Rpb25cbn0gZnJvbSBcIi4vY2xpZW50LmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/queries_observer.js":
/*!****************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/queries_observer.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueriesObserver: () => (/* binding */ QueriesObserver)\n/* harmony export */ });\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n\nclass QueriesObserver {\n  constructor(createWatch) {\n    __publicField(this, \"createWatch\");\n    __publicField(this, \"queries\");\n    __publicField(this, \"listeners\");\n    this.createWatch = createWatch;\n    this.queries = {};\n    this.listeners = /* @__PURE__ */ new Set();\n  }\n  setQueries(newQueries) {\n    for (const identifier of Object.keys(newQueries)) {\n      const { query, args } = newQueries[identifier];\n      (0,_server_api_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionName)(query);\n      if (this.queries[identifier] === void 0) {\n        this.addQuery(identifier, query, args);\n      } else {\n        const existingInfo = this.queries[identifier];\n        if ((0,_server_api_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionName)(query) !== (0,_server_api_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionName)(existingInfo.query) || JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(args)) !== JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(existingInfo.args))) {\n          this.removeQuery(identifier);\n          this.addQuery(identifier, query, args);\n        }\n      }\n    }\n    for (const identifier of Object.keys(this.queries)) {\n      if (newQueries[identifier] === void 0) {\n        this.removeQuery(identifier);\n      }\n    }\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    return () => {\n      this.listeners.delete(listener);\n    };\n  }\n  getLocalResults(queries) {\n    const result = {};\n    for (const identifier of Object.keys(queries)) {\n      const { query, args } = queries[identifier];\n      (0,_server_api_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionName)(query);\n      const watch = this.createWatch(query, args);\n      let value;\n      try {\n        value = watch.localQueryResult();\n      } catch (e) {\n        if (e instanceof Error) {\n          value = e;\n        } else {\n          throw e;\n        }\n      }\n      result[identifier] = value;\n    }\n    return result;\n  }\n  setCreateWatch(createWatch) {\n    this.createWatch = createWatch;\n    for (const identifier of Object.keys(this.queries)) {\n      const { query, args, watch } = this.queries[identifier];\n      const journal = watch.journal();\n      this.removeQuery(identifier);\n      this.addQuery(identifier, query, args, journal);\n    }\n  }\n  destroy() {\n    for (const identifier of Object.keys(this.queries)) {\n      this.removeQuery(identifier);\n    }\n    this.listeners = /* @__PURE__ */ new Set();\n  }\n  addQuery(identifier, query, args, journal) {\n    if (this.queries[identifier] !== void 0) {\n      throw new Error(\n        `Tried to add a new query with identifier ${identifier} when it already exists.`\n      );\n    }\n    const watch = this.createWatch(query, args, journal);\n    const unsubscribe = watch.onUpdate(() => this.notifyListeners());\n    this.queries[identifier] = {\n      query,\n      args,\n      watch,\n      unsubscribe\n    };\n  }\n  removeQuery(identifier) {\n    const info = this.queries[identifier];\n    if (info === void 0) {\n      throw new Error(`No query found with identifier ${identifier}.`);\n    }\n    info.unsubscribe();\n    delete this.queries[identifier];\n  }\n  notifyListeners() {\n    for (const listener of this.listeners) {\n      listener();\n    }\n  }\n}\n//# sourceMappingURL=queries_observer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L3F1ZXJpZXNfb2JzZXJ2ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWE7QUFDYjtBQUNBLDhFQUE4RSw2REFBNkQ7QUFDM0k7QUFDa0Q7QUFDQztBQUM1QztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxjQUFjO0FBQzVCLE1BQU0sK0RBQWU7QUFDckI7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLFlBQVksK0RBQWUsWUFBWSwrREFBZSx1Q0FBdUMsOERBQVksMkJBQTJCLDhEQUFZO0FBQ2hKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGNBQWM7QUFDNUIsTUFBTSwrREFBZTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxxQkFBcUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxZQUFZO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsV0FBVztBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvamlhZGlsaS9EZXNrdG9wL3dlQXJlRmVrZW5Db2tlZC9XZUFyZUZla2VuQ29va2VkLUhhY2thdGhvbi0vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9yZWFjdC9xdWVyaWVzX29ic2VydmVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2RlZk5vcm1hbFByb3AgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBrZXkgaW4gb2JqID8gX19kZWZQcm9wKG9iaiwga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUsIHZhbHVlIH0pIDogb2JqW2tleV0gPSB2YWx1ZTtcbnZhciBfX3B1YmxpY0ZpZWxkID0gKG9iaiwga2V5LCB2YWx1ZSkgPT4gX19kZWZOb3JtYWxQcm9wKG9iaiwgdHlwZW9mIGtleSAhPT0gXCJzeW1ib2xcIiA/IGtleSArIFwiXCIgOiBrZXksIHZhbHVlKTtcbmltcG9ydCB7IGNvbnZleFRvSnNvbiB9IGZyb20gXCIuLi92YWx1ZXMvaW5kZXguanNcIjtcbmltcG9ydCB7IGdldEZ1bmN0aW9uTmFtZSB9IGZyb20gXCIuLi9zZXJ2ZXIvYXBpLmpzXCI7XG5leHBvcnQgY2xhc3MgUXVlcmllc09ic2VydmVyIHtcbiAgY29uc3RydWN0b3IoY3JlYXRlV2F0Y2gpIHtcbiAgICBfX3B1YmxpY0ZpZWxkKHRoaXMsIFwiY3JlYXRlV2F0Y2hcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcInF1ZXJpZXNcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImxpc3RlbmVyc1wiKTtcbiAgICB0aGlzLmNyZWF0ZVdhdGNoID0gY3JlYXRlV2F0Y2g7XG4gICAgdGhpcy5xdWVyaWVzID0ge307XG4gICAgdGhpcy5saXN0ZW5lcnMgPSAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpO1xuICB9XG4gIHNldFF1ZXJpZXMobmV3UXVlcmllcykge1xuICAgIGZvciAoY29uc3QgaWRlbnRpZmllciBvZiBPYmplY3Qua2V5cyhuZXdRdWVyaWVzKSkge1xuICAgICAgY29uc3QgeyBxdWVyeSwgYXJncyB9ID0gbmV3UXVlcmllc1tpZGVudGlmaWVyXTtcbiAgICAgIGdldEZ1bmN0aW9uTmFtZShxdWVyeSk7XG4gICAgICBpZiAodGhpcy5xdWVyaWVzW2lkZW50aWZpZXJdID09PSB2b2lkIDApIHtcbiAgICAgICAgdGhpcy5hZGRRdWVyeShpZGVudGlmaWVyLCBxdWVyeSwgYXJncyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCBleGlzdGluZ0luZm8gPSB0aGlzLnF1ZXJpZXNbaWRlbnRpZmllcl07XG4gICAgICAgIGlmIChnZXRGdW5jdGlvbk5hbWUocXVlcnkpICE9PSBnZXRGdW5jdGlvbk5hbWUoZXhpc3RpbmdJbmZvLnF1ZXJ5KSB8fCBKU09OLnN0cmluZ2lmeShjb252ZXhUb0pzb24oYXJncykpICE9PSBKU09OLnN0cmluZ2lmeShjb252ZXhUb0pzb24oZXhpc3RpbmdJbmZvLmFyZ3MpKSkge1xuICAgICAgICAgIHRoaXMucmVtb3ZlUXVlcnkoaWRlbnRpZmllcik7XG4gICAgICAgICAgdGhpcy5hZGRRdWVyeShpZGVudGlmaWVyLCBxdWVyeSwgYXJncyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yIChjb25zdCBpZGVudGlmaWVyIG9mIE9iamVjdC5rZXlzKHRoaXMucXVlcmllcykpIHtcbiAgICAgIGlmIChuZXdRdWVyaWVzW2lkZW50aWZpZXJdID09PSB2b2lkIDApIHtcbiAgICAgICAgdGhpcy5yZW1vdmVRdWVyeShpZGVudGlmaWVyKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgc3Vic2NyaWJlKGxpc3RlbmVyKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMuYWRkKGxpc3RlbmVyKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgdGhpcy5saXN0ZW5lcnMuZGVsZXRlKGxpc3RlbmVyKTtcbiAgICB9O1xuICB9XG4gIGdldExvY2FsUmVzdWx0cyhxdWVyaWVzKSB7XG4gICAgY29uc3QgcmVzdWx0ID0ge307XG4gICAgZm9yIChjb25zdCBpZGVudGlmaWVyIG9mIE9iamVjdC5rZXlzKHF1ZXJpZXMpKSB7XG4gICAgICBjb25zdCB7IHF1ZXJ5LCBhcmdzIH0gPSBxdWVyaWVzW2lkZW50aWZpZXJdO1xuICAgICAgZ2V0RnVuY3Rpb25OYW1lKHF1ZXJ5KTtcbiAgICAgIGNvbnN0IHdhdGNoID0gdGhpcy5jcmVhdGVXYXRjaChxdWVyeSwgYXJncyk7XG4gICAgICBsZXQgdmFsdWU7XG4gICAgICB0cnkge1xuICAgICAgICB2YWx1ZSA9IHdhdGNoLmxvY2FsUXVlcnlSZXN1bHQoKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKGUgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICAgIHZhbHVlID0gZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXN1bHRbaWRlbnRpZmllcl0gPSB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuICBzZXRDcmVhdGVXYXRjaChjcmVhdGVXYXRjaCkge1xuICAgIHRoaXMuY3JlYXRlV2F0Y2ggPSBjcmVhdGVXYXRjaDtcbiAgICBmb3IgKGNvbnN0IGlkZW50aWZpZXIgb2YgT2JqZWN0LmtleXModGhpcy5xdWVyaWVzKSkge1xuICAgICAgY29uc3QgeyBxdWVyeSwgYXJncywgd2F0Y2ggfSA9IHRoaXMucXVlcmllc1tpZGVudGlmaWVyXTtcbiAgICAgIGNvbnN0IGpvdXJuYWwgPSB3YXRjaC5qb3VybmFsKCk7XG4gICAgICB0aGlzLnJlbW92ZVF1ZXJ5KGlkZW50aWZpZXIpO1xuICAgICAgdGhpcy5hZGRRdWVyeShpZGVudGlmaWVyLCBxdWVyeSwgYXJncywgam91cm5hbCk7XG4gICAgfVxuICB9XG4gIGRlc3Ryb3koKSB7XG4gICAgZm9yIChjb25zdCBpZGVudGlmaWVyIG9mIE9iamVjdC5rZXlzKHRoaXMucXVlcmllcykpIHtcbiAgICAgIHRoaXMucmVtb3ZlUXVlcnkoaWRlbnRpZmllcik7XG4gICAgfVxuICAgIHRoaXMubGlzdGVuZXJzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcbiAgfVxuICBhZGRRdWVyeShpZGVudGlmaWVyLCBxdWVyeSwgYXJncywgam91cm5hbCkge1xuICAgIGlmICh0aGlzLnF1ZXJpZXNbaWRlbnRpZmllcl0gIT09IHZvaWQgMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgVHJpZWQgdG8gYWRkIGEgbmV3IHF1ZXJ5IHdpdGggaWRlbnRpZmllciAke2lkZW50aWZpZXJ9IHdoZW4gaXQgYWxyZWFkeSBleGlzdHMuYFxuICAgICAgKTtcbiAgICB9XG4gICAgY29uc3Qgd2F0Y2ggPSB0aGlzLmNyZWF0ZVdhdGNoKHF1ZXJ5LCBhcmdzLCBqb3VybmFsKTtcbiAgICBjb25zdCB1bnN1YnNjcmliZSA9IHdhdGNoLm9uVXBkYXRlKCgpID0+IHRoaXMubm90aWZ5TGlzdGVuZXJzKCkpO1xuICAgIHRoaXMucXVlcmllc1tpZGVudGlmaWVyXSA9IHtcbiAgICAgIHF1ZXJ5LFxuICAgICAgYXJncyxcbiAgICAgIHdhdGNoLFxuICAgICAgdW5zdWJzY3JpYmVcbiAgICB9O1xuICB9XG4gIHJlbW92ZVF1ZXJ5KGlkZW50aWZpZXIpIHtcbiAgICBjb25zdCBpbmZvID0gdGhpcy5xdWVyaWVzW2lkZW50aWZpZXJdO1xuICAgIGlmIChpbmZvID09PSB2b2lkIDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgTm8gcXVlcnkgZm91bmQgd2l0aCBpZGVudGlmaWVyICR7aWRlbnRpZmllcn0uYCk7XG4gICAgfVxuICAgIGluZm8udW5zdWJzY3JpYmUoKTtcbiAgICBkZWxldGUgdGhpcy5xdWVyaWVzW2lkZW50aWZpZXJdO1xuICB9XG4gIG5vdGlmeUxpc3RlbmVycygpIHtcbiAgICBmb3IgKGNvbnN0IGxpc3RlbmVyIG9mIHRoaXMubGlzdGVuZXJzKSB7XG4gICAgICBsaXN0ZW5lcigpO1xuICAgIH1cbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVlcmllc19vYnNlcnZlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/queries_observer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/use_paginated_query.js":
/*!*******************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/use_paginated_query.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   optimisticallyUpdateValueInPaginatedQuery: () => (/* binding */ optimisticallyUpdateValueInPaginatedQuery),\n/* harmony export */   resetPaginationId: () => (/* binding */ resetPaginationId),\n/* harmony export */   usePaginatedQuery: () => (/* binding */ usePaginatedQuery)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _values_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../values/index.js */ \"(ssr)/./node_modules/convex/dist/esm/values/index.js\");\n/* harmony import */ var _use_queries_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./use_queries.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_queries.js\");\n/* harmony import */ var _server_api_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../server/api.js */ \"(ssr)/./node_modules/convex/dist/esm/server/api.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/convex/dist/esm/react/client.js\");\n\n\n\n\n\n\nconst splitQuery = (key, splitCursor, continueCursor) => (prevState) => {\n  const queries = { ...prevState.queries };\n  const splitKey1 = prevState.nextPageKey;\n  const splitKey2 = prevState.nextPageKey + 1;\n  const nextPageKey = prevState.nextPageKey + 2;\n  queries[splitKey1] = {\n    query: prevState.query,\n    args: {\n      ...prevState.args,\n      paginationOpts: {\n        ...prevState.queries[key].args.paginationOpts,\n        endCursor: splitCursor\n      }\n    }\n  };\n  queries[splitKey2] = {\n    query: prevState.query,\n    args: {\n      ...prevState.args,\n      paginationOpts: {\n        ...prevState.queries[key].args.paginationOpts,\n        cursor: splitCursor,\n        endCursor: continueCursor\n      }\n    }\n  };\n  const ongoingSplits = { ...prevState.ongoingSplits };\n  ongoingSplits[key] = [splitKey1, splitKey2];\n  return {\n    ...prevState,\n    nextPageKey,\n    queries,\n    ongoingSplits\n  };\n};\nconst completeSplitQuery = (key) => (prevState) => {\n  const completedSplit = prevState.ongoingSplits[key];\n  if (completedSplit === void 0) {\n    return prevState;\n  }\n  const queries = { ...prevState.queries };\n  delete queries[key];\n  const ongoingSplits = { ...prevState.ongoingSplits };\n  delete ongoingSplits[key];\n  let pageKeys = prevState.pageKeys.slice();\n  const pageIndex = prevState.pageKeys.findIndex((v) => v === key);\n  if (pageIndex >= 0) {\n    pageKeys = [\n      ...prevState.pageKeys.slice(0, pageIndex),\n      ...completedSplit,\n      ...prevState.pageKeys.slice(pageIndex + 1)\n    ];\n  }\n  return {\n    ...prevState,\n    queries,\n    pageKeys,\n    ongoingSplits\n  };\n};\nfunction usePaginatedQuery(query, args, options) {\n  if (typeof options?.initialNumItems !== \"number\" || options.initialNumItems < 0) {\n    throw new Error(\n      `\\`options.initialNumItems\\` must be a positive number. Received \\`${options?.initialNumItems}\\`.`\n    );\n  }\n  const skip = args === \"skip\";\n  const argsObject = skip ? {} : args;\n  const queryName = (0,_server_api_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(query);\n  const createInitialState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    return () => {\n      const id = nextPaginationId();\n      return {\n        query,\n        args: argsObject,\n        id,\n        nextPageKey: 1,\n        pageKeys: skip ? [] : [0],\n        queries: skip ? {} : {\n          0: {\n            query,\n            args: {\n              ...argsObject,\n              paginationOpts: {\n                numItems: options.initialNumItems,\n                cursor: null,\n                id\n              }\n            }\n          }\n        },\n        ongoingSplits: {},\n        skip\n      };\n    };\n  }, [\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(argsObject)),\n    queryName,\n    options.initialNumItems,\n    skip\n  ]);\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(createInitialState);\n  let currState = state;\n  if ((0,_server_api_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(query) !== (0,_server_api_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(state.query) || JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(argsObject)) !== JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(state.args)) || skip !== state.skip) {\n    currState = createInitialState();\n    setState(currState);\n  }\n  const convexClient = (0,_client_js__WEBPACK_IMPORTED_MODULE_4__.useConvex)();\n  const logger = convexClient.logger;\n  const resultsObject = (0,_use_queries_js__WEBPACK_IMPORTED_MODULE_2__.useQueries)(currState.queries);\n  const [results, maybeLastResult] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    let currResult = void 0;\n    const allItems = [];\n    for (const pageKey of currState.pageKeys) {\n      currResult = resultsObject[pageKey];\n      if (currResult === void 0) {\n        break;\n      }\n      if (currResult instanceof Error) {\n        if (currResult.message.includes(\"InvalidCursor\")) {\n          logger.warn(\n            \"usePaginatedQuery hit error, resetting pagination state: \" + currResult.message\n          );\n          setState(createInitialState);\n          return [[], void 0];\n        } else {\n          throw currResult;\n        }\n      }\n      const ongoingSplit = currState.ongoingSplits[pageKey];\n      if (ongoingSplit !== void 0) {\n        if (resultsObject[ongoingSplit[0]] !== void 0 && resultsObject[ongoingSplit[1]] !== void 0) {\n          setState(completeSplitQuery(pageKey));\n        }\n      } else if (currResult.splitCursor && (currResult.pageStatus === \"SplitRecommended\" || currResult.pageStatus === \"SplitRequired\" || currResult.page.length > options.initialNumItems * 2)) {\n        setState(\n          splitQuery(\n            pageKey,\n            currResult.splitCursor,\n            currResult.continueCursor\n          )\n        );\n      }\n      if (currResult.pageStatus === \"SplitRequired\") {\n        return [allItems, void 0];\n      }\n      allItems.push(...currResult.page);\n    }\n    return [allItems, currResult];\n  }, [\n    resultsObject,\n    currState.pageKeys,\n    currState.ongoingSplits,\n    options.initialNumItems,\n    createInitialState,\n    logger\n  ]);\n  const statusObject = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    if (maybeLastResult === void 0) {\n      if (currState.nextPageKey === 1) {\n        return {\n          status: \"LoadingFirstPage\",\n          isLoading: true,\n          loadMore: (_numItems) => {\n          }\n        };\n      } else {\n        return {\n          status: \"LoadingMore\",\n          isLoading: true,\n          loadMore: (_numItems) => {\n          }\n        };\n      }\n    }\n    if (maybeLastResult.isDone) {\n      return {\n        status: \"Exhausted\",\n        isLoading: false,\n        loadMore: (_numItems) => {\n        }\n      };\n    }\n    const continueCursor = maybeLastResult.continueCursor;\n    let alreadyLoadingMore = false;\n    return {\n      status: \"CanLoadMore\",\n      isLoading: false,\n      loadMore: (numItems) => {\n        if (!alreadyLoadingMore) {\n          alreadyLoadingMore = true;\n          setState((prevState) => {\n            const pageKeys = [...prevState.pageKeys, prevState.nextPageKey];\n            const queries = { ...prevState.queries };\n            queries[prevState.nextPageKey] = {\n              query: prevState.query,\n              args: {\n                ...prevState.args,\n                paginationOpts: {\n                  numItems,\n                  cursor: continueCursor,\n                  id: prevState.id\n                }\n              }\n            };\n            return {\n              ...prevState,\n              nextPageKey: prevState.nextPageKey + 1,\n              pageKeys,\n              queries\n            };\n          });\n        }\n      }\n    };\n  }, [maybeLastResult, currState.nextPageKey]);\n  return {\n    results,\n    ...statusObject\n  };\n}\nlet paginationId = 0;\nfunction nextPaginationId() {\n  paginationId++;\n  return paginationId;\n}\nfunction resetPaginationId() {\n  paginationId = 0;\n}\nfunction optimisticallyUpdateValueInPaginatedQuery(localStore, query, args, updateValue) {\n  const expectedArgs = JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(args));\n  for (const queryResult of localStore.getAllQueries(query)) {\n    if (queryResult.value !== void 0) {\n      const { paginationOpts: _, ...innerArgs } = queryResult.args;\n      if (JSON.stringify((0,_values_index_js__WEBPACK_IMPORTED_MODULE_1__.convexToJson)(innerArgs)) === expectedArgs) {\n        const value = queryResult.value;\n        if (typeof value === \"object\" && value !== null && Array.isArray(value.page)) {\n          localStore.setQuery(query, queryResult.args, {\n            ...value,\n            page: value.page.map(updateValue)\n          });\n        }\n      }\n    }\n  }\n}\n//# sourceMappingURL=use_paginated_query.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/use_paginated_query.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/use_queries.js":
/*!***********************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/use_queries.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useQueries: () => (/* binding */ useQueries),\n/* harmony export */   useQueriesHelper: () => (/* binding */ useQueriesHelper)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client.js */ \"(ssr)/./node_modules/convex/dist/esm/react/client.js\");\n/* harmony import */ var _queries_observer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./queries_observer.js */ \"(ssr)/./node_modules/convex/dist/esm/react/queries_observer.js\");\n/* harmony import */ var _use_subscription_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./use_subscription.js */ \"(ssr)/./node_modules/convex/dist/esm/react/use_subscription.js\");\n\n\n\n\n\nfunction useQueries(queries) {\n  const convex = (0,_client_js__WEBPACK_IMPORTED_MODULE_1__.useConvex)();\n  if (convex === void 0) {\n    throw new Error(\n      \"Could not find Convex client! `useQuery` must be used in the React component tree under `ConvexProvider`. Did you forget it? See https://docs.convex.dev/quick-start#set-up-convex-in-your-react-app\"\n    );\n  }\n  const createWatch = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {\n    return (query, args, journal) => {\n      return convex.watchQuery(query, args, { journal });\n    };\n  }, [convex]);\n  return useQueriesHelper(queries, createWatch);\n}\nfunction useQueriesHelper(queries, createWatch) {\n  const [observer] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => new _queries_observer_js__WEBPACK_IMPORTED_MODULE_2__.QueriesObserver(createWatch));\n  if (observer.createWatch !== createWatch) {\n    observer.setCreateWatch(createWatch);\n  }\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => () => observer.destroy(), [observer]);\n  const subscription = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(\n    () => ({\n      getCurrentValue: () => {\n        return observer.getLocalResults(queries);\n      },\n      subscribe: (callback) => {\n        observer.setQueries(queries);\n        return observer.subscribe(callback);\n      }\n    }),\n    [observer, queries]\n  );\n  return (0,_use_subscription_js__WEBPACK_IMPORTED_MODULE_3__.useSubscription)(subscription);\n}\n//# sourceMappingURL=use_queries.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L3VzZV9xdWVyaWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFhO0FBQ3dDO0FBQ2I7QUFDZ0I7QUFDQTtBQUNqRDtBQUNQLGlCQUFpQixxREFBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDhDQUFPO0FBQzdCO0FBQ0EsOENBQThDLFNBQVM7QUFDdkQ7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNPO0FBQ1AscUJBQXFCLCtDQUFRLFdBQVcsaUVBQWU7QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsRUFBRSxnREFBUztBQUNYLHVCQUF1Qiw4Q0FBTztBQUM5QjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFNBQVMscUVBQWU7QUFDeEI7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2ppYWRpbGkvRGVza3RvcC93ZUFyZUZla2VuQ29rZWQvV2VBcmVGZWtlbkNvb2tlZC1IYWNrYXRob24tL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vcmVhY3QvdXNlX3F1ZXJpZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZU1lbW8sIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VDb252ZXggfSBmcm9tIFwiLi9jbGllbnQuanNcIjtcbmltcG9ydCB7IFF1ZXJpZXNPYnNlcnZlciB9IGZyb20gXCIuL3F1ZXJpZXNfb2JzZXJ2ZXIuanNcIjtcbmltcG9ydCB7IHVzZVN1YnNjcmlwdGlvbiB9IGZyb20gXCIuL3VzZV9zdWJzY3JpcHRpb24uanNcIjtcbmV4cG9ydCBmdW5jdGlvbiB1c2VRdWVyaWVzKHF1ZXJpZXMpIHtcbiAgY29uc3QgY29udmV4ID0gdXNlQ29udmV4KCk7XG4gIGlmIChjb252ZXggPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIFwiQ291bGQgbm90IGZpbmQgQ29udmV4IGNsaWVudCEgYHVzZVF1ZXJ5YCBtdXN0IGJlIHVzZWQgaW4gdGhlIFJlYWN0IGNvbXBvbmVudCB0cmVlIHVuZGVyIGBDb252ZXhQcm92aWRlcmAuIERpZCB5b3UgZm9yZ2V0IGl0PyBTZWUgaHR0cHM6Ly9kb2NzLmNvbnZleC5kZXYvcXVpY2stc3RhcnQjc2V0LXVwLWNvbnZleC1pbi15b3VyLXJlYWN0LWFwcFwiXG4gICAgKTtcbiAgfVxuICBjb25zdCBjcmVhdGVXYXRjaCA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiAocXVlcnksIGFyZ3MsIGpvdXJuYWwpID0+IHtcbiAgICAgIHJldHVybiBjb252ZXgud2F0Y2hRdWVyeShxdWVyeSwgYXJncywgeyBqb3VybmFsIH0pO1xuICAgIH07XG4gIH0sIFtjb252ZXhdKTtcbiAgcmV0dXJuIHVzZVF1ZXJpZXNIZWxwZXIocXVlcmllcywgY3JlYXRlV2F0Y2gpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHVzZVF1ZXJpZXNIZWxwZXIocXVlcmllcywgY3JlYXRlV2F0Y2gpIHtcbiAgY29uc3QgW29ic2VydmVyXSA9IHVzZVN0YXRlKCgpID0+IG5ldyBRdWVyaWVzT2JzZXJ2ZXIoY3JlYXRlV2F0Y2gpKTtcbiAgaWYgKG9ic2VydmVyLmNyZWF0ZVdhdGNoICE9PSBjcmVhdGVXYXRjaCkge1xuICAgIG9ic2VydmVyLnNldENyZWF0ZVdhdGNoKGNyZWF0ZVdhdGNoKTtcbiAgfVxuICB1c2VFZmZlY3QoKCkgPT4gKCkgPT4gb2JzZXJ2ZXIuZGVzdHJveSgpLCBbb2JzZXJ2ZXJdKTtcbiAgY29uc3Qgc3Vic2NyaXB0aW9uID0gdXNlTWVtbyhcbiAgICAoKSA9PiAoe1xuICAgICAgZ2V0Q3VycmVudFZhbHVlOiAoKSA9PiB7XG4gICAgICAgIHJldHVybiBvYnNlcnZlci5nZXRMb2NhbFJlc3VsdHMocXVlcmllcyk7XG4gICAgICB9LFxuICAgICAgc3Vic2NyaWJlOiAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgb2JzZXJ2ZXIuc2V0UXVlcmllcyhxdWVyaWVzKTtcbiAgICAgICAgcmV0dXJuIG9ic2VydmVyLnN1YnNjcmliZShjYWxsYmFjayk7XG4gICAgICB9XG4gICAgfSksXG4gICAgW29ic2VydmVyLCBxdWVyaWVzXVxuICApO1xuICByZXR1cm4gdXNlU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbik7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VfcXVlcmllcy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/use_queries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/react/use_subscription.js":
/*!****************************************************************!*\
  !*** ./node_modules/convex/dist/esm/react/use_subscription.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSubscription: () => (/* binding */ useSubscription)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n\n\nfunction useSubscription({\n  // (Synchronously) returns the current value of our subscription.\n  getCurrentValue,\n  // This function is passed an event handler to attach to the subscription.\n  // It should return an unsubscribe function that removes the handler.\n  subscribe\n}) {\n  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => ({\n    getCurrentValue,\n    subscribe,\n    value: getCurrentValue()\n  }));\n  let valueToReturn = state.value;\n  if (state.getCurrentValue !== getCurrentValue || state.subscribe !== subscribe) {\n    valueToReturn = getCurrentValue();\n    setState({\n      getCurrentValue,\n      subscribe,\n      value: valueToReturn\n    });\n  }\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    let didUnsubscribe = false;\n    const checkForUpdates = () => {\n      if (didUnsubscribe) {\n        return;\n      }\n      setState((prevState) => {\n        if (prevState.getCurrentValue !== getCurrentValue || prevState.subscribe !== subscribe) {\n          return prevState;\n        }\n        const value = getCurrentValue();\n        if (prevState.value === value) {\n          return prevState;\n        }\n        return { ...prevState, value };\n      });\n    };\n    const unsubscribe = subscribe(checkForUpdates);\n    checkForUpdates();\n    return () => {\n      didUnsubscribe = true;\n      unsubscribe();\n    };\n  }, [getCurrentValue, subscribe]);\n  return valueToReturn;\n}\n//# sourceMappingURL=use_subscription.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3JlYWN0L3VzZV9zdWJzY3JpcHRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTtBQUMrQjtBQUNyQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsNEJBQTRCLCtDQUFRO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEVBQUUsZ0RBQVM7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvamlhZGlsaS9EZXNrdG9wL3dlQXJlRmVrZW5Db2tlZC9XZUFyZUZla2VuQ29va2VkLUhhY2thdGhvbi0vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9yZWFjdC91c2Vfc3Vic2NyaXB0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZVN1YnNjcmlwdGlvbih7XG4gIC8vIChTeW5jaHJvbm91c2x5KSByZXR1cm5zIHRoZSBjdXJyZW50IHZhbHVlIG9mIG91ciBzdWJzY3JpcHRpb24uXG4gIGdldEN1cnJlbnRWYWx1ZSxcbiAgLy8gVGhpcyBmdW5jdGlvbiBpcyBwYXNzZWQgYW4gZXZlbnQgaGFuZGxlciB0byBhdHRhY2ggdG8gdGhlIHN1YnNjcmlwdGlvbi5cbiAgLy8gSXQgc2hvdWxkIHJldHVybiBhbiB1bnN1YnNjcmliZSBmdW5jdGlvbiB0aGF0IHJlbW92ZXMgdGhlIGhhbmRsZXIuXG4gIHN1YnNjcmliZVxufSkge1xuICBjb25zdCBbc3RhdGUsIHNldFN0YXRlXSA9IHVzZVN0YXRlKCgpID0+ICh7XG4gICAgZ2V0Q3VycmVudFZhbHVlLFxuICAgIHN1YnNjcmliZSxcbiAgICB2YWx1ZTogZ2V0Q3VycmVudFZhbHVlKClcbiAgfSkpO1xuICBsZXQgdmFsdWVUb1JldHVybiA9IHN0YXRlLnZhbHVlO1xuICBpZiAoc3RhdGUuZ2V0Q3VycmVudFZhbHVlICE9PSBnZXRDdXJyZW50VmFsdWUgfHwgc3RhdGUuc3Vic2NyaWJlICE9PSBzdWJzY3JpYmUpIHtcbiAgICB2YWx1ZVRvUmV0dXJuID0gZ2V0Q3VycmVudFZhbHVlKCk7XG4gICAgc2V0U3RhdGUoe1xuICAgICAgZ2V0Q3VycmVudFZhbHVlLFxuICAgICAgc3Vic2NyaWJlLFxuICAgICAgdmFsdWU6IHZhbHVlVG9SZXR1cm5cbiAgICB9KTtcbiAgfVxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGxldCBkaWRVbnN1YnNjcmliZSA9IGZhbHNlO1xuICAgIGNvbnN0IGNoZWNrRm9yVXBkYXRlcyA9ICgpID0+IHtcbiAgICAgIGlmIChkaWRVbnN1YnNjcmliZSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBzZXRTdGF0ZSgocHJldlN0YXRlKSA9PiB7XG4gICAgICAgIGlmIChwcmV2U3RhdGUuZ2V0Q3VycmVudFZhbHVlICE9PSBnZXRDdXJyZW50VmFsdWUgfHwgcHJldlN0YXRlLnN1YnNjcmliZSAhPT0gc3Vic2NyaWJlKSB7XG4gICAgICAgICAgcmV0dXJuIHByZXZTdGF0ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB2YWx1ZSA9IGdldEN1cnJlbnRWYWx1ZSgpO1xuICAgICAgICBpZiAocHJldlN0YXRlLnZhbHVlID09PSB2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiBwcmV2U3RhdGU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsgLi4ucHJldlN0YXRlLCB2YWx1ZSB9O1xuICAgICAgfSk7XG4gICAgfTtcbiAgICBjb25zdCB1bnN1YnNjcmliZSA9IHN1YnNjcmliZShjaGVja0ZvclVwZGF0ZXMpO1xuICAgIGNoZWNrRm9yVXBkYXRlcygpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBkaWRVbnN1YnNjcmliZSA9IHRydWU7XG4gICAgICB1bnN1YnNjcmliZSgpO1xuICAgIH07XG4gIH0sIFtnZXRDdXJyZW50VmFsdWUsIHN1YnNjcmliZV0pO1xuICByZXR1cm4gdmFsdWVUb1JldHVybjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZV9zdWJzY3JpcHRpb24uanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/react/use_subscription.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/api.js":
/*!****************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/api.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anyApi: () => (/* binding */ anyApi),\n/* harmony export */   filterApi: () => (/* binding */ filterApi),\n/* harmony export */   getFunctionName: () => (/* binding */ getFunctionName),\n/* harmony export */   justActions: () => (/* binding */ justActions),\n/* harmony export */   justInternal: () => (/* binding */ justInternal),\n/* harmony export */   justMutations: () => (/* binding */ justMutations),\n/* harmony export */   justPaginatedQueries: () => (/* binding */ justPaginatedQueries),\n/* harmony export */   justPublic: () => (/* binding */ justPublic),\n/* harmony export */   justQueries: () => (/* binding */ justQueries),\n/* harmony export */   justSchedulable: () => (/* binding */ justSchedulable),\n/* harmony export */   makeFunctionReference: () => (/* binding */ makeFunctionReference)\n/* harmony export */ });\n/* harmony import */ var _functionName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./functionName.js */ \"(ssr)/./node_modules/convex/dist/esm/server/functionName.js\");\n/* harmony import */ var _components_paths_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/paths.js */ \"(ssr)/./node_modules/convex/dist/esm/server/components/paths.js\");\n\n\n\nfunction getFunctionName(functionReference) {\n  const address = (0,_components_paths_js__WEBPACK_IMPORTED_MODULE_1__.getFunctionAddress)(functionReference);\n  if (address.name === void 0) {\n    if (address.functionHandle !== void 0) {\n      throw new Error(\n        `Expected function reference like \"api.file.func\" or \"internal.file.func\", but received function handle ${address.functionHandle}`\n      );\n    } else if (address.reference !== void 0) {\n      throw new Error(\n        `Expected function reference in the current component like \"api.file.func\" or \"internal.file.func\", but received reference ${address.reference}`\n      );\n    }\n    throw new Error(\n      `Expected function reference like \"api.file.func\" or \"internal.file.func\", but received ${JSON.stringify(address)}`\n    );\n  }\n  if (typeof functionReference === \"string\") return functionReference;\n  const name = functionReference[_functionName_js__WEBPACK_IMPORTED_MODULE_0__.functionName];\n  if (!name) {\n    throw new Error(`${functionReference} is not a functionReference`);\n  }\n  return name;\n}\nfunction makeFunctionReference(name) {\n  return { [_functionName_js__WEBPACK_IMPORTED_MODULE_0__.functionName]: name };\n}\nfunction createApi(pathParts = []) {\n  const handler = {\n    get(_, prop) {\n      if (typeof prop === \"string\") {\n        const newParts = [...pathParts, prop];\n        return createApi(newParts);\n      } else if (prop === _functionName_js__WEBPACK_IMPORTED_MODULE_0__.functionName) {\n        if (pathParts.length < 2) {\n          const found = [\"api\", ...pathParts].join(\".\");\n          throw new Error(\n            `API path is expected to be of the form \\`api.moduleName.functionName\\`. Found: \\`${found}\\``\n          );\n        }\n        const path = pathParts.slice(0, -1).join(\"/\");\n        const exportName = pathParts[pathParts.length - 1];\n        if (exportName === \"default\") {\n          return path;\n        } else {\n          return path + \":\" + exportName;\n        }\n      } else if (prop === Symbol.toStringTag) {\n        return \"FunctionReference\";\n      } else {\n        return void 0;\n      }\n    }\n  };\n  return new Proxy({}, handler);\n}\nfunction filterApi(api) {\n  return api;\n}\nfunction justInternal(api) {\n  return api;\n}\nfunction justPublic(api) {\n  return api;\n}\nfunction justQueries(api) {\n  return api;\n}\nfunction justMutations(api) {\n  return api;\n}\nfunction justActions(api) {\n  return api;\n}\nfunction justPaginatedQueries(api) {\n  return api;\n}\nfunction justSchedulable(api) {\n  return api;\n}\nconst anyApi = createApi();\n//# sourceMappingURL=api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9hcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFhO0FBQ29DO0FBQ1U7QUFDcEQ7QUFDUCxrQkFBa0Isd0VBQWtCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLGtIQUFrSCx1QkFBdUI7QUFDekk7QUFDQSxNQUFNO0FBQ047QUFDQSxxSUFBcUksa0JBQWtCO0FBQ3ZKO0FBQ0E7QUFDQTtBQUNBLGdHQUFnRyx3QkFBd0I7QUFDeEg7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLDBEQUFZO0FBQzdDO0FBQ0EsdUJBQXVCLG1CQUFtQjtBQUMxQztBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsQ0FBQywwREFBWTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsa0JBQWtCLDBEQUFZO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLGdHQUFnRyxNQUFNO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUCIsInNvdXJjZXMiOlsiL1VzZXJzL2ppYWRpbGkvRGVza3RvcC93ZUFyZUZla2VuQ29rZWQvV2VBcmVGZWtlbkNvb2tlZC1IYWNrYXRob24tL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2FwaS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCB7IGZ1bmN0aW9uTmFtZSB9IGZyb20gXCIuL2Z1bmN0aW9uTmFtZS5qc1wiO1xuaW1wb3J0IHsgZ2V0RnVuY3Rpb25BZGRyZXNzIH0gZnJvbSBcIi4vY29tcG9uZW50cy9wYXRocy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEZ1bmN0aW9uTmFtZShmdW5jdGlvblJlZmVyZW5jZSkge1xuICBjb25zdCBhZGRyZXNzID0gZ2V0RnVuY3Rpb25BZGRyZXNzKGZ1bmN0aW9uUmVmZXJlbmNlKTtcbiAgaWYgKGFkZHJlc3MubmFtZSA9PT0gdm9pZCAwKSB7XG4gICAgaWYgKGFkZHJlc3MuZnVuY3Rpb25IYW5kbGUgIT09IHZvaWQgMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgRXhwZWN0ZWQgZnVuY3Rpb24gcmVmZXJlbmNlIGxpa2UgXCJhcGkuZmlsZS5mdW5jXCIgb3IgXCJpbnRlcm5hbC5maWxlLmZ1bmNcIiwgYnV0IHJlY2VpdmVkIGZ1bmN0aW9uIGhhbmRsZSAke2FkZHJlc3MuZnVuY3Rpb25IYW5kbGV9YFxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKGFkZHJlc3MucmVmZXJlbmNlICE9PSB2b2lkIDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYEV4cGVjdGVkIGZ1bmN0aW9uIHJlZmVyZW5jZSBpbiB0aGUgY3VycmVudCBjb21wb25lbnQgbGlrZSBcImFwaS5maWxlLmZ1bmNcIiBvciBcImludGVybmFsLmZpbGUuZnVuY1wiLCBidXQgcmVjZWl2ZWQgcmVmZXJlbmNlICR7YWRkcmVzcy5yZWZlcmVuY2V9YFxuICAgICAgKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYEV4cGVjdGVkIGZ1bmN0aW9uIHJlZmVyZW5jZSBsaWtlIFwiYXBpLmZpbGUuZnVuY1wiIG9yIFwiaW50ZXJuYWwuZmlsZS5mdW5jXCIsIGJ1dCByZWNlaXZlZCAke0pTT04uc3RyaW5naWZ5KGFkZHJlc3MpfWBcbiAgICApO1xuICB9XG4gIGlmICh0eXBlb2YgZnVuY3Rpb25SZWZlcmVuY2UgPT09IFwic3RyaW5nXCIpIHJldHVybiBmdW5jdGlvblJlZmVyZW5jZTtcbiAgY29uc3QgbmFtZSA9IGZ1bmN0aW9uUmVmZXJlbmNlW2Z1bmN0aW9uTmFtZV07XG4gIGlmICghbmFtZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgJHtmdW5jdGlvblJlZmVyZW5jZX0gaXMgbm90IGEgZnVuY3Rpb25SZWZlcmVuY2VgKTtcbiAgfVxuICByZXR1cm4gbmFtZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtYWtlRnVuY3Rpb25SZWZlcmVuY2UobmFtZSkge1xuICByZXR1cm4geyBbZnVuY3Rpb25OYW1lXTogbmFtZSB9O1xufVxuZnVuY3Rpb24gY3JlYXRlQXBpKHBhdGhQYXJ0cyA9IFtdKSB7XG4gIGNvbnN0IGhhbmRsZXIgPSB7XG4gICAgZ2V0KF8sIHByb3ApIHtcbiAgICAgIGlmICh0eXBlb2YgcHJvcCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBjb25zdCBuZXdQYXJ0cyA9IFsuLi5wYXRoUGFydHMsIHByb3BdO1xuICAgICAgICByZXR1cm4gY3JlYXRlQXBpKG5ld1BhcnRzKTtcbiAgICAgIH0gZWxzZSBpZiAocHJvcCA9PT0gZnVuY3Rpb25OYW1lKSB7XG4gICAgICAgIGlmIChwYXRoUGFydHMubGVuZ3RoIDwgMikge1xuICAgICAgICAgIGNvbnN0IGZvdW5kID0gW1wiYXBpXCIsIC4uLnBhdGhQYXJ0c10uam9pbihcIi5cIik7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgICAgYEFQSSBwYXRoIGlzIGV4cGVjdGVkIHRvIGJlIG9mIHRoZSBmb3JtIFxcYGFwaS5tb2R1bGVOYW1lLmZ1bmN0aW9uTmFtZVxcYC4gRm91bmQ6IFxcYCR7Zm91bmR9XFxgYFxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcGF0aCA9IHBhdGhQYXJ0cy5zbGljZSgwLCAtMSkuam9pbihcIi9cIik7XG4gICAgICAgIGNvbnN0IGV4cG9ydE5hbWUgPSBwYXRoUGFydHNbcGF0aFBhcnRzLmxlbmd0aCAtIDFdO1xuICAgICAgICBpZiAoZXhwb3J0TmFtZSA9PT0gXCJkZWZhdWx0XCIpIHtcbiAgICAgICAgICByZXR1cm4gcGF0aDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gcGF0aCArIFwiOlwiICsgZXhwb3J0TmFtZTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChwcm9wID09PSBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiAgICAgICAgcmV0dXJuIFwiRnVuY3Rpb25SZWZlcmVuY2VcIjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB2b2lkIDA7XG4gICAgICB9XG4gICAgfVxuICB9O1xuICByZXR1cm4gbmV3IFByb3h5KHt9LCBoYW5kbGVyKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmaWx0ZXJBcGkoYXBpKSB7XG4gIHJldHVybiBhcGk7XG59XG5leHBvcnQgZnVuY3Rpb24ganVzdEludGVybmFsKGFwaSkge1xuICByZXR1cm4gYXBpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGp1c3RQdWJsaWMoYXBpKSB7XG4gIHJldHVybiBhcGk7XG59XG5leHBvcnQgZnVuY3Rpb24ganVzdFF1ZXJpZXMoYXBpKSB7XG4gIHJldHVybiBhcGk7XG59XG5leHBvcnQgZnVuY3Rpb24ganVzdE11dGF0aW9ucyhhcGkpIHtcbiAgcmV0dXJuIGFwaTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBqdXN0QWN0aW9ucyhhcGkpIHtcbiAgcmV0dXJuIGFwaTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBqdXN0UGFnaW5hdGVkUXVlcmllcyhhcGkpIHtcbiAgcmV0dXJuIGFwaTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBqdXN0U2NoZWR1bGFibGUoYXBpKSB7XG4gIHJldHVybiBhcGk7XG59XG5leHBvcnQgY29uc3QgYW55QXBpID0gY3JlYXRlQXBpKCk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcGkuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/components/paths.js":
/*!*****************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/components/paths.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractReferencePath: () => (/* binding */ extractReferencePath),\n/* harmony export */   getFunctionAddress: () => (/* binding */ getFunctionAddress),\n/* harmony export */   isFunctionHandle: () => (/* binding */ isFunctionHandle),\n/* harmony export */   setReferencePath: () => (/* binding */ setReferencePath),\n/* harmony export */   toReferencePath: () => (/* binding */ toReferencePath)\n/* harmony export */ });\n/* harmony import */ var _functionName_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../functionName.js */ \"(ssr)/./node_modules/convex/dist/esm/server/functionName.js\");\n\n\nconst toReferencePath = Symbol.for(\"toReferencePath\");\nfunction setReferencePath(obj, value) {\n  obj[toReferencePath] = value;\n}\nfunction extractReferencePath(reference) {\n  return reference[toReferencePath] ?? null;\n}\nfunction isFunctionHandle(s) {\n  return s.startsWith(\"function://\");\n}\nfunction getFunctionAddress(functionReference) {\n  let functionAddress;\n  if (typeof functionReference === \"string\") {\n    if (isFunctionHandle(functionReference)) {\n      functionAddress = { functionHandle: functionReference };\n    } else {\n      functionAddress = { name: functionReference };\n    }\n  } else if (functionReference[_functionName_js__WEBPACK_IMPORTED_MODULE_0__.functionName]) {\n    functionAddress = { name: functionReference[_functionName_js__WEBPACK_IMPORTED_MODULE_0__.functionName] };\n  } else {\n    const referencePath = extractReferencePath(functionReference);\n    if (!referencePath) {\n      throw new Error(`${functionReference} is not a functionReference`);\n    }\n    functionAddress = { reference: referencePath };\n  }\n  return functionAddress;\n}\n//# sourceMappingURL=paths.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9jb21wb25lbnRzL3BhdGhzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFhO0FBQ3FDO0FBQzNDO0FBQ0E7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUIsTUFBTTtBQUNOLDBCQUEwQjtBQUMxQjtBQUNBLElBQUksMkJBQTJCLDBEQUFZO0FBQzNDLHdCQUF3Qix3QkFBd0IsMERBQVk7QUFDNUQsSUFBSTtBQUNKO0FBQ0E7QUFDQSx5QkFBeUIsbUJBQW1CO0FBQzVDO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvamlhZGlsaS9EZXNrdG9wL3dlQXJlRmVrZW5Db2tlZC9XZUFyZUZla2VuQ29va2VkLUhhY2thdGhvbi0vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS9zZXJ2ZXIvY29tcG9uZW50cy9wYXRocy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmltcG9ydCB7IGZ1bmN0aW9uTmFtZSB9IGZyb20gXCIuLi9mdW5jdGlvbk5hbWUuanNcIjtcbmV4cG9ydCBjb25zdCB0b1JlZmVyZW5jZVBhdGggPSBTeW1ib2wuZm9yKFwidG9SZWZlcmVuY2VQYXRoXCIpO1xuZXhwb3J0IGZ1bmN0aW9uIHNldFJlZmVyZW5jZVBhdGgob2JqLCB2YWx1ZSkge1xuICBvYmpbdG9SZWZlcmVuY2VQYXRoXSA9IHZhbHVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGV4dHJhY3RSZWZlcmVuY2VQYXRoKHJlZmVyZW5jZSkge1xuICByZXR1cm4gcmVmZXJlbmNlW3RvUmVmZXJlbmNlUGF0aF0gPz8gbnVsbDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0Z1bmN0aW9uSGFuZGxlKHMpIHtcbiAgcmV0dXJuIHMuc3RhcnRzV2l0aChcImZ1bmN0aW9uOi8vXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEZ1bmN0aW9uQWRkcmVzcyhmdW5jdGlvblJlZmVyZW5jZSkge1xuICBsZXQgZnVuY3Rpb25BZGRyZXNzO1xuICBpZiAodHlwZW9mIGZ1bmN0aW9uUmVmZXJlbmNlID09PSBcInN0cmluZ1wiKSB7XG4gICAgaWYgKGlzRnVuY3Rpb25IYW5kbGUoZnVuY3Rpb25SZWZlcmVuY2UpKSB7XG4gICAgICBmdW5jdGlvbkFkZHJlc3MgPSB7IGZ1bmN0aW9uSGFuZGxlOiBmdW5jdGlvblJlZmVyZW5jZSB9O1xuICAgIH0gZWxzZSB7XG4gICAgICBmdW5jdGlvbkFkZHJlc3MgPSB7IG5hbWU6IGZ1bmN0aW9uUmVmZXJlbmNlIH07XG4gICAgfVxuICB9IGVsc2UgaWYgKGZ1bmN0aW9uUmVmZXJlbmNlW2Z1bmN0aW9uTmFtZV0pIHtcbiAgICBmdW5jdGlvbkFkZHJlc3MgPSB7IG5hbWU6IGZ1bmN0aW9uUmVmZXJlbmNlW2Z1bmN0aW9uTmFtZV0gfTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCByZWZlcmVuY2VQYXRoID0gZXh0cmFjdFJlZmVyZW5jZVBhdGgoZnVuY3Rpb25SZWZlcmVuY2UpO1xuICAgIGlmICghcmVmZXJlbmNlUGF0aCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2Z1bmN0aW9uUmVmZXJlbmNlfSBpcyBub3QgYSBmdW5jdGlvblJlZmVyZW5jZWApO1xuICAgIH1cbiAgICBmdW5jdGlvbkFkZHJlc3MgPSB7IHJlZmVyZW5jZTogcmVmZXJlbmNlUGF0aCB9O1xuICB9XG4gIHJldHVybiBmdW5jdGlvbkFkZHJlc3M7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXRocy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/components/paths.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/server/functionName.js":
/*!*************************************************************!*\
  !*** ./node_modules/convex/dist/esm/server/functionName.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   functionName: () => (/* binding */ functionName)\n/* harmony export */ });\n\nconst functionName = Symbol.for(\"functionName\");\n//# sourceMappingURL=functionName.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3NlcnZlci9mdW5jdGlvbk5hbWUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFhO0FBQ047QUFDUCIsInNvdXJjZXMiOlsiL1VzZXJzL2ppYWRpbGkvRGVza3RvcC93ZUFyZUZla2VuQ29rZWQvV2VBcmVGZWtlbkNvb2tlZC1IYWNrYXRob24tL25vZGVfbW9kdWxlcy9jb252ZXgvZGlzdC9lc20vc2VydmVyL2Z1bmN0aW9uTmFtZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydCBjb25zdCBmdW5jdGlvbk5hbWUgPSBTeW1ib2wuZm9yKFwiZnVuY3Rpb25OYW1lXCIpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZnVuY3Rpb25OYW1lLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/server/functionName.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/base64.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/base64.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   byteLength: () => (/* binding */ byteLength),\n/* harmony export */   fromByteArray: () => (/* binding */ fromByteArray),\n/* harmony export */   toByteArray: () => (/* binding */ toByteArray)\n/* harmony export */ });\n\nvar lookup = [];\nvar revLookup = [];\nvar Arr = Uint8Array;\nvar code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n}\nrevLookup[\"-\".charCodeAt(0)] = 62;\nrevLookup[\"_\".charCodeAt(0)] = 63;\nfunction getLens(b64) {\n  var len = b64.length;\n  if (len % 4 > 0) {\n    throw new Error(\"Invalid string. Length must be a multiple of 4\");\n  }\n  var validLen = b64.indexOf(\"=\");\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n}\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction _byteLength(_b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0;\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 255;\n    arr[curByte++] = tmp >> 8 & 255;\n    arr[curByte++] = tmp & 255;\n  }\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 255;\n  }\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 255;\n    arr[curByte++] = tmp & 255;\n  }\n  return arr;\n}\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];\n}\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 16711680) + (uint8[i + 1] << 8 & 65280) + (uint8[i + 2] & 255);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join(\"\");\n}\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3;\n  var parts = [];\n  var maxChunkLength = 16383;\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(\n      encodeChunk(\n        uint8,\n        i,\n        i + maxChunkLength > len2 ? len2 : i + maxChunkLength\n      )\n    );\n  }\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 63] + \"==\");\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(\n      lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + \"=\"\n    );\n  }\n  return parts.join(\"\");\n}\n//# sourceMappingURL=base64.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9iYXNlNjQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxTQUFTO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsU0FBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixTQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsVUFBVTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qaWFkaWxpL0Rlc2t0b3Avd2VBcmVGZWtlbkNva2VkL1dlQXJlRmVrZW5Db29rZWQtSGFja2F0aG9uLS9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9iYXNlNjQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgbG9va3VwID0gW107XG52YXIgcmV2TG9va3VwID0gW107XG52YXIgQXJyID0gVWludDhBcnJheTtcbnZhciBjb2RlID0gXCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvXCI7XG5mb3IgKHZhciBpID0gMCwgbGVuID0gY29kZS5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICBsb29rdXBbaV0gPSBjb2RlW2ldO1xuICByZXZMb29rdXBbY29kZS5jaGFyQ29kZUF0KGkpXSA9IGk7XG59XG5yZXZMb29rdXBbXCItXCIuY2hhckNvZGVBdCgwKV0gPSA2MjtcbnJldkxvb2t1cFtcIl9cIi5jaGFyQ29kZUF0KDApXSA9IDYzO1xuZnVuY3Rpb24gZ2V0TGVucyhiNjQpIHtcbiAgdmFyIGxlbiA9IGI2NC5sZW5ndGg7XG4gIGlmIChsZW4gJSA0ID4gMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgc3RyaW5nLiBMZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDRcIik7XG4gIH1cbiAgdmFyIHZhbGlkTGVuID0gYjY0LmluZGV4T2YoXCI9XCIpO1xuICBpZiAodmFsaWRMZW4gPT09IC0xKSB2YWxpZExlbiA9IGxlbjtcbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IHZhbGlkTGVuID09PSBsZW4gPyAwIDogNCAtIHZhbGlkTGVuICUgNDtcbiAgcmV0dXJuIFt2YWxpZExlbiwgcGxhY2VIb2xkZXJzTGVuXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBieXRlTGVuZ3RoKGI2NCkge1xuICB2YXIgbGVucyA9IGdldExlbnMoYjY0KTtcbiAgdmFyIHZhbGlkTGVuID0gbGVuc1swXTtcbiAgdmFyIHBsYWNlSG9sZGVyc0xlbiA9IGxlbnNbMV07XG4gIHJldHVybiAodmFsaWRMZW4gKyBwbGFjZUhvbGRlcnNMZW4pICogMyAvIDQgLSBwbGFjZUhvbGRlcnNMZW47XG59XG5mdW5jdGlvbiBfYnl0ZUxlbmd0aChfYjY0LCB2YWxpZExlbiwgcGxhY2VIb2xkZXJzTGVuKSB7XG4gIHJldHVybiAodmFsaWRMZW4gKyBwbGFjZUhvbGRlcnNMZW4pICogMyAvIDQgLSBwbGFjZUhvbGRlcnNMZW47XG59XG5leHBvcnQgZnVuY3Rpb24gdG9CeXRlQXJyYXkoYjY0KSB7XG4gIHZhciB0bXA7XG4gIHZhciBsZW5zID0gZ2V0TGVucyhiNjQpO1xuICB2YXIgdmFsaWRMZW4gPSBsZW5zWzBdO1xuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXTtcbiAgdmFyIGFyciA9IG5ldyBBcnIoX2J5dGVMZW5ndGgoYjY0LCB2YWxpZExlbiwgcGxhY2VIb2xkZXJzTGVuKSk7XG4gIHZhciBjdXJCeXRlID0gMDtcbiAgdmFyIGxlbiA9IHBsYWNlSG9sZGVyc0xlbiA+IDAgPyB2YWxpZExlbiAtIDQgOiB2YWxpZExlbjtcbiAgdmFyIGk7XG4gIGZvciAoaSA9IDA7IGkgPCBsZW47IGkgKz0gNCkge1xuICAgIHRtcCA9IHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTggfCByZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCAxMiB8IHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMildIDw8IDYgfCByZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDMpXTtcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCA+PiAxNiAmIDI1NTtcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCA+PiA4ICYgMjU1O1xuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMjU1O1xuICB9XG4gIGlmIChwbGFjZUhvbGRlcnNMZW4gPT09IDIpIHtcbiAgICB0bXAgPSByZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDIgfCByZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA+PiA0O1xuICAgIGFycltjdXJCeXRlKytdID0gdG1wICYgMjU1O1xuICB9XG4gIGlmIChwbGFjZUhvbGRlcnNMZW4gPT09IDEpIHtcbiAgICB0bXAgPSByZXZMb29rdXBbYjY0LmNoYXJDb2RlQXQoaSldIDw8IDEwIHwgcmV2TG9va3VwW2I2NC5jaGFyQ29kZUF0KGkgKyAxKV0gPDwgNCB8IHJldkxvb2t1cFtiNjQuY2hhckNvZGVBdChpICsgMildID4+IDI7XG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgPj4gOCAmIDI1NTtcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDI1NTtcbiAgfVxuICByZXR1cm4gYXJyO1xufVxuZnVuY3Rpb24gdHJpcGxldFRvQmFzZTY0KG51bSkge1xuICByZXR1cm4gbG9va3VwW251bSA+PiAxOCAmIDYzXSArIGxvb2t1cFtudW0gPj4gMTIgJiA2M10gKyBsb29rdXBbbnVtID4+IDYgJiA2M10gKyBsb29rdXBbbnVtICYgNjNdO1xufVxuZnVuY3Rpb24gZW5jb2RlQ2h1bmsodWludDgsIHN0YXJ0LCBlbmQpIHtcbiAgdmFyIHRtcDtcbiAgdmFyIG91dHB1dCA9IFtdO1xuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7IGkgKz0gMykge1xuICAgIHRtcCA9ICh1aW50OFtpXSA8PCAxNiAmIDE2NzExNjgwKSArICh1aW50OFtpICsgMV0gPDwgOCAmIDY1MjgwKSArICh1aW50OFtpICsgMl0gJiAyNTUpO1xuICAgIG91dHB1dC5wdXNoKHRyaXBsZXRUb0Jhc2U2NCh0bXApKTtcbiAgfVxuICByZXR1cm4gb3V0cHV0LmpvaW4oXCJcIik7XG59XG5leHBvcnQgZnVuY3Rpb24gZnJvbUJ5dGVBcnJheSh1aW50OCkge1xuICB2YXIgdG1wO1xuICB2YXIgbGVuID0gdWludDgubGVuZ3RoO1xuICB2YXIgZXh0cmFCeXRlcyA9IGxlbiAlIDM7XG4gIHZhciBwYXJ0cyA9IFtdO1xuICB2YXIgbWF4Q2h1bmtMZW5ndGggPSAxNjM4MztcbiAgZm9yICh2YXIgaSA9IDAsIGxlbjIgPSBsZW4gLSBleHRyYUJ5dGVzOyBpIDwgbGVuMjsgaSArPSBtYXhDaHVua0xlbmd0aCkge1xuICAgIHBhcnRzLnB1c2goXG4gICAgICBlbmNvZGVDaHVuayhcbiAgICAgICAgdWludDgsXG4gICAgICAgIGksXG4gICAgICAgIGkgKyBtYXhDaHVua0xlbmd0aCA+IGxlbjIgPyBsZW4yIDogaSArIG1heENodW5rTGVuZ3RoXG4gICAgICApXG4gICAgKTtcbiAgfVxuICBpZiAoZXh0cmFCeXRlcyA9PT0gMSkge1xuICAgIHRtcCA9IHVpbnQ4W2xlbiAtIDFdO1xuICAgIHBhcnRzLnB1c2gobG9va3VwW3RtcCA+PiAyXSArIGxvb2t1cFt0bXAgPDwgNCAmIDYzXSArIFwiPT1cIik7XG4gIH0gZWxzZSBpZiAoZXh0cmFCeXRlcyA9PT0gMikge1xuICAgIHRtcCA9ICh1aW50OFtsZW4gLSAyXSA8PCA4KSArIHVpbnQ4W2xlbiAtIDFdO1xuICAgIHBhcnRzLnB1c2goXG4gICAgICBsb29rdXBbdG1wID4+IDEwXSArIGxvb2t1cFt0bXAgPj4gNCAmIDYzXSArIGxvb2t1cFt0bXAgPDwgMiAmIDYzXSArIFwiPVwiXG4gICAgKTtcbiAgfVxuICByZXR1cm4gcGFydHMuam9pbihcIlwiKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U2NC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/errors.js":
/*!*******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/errors.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConvexError: () => (/* binding */ ConvexError)\n/* harmony export */ });\n/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar _a, _b;\n\nconst IDENTIFYING_FIELD = Symbol.for(\"ConvexError\");\nclass ConvexError extends (_b = Error, _a = IDENTIFYING_FIELD, _b) {\n  constructor(data) {\n    super(typeof data === \"string\" ? data : (0,_value_js__WEBPACK_IMPORTED_MODULE_0__.stringifyValueForError)(data));\n    __publicField(this, \"name\", \"ConvexError\");\n    __publicField(this, \"data\");\n    __publicField(this, _a, true);\n    this.data = data;\n  }\n}\n//# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9lcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTtBQUNiO0FBQ0EsOEVBQThFLDZEQUE2RDtBQUMzSTtBQUNBO0FBQ29EO0FBQ3BEO0FBQ087QUFDUDtBQUNBLDRDQUE0QyxpRUFBc0I7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qaWFkaWxpL0Rlc2t0b3Avd2VBcmVGZWtlbkNva2VkL1dlQXJlRmVrZW5Db29rZWQtSGFja2F0aG9uLS9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9lcnJvcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiBfX2RlZk5vcm1hbFByb3Aob2JqLCB0eXBlb2Yga2V5ICE9PSBcInN5bWJvbFwiID8ga2V5ICsgXCJcIiA6IGtleSwgdmFsdWUpO1xudmFyIF9hLCBfYjtcbmltcG9ydCB7IHN0cmluZ2lmeVZhbHVlRm9yRXJyb3IgfSBmcm9tIFwiLi92YWx1ZS5qc1wiO1xuY29uc3QgSURFTlRJRllJTkdfRklFTEQgPSBTeW1ib2wuZm9yKFwiQ29udmV4RXJyb3JcIik7XG5leHBvcnQgY2xhc3MgQ29udmV4RXJyb3IgZXh0ZW5kcyAoX2IgPSBFcnJvciwgX2EgPSBJREVOVElGWUlOR19GSUVMRCwgX2IpIHtcbiAgY29uc3RydWN0b3IoZGF0YSkge1xuICAgIHN1cGVyKHR5cGVvZiBkYXRhID09PSBcInN0cmluZ1wiID8gZGF0YSA6IHN0cmluZ2lmeVZhbHVlRm9yRXJyb3IoZGF0YSkpO1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJuYW1lXCIsIFwiQ29udmV4RXJyb3JcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImRhdGFcIik7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBfYSwgdHJ1ZSk7XG4gICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/index.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Base64: () => (/* reexport module object */ _base64_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   ConvexError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_3__.ConvexError),\n/* harmony export */   asObjectValidator: () => (/* reexport safe */ _validator_js__WEBPACK_IMPORTED_MODULE_1__.asObjectValidator),\n/* harmony export */   convexToJson: () => (/* reexport safe */ _value_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson),\n/* harmony export */   jsonToConvex: () => (/* reexport safe */ _value_js__WEBPACK_IMPORTED_MODULE_0__.jsonToConvex),\n/* harmony export */   v: () => (/* reexport safe */ _validator_js__WEBPACK_IMPORTED_MODULE_1__.v)\n/* harmony export */ });\n/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n/* harmony import */ var _validator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./validator.js */ \"(ssr)/./node_modules/convex/dist/esm/values/validator.js\");\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base64.js */ \"(ssr)/./node_modules/convex/dist/esm/values/base64.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/./node_modules/convex/dist/esm/values/errors.js\");\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWE7QUFDMkM7QUFDRjtBQUNoQjtBQUNwQjtBQUNVO0FBQzVCIiwic291cmNlcyI6WyIvVXNlcnMvamlhZGlsaS9EZXNrdG9wL3dlQXJlRmVrZW5Db2tlZC9XZUFyZUZla2VuQ29va2VkLUhhY2thdGhvbi0vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS92YWx1ZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnQgeyBjb252ZXhUb0pzb24sIGpzb25Ub0NvbnZleCB9IGZyb20gXCIuL3ZhbHVlLmpzXCI7XG5leHBvcnQgeyB2LCBhc09iamVjdFZhbGlkYXRvciB9IGZyb20gXCIuL3ZhbGlkYXRvci5qc1wiO1xuaW1wb3J0ICogYXMgQmFzZTY0IGZyb20gXCIuL2Jhc2U2NC5qc1wiO1xuZXhwb3J0IHsgQmFzZTY0IH07XG5leHBvcnQgKiBmcm9tIFwiLi9lcnJvcnMuanNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/validator.js":
/*!**********************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/validator.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asObjectValidator: () => (/* binding */ asObjectValidator),\n/* harmony export */   isValidator: () => (/* binding */ isValidator),\n/* harmony export */   v: () => (/* binding */ v)\n/* harmony export */ });\n/* harmony import */ var _validators_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validators.js */ \"(ssr)/./node_modules/convex/dist/esm/values/validators.js\");\n\n\nfunction isValidator(v2) {\n  return !!v2.isConvexValidator;\n}\nfunction asObjectValidator(obj) {\n  if (isValidator(obj)) {\n    return obj;\n  } else {\n    return v.object(obj);\n  }\n}\nconst v = {\n  /**\n   * Validates that the value corresponds to an ID of a document in given table.\n   * @param tableName The name of the table.\n   */\n  id: (tableName) => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VId({\n      isOptional: \"required\",\n      tableName\n    });\n  },\n  /**\n   * Validates that the value is of type Null.\n   */\n  null: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VNull({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is of Convex type Float64 (Number in JS).\n   *\n   * Alias for `v.float64()`\n   */\n  number: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VFloat64({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is of Convex type Float64 (Number in JS).\n   */\n  float64: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VFloat64({ isOptional: \"required\" });\n  },\n  /**\n   * @deprecated Use `v.int64()` instead\n   */\n  bigint: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VInt64({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is of Convex type Int64 (BigInt in JS).\n   */\n  int64: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VInt64({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is of type Boolean.\n   */\n  boolean: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VBoolean({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is of type String.\n   */\n  string: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VString({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is of Convex type Bytes (constructed in JS via `ArrayBuffer`).\n   */\n  bytes: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VBytes({ isOptional: \"required\" });\n  },\n  /**\n   * Validates that the value is equal to the given literal value.\n   * @param literal The literal value to compare against.\n   */\n  literal: (literal) => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VLiteral({ isOptional: \"required\", value: literal });\n  },\n  /**\n   * Validates that the value is an Array of the given element type.\n   * @param element The validator for the elements of the array.\n   */\n  array: (element) => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VArray({ isOptional: \"required\", element });\n  },\n  /**\n   * Validates that the value is an Object with the given properties.\n   * @param fields An object specifying the validator for each property.\n   */\n  object: (fields) => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VObject({ isOptional: \"required\", fields });\n  },\n  /**\n   * Validates that the value is a Record with keys and values that match the given types.\n   * @param keys The validator for the keys of the record. This cannot contain string literals.\n   * @param values The validator for the values of the record.\n   */\n  record: (keys, values) => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VRecord({\n      isOptional: \"required\",\n      key: keys,\n      value: values\n    });\n  },\n  /**\n   * Validates that the value matches one of the given validators.\n   * @param members The validators to match against.\n   */\n  union: (...members) => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VUnion({\n      isOptional: \"required\",\n      members\n    });\n  },\n  /**\n   * Does not validate the value.\n   */\n  any: () => {\n    return new _validators_js__WEBPACK_IMPORTED_MODULE_0__.VAny({ isOptional: \"required\" });\n  },\n  /**\n   * Allows not specifying a value for a property in an Object.\n   * @param value The property value validator to make optional.\n   *\n   * ```typescript\n   * const objectWithOptionalFields = v.object({\n   *   requiredField: v.string(),\n   *   optionalField: v.optional(v.string()),\n   * });\n   * ```\n   */\n  optional: (value) => {\n    return value.asOptional();\n  }\n};\n//# sourceMappingURL=validator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY29udmV4L2Rpc3QvZXNtL3ZhbHVlcy92YWxpZGF0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFhO0FBZVk7QUFDbEI7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsK0NBQUc7QUFDbEI7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGlEQUFLLEdBQUcsd0JBQXdCO0FBQy9DLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9EQUFRLEdBQUcsd0JBQXdCO0FBQ2xELEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0RBQVEsR0FBRyx3QkFBd0I7QUFDbEQsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxrREFBTSxHQUFHLHdCQUF3QjtBQUNoRCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGtEQUFNLEdBQUcsd0JBQXdCO0FBQ2hELEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0RBQVEsR0FBRyx3QkFBd0I7QUFDbEQsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtREFBTyxHQUFHLHdCQUF3QjtBQUNqRCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGtEQUFNLEdBQUcsd0JBQXdCO0FBQ2hELEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvREFBUSxHQUFHLHdDQUF3QztBQUNsRSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsa0RBQU0sR0FBRyxpQ0FBaUM7QUFDekQsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1EQUFPLEdBQUcsZ0NBQWdDO0FBQ3pELEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1EQUFPO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsa0RBQU07QUFDckI7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdEQUFJLEdBQUcsd0JBQXdCO0FBQzlDLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvamlhZGlsaS9EZXNrdG9wL3dlQXJlRmVrZW5Db2tlZC9XZUFyZUZla2VuQ29va2VkLUhhY2thdGhvbi0vbm9kZV9tb2R1bGVzL2NvbnZleC9kaXN0L2VzbS92YWx1ZXMvdmFsaWRhdG9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuaW1wb3J0IHtcbiAgVkFueSxcbiAgVkFycmF5LFxuICBWQm9vbGVhbixcbiAgVkJ5dGVzLFxuICBWRmxvYXQ2NCxcbiAgVklkLFxuICBWSW50NjQsXG4gIFZMaXRlcmFsLFxuICBWTnVsbCxcbiAgVk9iamVjdCxcbiAgVlJlY29yZCxcbiAgVlN0cmluZyxcbiAgVlVuaW9uXG59IGZyb20gXCIuL3ZhbGlkYXRvcnMuanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkYXRvcih2Mikge1xuICByZXR1cm4gISF2Mi5pc0NvbnZleFZhbGlkYXRvcjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhc09iamVjdFZhbGlkYXRvcihvYmopIHtcbiAgaWYgKGlzVmFsaWRhdG9yKG9iaikpIHtcbiAgICByZXR1cm4gb2JqO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB2Lm9iamVjdChvYmopO1xuICB9XG59XG5leHBvcnQgY29uc3QgdiA9IHtcbiAgLyoqXG4gICAqIFZhbGlkYXRlcyB0aGF0IHRoZSB2YWx1ZSBjb3JyZXNwb25kcyB0byBhbiBJRCBvZiBhIGRvY3VtZW50IGluIGdpdmVuIHRhYmxlLlxuICAgKiBAcGFyYW0gdGFibGVOYW1lIFRoZSBuYW1lIG9mIHRoZSB0YWJsZS5cbiAgICovXG4gIGlkOiAodGFibGVOYW1lKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBWSWQoe1xuICAgICAgaXNPcHRpb25hbDogXCJyZXF1aXJlZFwiLFxuICAgICAgdGFibGVOYW1lXG4gICAgfSk7XG4gIH0sXG4gIC8qKlxuICAgKiBWYWxpZGF0ZXMgdGhhdCB0aGUgdmFsdWUgaXMgb2YgdHlwZSBOdWxsLlxuICAgKi9cbiAgbnVsbDogKCkgPT4ge1xuICAgIHJldHVybiBuZXcgVk51bGwoeyBpc09wdGlvbmFsOiBcInJlcXVpcmVkXCIgfSk7XG4gIH0sXG4gIC8qKlxuICAgKiBWYWxpZGF0ZXMgdGhhdCB0aGUgdmFsdWUgaXMgb2YgQ29udmV4IHR5cGUgRmxvYXQ2NCAoTnVtYmVyIGluIEpTKS5cbiAgICpcbiAgICogQWxpYXMgZm9yIGB2LmZsb2F0NjQoKWBcbiAgICovXG4gIG51bWJlcjogKCkgPT4ge1xuICAgIHJldHVybiBuZXcgVkZsb2F0NjQoeyBpc09wdGlvbmFsOiBcInJlcXVpcmVkXCIgfSk7XG4gIH0sXG4gIC8qKlxuICAgKiBWYWxpZGF0ZXMgdGhhdCB0aGUgdmFsdWUgaXMgb2YgQ29udmV4IHR5cGUgRmxvYXQ2NCAoTnVtYmVyIGluIEpTKS5cbiAgICovXG4gIGZsb2F0NjQ6ICgpID0+IHtcbiAgICByZXR1cm4gbmV3IFZGbG9hdDY0KHsgaXNPcHRpb25hbDogXCJyZXF1aXJlZFwiIH0pO1xuICB9LFxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVXNlIGB2LmludDY0KClgIGluc3RlYWRcbiAgICovXG4gIGJpZ2ludDogKCkgPT4ge1xuICAgIHJldHVybiBuZXcgVkludDY0KHsgaXNPcHRpb25hbDogXCJyZXF1aXJlZFwiIH0pO1xuICB9LFxuICAvKipcbiAgICogVmFsaWRhdGVzIHRoYXQgdGhlIHZhbHVlIGlzIG9mIENvbnZleCB0eXBlIEludDY0IChCaWdJbnQgaW4gSlMpLlxuICAgKi9cbiAgaW50NjQ6ICgpID0+IHtcbiAgICByZXR1cm4gbmV3IFZJbnQ2NCh7IGlzT3B0aW9uYWw6IFwicmVxdWlyZWRcIiB9KTtcbiAgfSxcbiAgLyoqXG4gICAqIFZhbGlkYXRlcyB0aGF0IHRoZSB2YWx1ZSBpcyBvZiB0eXBlIEJvb2xlYW4uXG4gICAqL1xuICBib29sZWFuOiAoKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBWQm9vbGVhbih7IGlzT3B0aW9uYWw6IFwicmVxdWlyZWRcIiB9KTtcbiAgfSxcbiAgLyoqXG4gICAqIFZhbGlkYXRlcyB0aGF0IHRoZSB2YWx1ZSBpcyBvZiB0eXBlIFN0cmluZy5cbiAgICovXG4gIHN0cmluZzogKCkgPT4ge1xuICAgIHJldHVybiBuZXcgVlN0cmluZyh7IGlzT3B0aW9uYWw6IFwicmVxdWlyZWRcIiB9KTtcbiAgfSxcbiAgLyoqXG4gICAqIFZhbGlkYXRlcyB0aGF0IHRoZSB2YWx1ZSBpcyBvZiBDb252ZXggdHlwZSBCeXRlcyAoY29uc3RydWN0ZWQgaW4gSlMgdmlhIGBBcnJheUJ1ZmZlcmApLlxuICAgKi9cbiAgYnl0ZXM6ICgpID0+IHtcbiAgICByZXR1cm4gbmV3IFZCeXRlcyh7IGlzT3B0aW9uYWw6IFwicmVxdWlyZWRcIiB9KTtcbiAgfSxcbiAgLyoqXG4gICAqIFZhbGlkYXRlcyB0aGF0IHRoZSB2YWx1ZSBpcyBlcXVhbCB0byB0aGUgZ2l2ZW4gbGl0ZXJhbCB2YWx1ZS5cbiAgICogQHBhcmFtIGxpdGVyYWwgVGhlIGxpdGVyYWwgdmFsdWUgdG8gY29tcGFyZSBhZ2FpbnN0LlxuICAgKi9cbiAgbGl0ZXJhbDogKGxpdGVyYWwpID0+IHtcbiAgICByZXR1cm4gbmV3IFZMaXRlcmFsKHsgaXNPcHRpb25hbDogXCJyZXF1aXJlZFwiLCB2YWx1ZTogbGl0ZXJhbCB9KTtcbiAgfSxcbiAgLyoqXG4gICAqIFZhbGlkYXRlcyB0aGF0IHRoZSB2YWx1ZSBpcyBhbiBBcnJheSBvZiB0aGUgZ2l2ZW4gZWxlbWVudCB0eXBlLlxuICAgKiBAcGFyYW0gZWxlbWVudCBUaGUgdmFsaWRhdG9yIGZvciB0aGUgZWxlbWVudHMgb2YgdGhlIGFycmF5LlxuICAgKi9cbiAgYXJyYXk6IChlbGVtZW50KSA9PiB7XG4gICAgcmV0dXJuIG5ldyBWQXJyYXkoeyBpc09wdGlvbmFsOiBcInJlcXVpcmVkXCIsIGVsZW1lbnQgfSk7XG4gIH0sXG4gIC8qKlxuICAgKiBWYWxpZGF0ZXMgdGhhdCB0aGUgdmFsdWUgaXMgYW4gT2JqZWN0IHdpdGggdGhlIGdpdmVuIHByb3BlcnRpZXMuXG4gICAqIEBwYXJhbSBmaWVsZHMgQW4gb2JqZWN0IHNwZWNpZnlpbmcgdGhlIHZhbGlkYXRvciBmb3IgZWFjaCBwcm9wZXJ0eS5cbiAgICovXG4gIG9iamVjdDogKGZpZWxkcykgPT4ge1xuICAgIHJldHVybiBuZXcgVk9iamVjdCh7IGlzT3B0aW9uYWw6IFwicmVxdWlyZWRcIiwgZmllbGRzIH0pO1xuICB9LFxuICAvKipcbiAgICogVmFsaWRhdGVzIHRoYXQgdGhlIHZhbHVlIGlzIGEgUmVjb3JkIHdpdGgga2V5cyBhbmQgdmFsdWVzIHRoYXQgbWF0Y2ggdGhlIGdpdmVuIHR5cGVzLlxuICAgKiBAcGFyYW0ga2V5cyBUaGUgdmFsaWRhdG9yIGZvciB0aGUga2V5cyBvZiB0aGUgcmVjb3JkLiBUaGlzIGNhbm5vdCBjb250YWluIHN0cmluZyBsaXRlcmFscy5cbiAgICogQHBhcmFtIHZhbHVlcyBUaGUgdmFsaWRhdG9yIGZvciB0aGUgdmFsdWVzIG9mIHRoZSByZWNvcmQuXG4gICAqL1xuICByZWNvcmQ6IChrZXlzLCB2YWx1ZXMpID0+IHtcbiAgICByZXR1cm4gbmV3IFZSZWNvcmQoe1xuICAgICAgaXNPcHRpb25hbDogXCJyZXF1aXJlZFwiLFxuICAgICAga2V5OiBrZXlzLFxuICAgICAgdmFsdWU6IHZhbHVlc1xuICAgIH0pO1xuICB9LFxuICAvKipcbiAgICogVmFsaWRhdGVzIHRoYXQgdGhlIHZhbHVlIG1hdGNoZXMgb25lIG9mIHRoZSBnaXZlbiB2YWxpZGF0b3JzLlxuICAgKiBAcGFyYW0gbWVtYmVycyBUaGUgdmFsaWRhdG9ycyB0byBtYXRjaCBhZ2FpbnN0LlxuICAgKi9cbiAgdW5pb246ICguLi5tZW1iZXJzKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBWVW5pb24oe1xuICAgICAgaXNPcHRpb25hbDogXCJyZXF1aXJlZFwiLFxuICAgICAgbWVtYmVyc1xuICAgIH0pO1xuICB9LFxuICAvKipcbiAgICogRG9lcyBub3QgdmFsaWRhdGUgdGhlIHZhbHVlLlxuICAgKi9cbiAgYW55OiAoKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBWQW55KHsgaXNPcHRpb25hbDogXCJyZXF1aXJlZFwiIH0pO1xuICB9LFxuICAvKipcbiAgICogQWxsb3dzIG5vdCBzcGVjaWZ5aW5nIGEgdmFsdWUgZm9yIGEgcHJvcGVydHkgaW4gYW4gT2JqZWN0LlxuICAgKiBAcGFyYW0gdmFsdWUgVGhlIHByb3BlcnR5IHZhbHVlIHZhbGlkYXRvciB0byBtYWtlIG9wdGlvbmFsLlxuICAgKlxuICAgKiBgYGB0eXBlc2NyaXB0XG4gICAqIGNvbnN0IG9iamVjdFdpdGhPcHRpb25hbEZpZWxkcyA9IHYub2JqZWN0KHtcbiAgICogICByZXF1aXJlZEZpZWxkOiB2LnN0cmluZygpLFxuICAgKiAgIG9wdGlvbmFsRmllbGQ6IHYub3B0aW9uYWwodi5zdHJpbmcoKSksXG4gICAqIH0pO1xuICAgKiBgYGBcbiAgICovXG4gIG9wdGlvbmFsOiAodmFsdWUpID0+IHtcbiAgICByZXR1cm4gdmFsdWUuYXNPcHRpb25hbCgpO1xuICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFsaWRhdG9yLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/validator.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/validators.js":
/*!***********************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/validators.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VAny: () => (/* binding */ VAny),\n/* harmony export */   VArray: () => (/* binding */ VArray),\n/* harmony export */   VBoolean: () => (/* binding */ VBoolean),\n/* harmony export */   VBytes: () => (/* binding */ VBytes),\n/* harmony export */   VFloat64: () => (/* binding */ VFloat64),\n/* harmony export */   VId: () => (/* binding */ VId),\n/* harmony export */   VInt64: () => (/* binding */ VInt64),\n/* harmony export */   VLiteral: () => (/* binding */ VLiteral),\n/* harmony export */   VNull: () => (/* binding */ VNull),\n/* harmony export */   VObject: () => (/* binding */ VObject),\n/* harmony export */   VRecord: () => (/* binding */ VRecord),\n/* harmony export */   VString: () => (/* binding */ VString),\n/* harmony export */   VUnion: () => (/* binding */ VUnion)\n/* harmony export */ });\n/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ \"(ssr)/./node_modules/convex/dist/esm/values/value.js\");\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\nclass BaseValidator {\n  constructor({ isOptional }) {\n    /**\n     * Only for TypeScript, the TS type of the JS values validated\n     * by this validator.\n     */\n    __publicField(this, \"type\");\n    /**\n     * Only for TypeScript, if this an Object validator, then\n     * this is the TS type of its property names.\n     */\n    __publicField(this, \"fieldPaths\");\n    /**\n     * Whether this is an optional Object property value validator.\n     */\n    __publicField(this, \"isOptional\");\n    /**\n     * Always `\"true\"`.\n     */\n    __publicField(this, \"isConvexValidator\");\n    this.isOptional = isOptional;\n    this.isConvexValidator = true;\n  }\n  /** @deprecated - use isOptional instead */\n  get optional() {\n    return this.isOptional === \"optional\" ? true : false;\n  }\n}\nclass VId extends BaseValidator {\n  /**\n   * Usually you'd use `v.id(tableName)` instead.\n   */\n  constructor({\n    isOptional,\n    tableName\n  }) {\n    super({ isOptional });\n    /**\n     * The name of the table that the validated IDs must belong to.\n     */\n    __publicField(this, \"tableName\");\n    /**\n     * The kind of validator, `\"id\"`.\n     */\n    __publicField(this, \"kind\", \"id\");\n    this.tableName = tableName;\n  }\n  /** @internal */\n  get json() {\n    return { type: \"id\", tableName: this.tableName };\n  }\n  /** @internal */\n  asOptional() {\n    return new VId({\n      isOptional: \"optional\",\n      tableName: this.tableName\n    });\n  }\n}\nclass VFloat64 extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"float64\"`.\n     */\n    __publicField(this, \"kind\", \"float64\");\n  }\n  /** @internal */\n  get json() {\n    return { type: \"number\" };\n  }\n  /** @internal */\n  asOptional() {\n    return new VFloat64({\n      isOptional: \"optional\"\n    });\n  }\n}\nclass VInt64 extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"int64\"`.\n     */\n    __publicField(this, \"kind\", \"int64\");\n  }\n  /** @internal */\n  get json() {\n    return { type: \"bigint\" };\n  }\n  /** @internal */\n  asOptional() {\n    return new VInt64({ isOptional: \"optional\" });\n  }\n}\nclass VBoolean extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"boolean\"`.\n     */\n    __publicField(this, \"kind\", \"boolean\");\n  }\n  /** @internal */\n  get json() {\n    return { type: this.kind };\n  }\n  /** @internal */\n  asOptional() {\n    return new VBoolean({\n      isOptional: \"optional\"\n    });\n  }\n}\nclass VBytes extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"bytes\"`.\n     */\n    __publicField(this, \"kind\", \"bytes\");\n  }\n  /** @internal */\n  get json() {\n    return { type: this.kind };\n  }\n  /** @internal */\n  asOptional() {\n    return new VBytes({ isOptional: \"optional\" });\n  }\n}\nclass VString extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"string\"`.\n     */\n    __publicField(this, \"kind\", \"string\");\n  }\n  /** @internal */\n  get json() {\n    return { type: this.kind };\n  }\n  /** @internal */\n  asOptional() {\n    return new VString({\n      isOptional: \"optional\"\n    });\n  }\n}\nclass VNull extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"null\"`.\n     */\n    __publicField(this, \"kind\", \"null\");\n  }\n  /** @internal */\n  get json() {\n    return { type: this.kind };\n  }\n  /** @internal */\n  asOptional() {\n    return new VNull({ isOptional: \"optional\" });\n  }\n}\nclass VAny extends BaseValidator {\n  constructor() {\n    super(...arguments);\n    /**\n     * The kind of validator, `\"any\"`.\n     */\n    __publicField(this, \"kind\", \"any\");\n  }\n  /** @internal */\n  get json() {\n    return {\n      type: this.kind\n    };\n  }\n  /** @internal */\n  asOptional() {\n    return new VAny({\n      isOptional: \"optional\"\n    });\n  }\n}\nclass VObject extends BaseValidator {\n  /**\n   * Usually you'd use `v.object({ ... })` instead.\n   */\n  constructor({\n    isOptional,\n    fields\n  }) {\n    super({ isOptional });\n    /**\n     * An object with the validator for each property.\n     */\n    __publicField(this, \"fields\");\n    /**\n     * The kind of validator, `\"object\"`.\n     */\n    __publicField(this, \"kind\", \"object\");\n    this.fields = fields;\n  }\n  /** @internal */\n  get json() {\n    return {\n      type: this.kind,\n      value: globalThis.Object.fromEntries(\n        globalThis.Object.entries(this.fields).map(([k, v]) => [\n          k,\n          {\n            fieldType: v.json,\n            optional: v.isOptional === \"optional\" ? true : false\n          }\n        ])\n      )\n    };\n  }\n  /** @internal */\n  asOptional() {\n    return new VObject({\n      isOptional: \"optional\",\n      fields: this.fields\n    });\n  }\n}\nclass VLiteral extends BaseValidator {\n  /**\n   * Usually you'd use `v.literal(value)` instead.\n   */\n  constructor({ isOptional, value }) {\n    super({ isOptional });\n    /**\n     * The value that the validated values must be equal to.\n     */\n    __publicField(this, \"value\");\n    /**\n     * The kind of validator, `\"literal\"`.\n     */\n    __publicField(this, \"kind\", \"literal\");\n    this.value = value;\n  }\n  /** @internal */\n  get json() {\n    return {\n      type: this.kind,\n      value: (0,_value_js__WEBPACK_IMPORTED_MODULE_0__.convexToJson)(this.value)\n    };\n  }\n  /** @internal */\n  asOptional() {\n    return new VLiteral({\n      isOptional: \"optional\",\n      value: this.value\n    });\n  }\n}\nclass VArray extends BaseValidator {\n  /**\n   * Usually you'd use `v.array(element)` instead.\n   */\n  constructor({\n    isOptional,\n    element\n  }) {\n    super({ isOptional });\n    /**\n     * The validator for the elements of the array.\n     */\n    __publicField(this, \"element\");\n    /**\n     * The kind of validator, `\"array\"`.\n     */\n    __publicField(this, \"kind\", \"array\");\n    this.element = element;\n  }\n  /** @internal */\n  get json() {\n    return {\n      type: this.kind,\n      value: this.element.json\n    };\n  }\n  /** @internal */\n  asOptional() {\n    return new VArray({\n      isOptional: \"optional\",\n      element: this.element\n    });\n  }\n}\nclass VRecord extends BaseValidator {\n  /**\n   * Usually you'd use `v.record(key, value)` instead.\n   */\n  constructor({\n    isOptional,\n    key,\n    value\n  }) {\n    super({ isOptional });\n    /**\n     * The validator for the keys of the record.\n     */\n    __publicField(this, \"key\");\n    /**\n     * The validator for the values of the record.\n     */\n    __publicField(this, \"value\");\n    /**\n     * The kind of validator, `\"record\"`.\n     */\n    __publicField(this, \"kind\", \"record\");\n    if (key.isOptional === \"optional\") {\n      throw new Error(\"Record validator cannot have optional keys\");\n    }\n    if (value.isOptional === \"optional\") {\n      throw new Error(\"Record validator cannot have optional values\");\n    }\n    this.key = key;\n    this.value = value;\n  }\n  /** @internal */\n  get json() {\n    return {\n      type: this.kind,\n      // This cast is needed because TypeScript thinks the key type is too wide\n      keys: this.key.json,\n      values: {\n        fieldType: this.value.json,\n        optional: false\n      }\n    };\n  }\n  /** @internal */\n  asOptional() {\n    return new VRecord({\n      isOptional: \"optional\",\n      key: this.key,\n      value: this.value\n    });\n  }\n}\nclass VUnion extends BaseValidator {\n  /**\n   * Usually you'd use `v.union(...members)` instead.\n   */\n  constructor({ isOptional, members }) {\n    super({ isOptional });\n    /**\n     * The array of validators, one of which must match the value.\n     */\n    __publicField(this, \"members\");\n    /**\n     * The kind of validator, `\"union\"`.\n     */\n    __publicField(this, \"kind\", \"union\");\n    this.members = members;\n  }\n  /** @internal */\n  get json() {\n    return {\n      type: this.kind,\n      value: this.members.map((v) => v.json)\n    };\n  }\n  /** @internal */\n  asOptional() {\n    return new VUnion({\n      isOptional: \"optional\",\n      members: this.members\n    });\n  }\n}\n//# sourceMappingURL=validators.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/validators.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/convex/dist/esm/values/value.js":
/*!******************************************************!*\
  !*** ./node_modules/convex/dist/esm/values/value.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64ToBigInt: () => (/* binding */ base64ToBigInt),\n/* harmony export */   bigIntToBase64: () => (/* binding */ bigIntToBase64),\n/* harmony export */   convexOrUndefinedToJson: () => (/* binding */ convexOrUndefinedToJson),\n/* harmony export */   convexToJson: () => (/* binding */ convexToJson),\n/* harmony export */   jsonToConvex: () => (/* binding */ jsonToConvex),\n/* harmony export */   modernBase64ToBigInt: () => (/* binding */ modernBase64ToBigInt),\n/* harmony export */   modernBigIntToBase64: () => (/* binding */ modernBigIntToBase64),\n/* harmony export */   patchValueToJson: () => (/* binding */ patchValueToJson),\n/* harmony export */   slowBase64ToBigInt: () => (/* binding */ slowBase64ToBigInt),\n/* harmony export */   slowBigIntToBase64: () => (/* binding */ slowBigIntToBase64),\n/* harmony export */   stringifyValueForError: () => (/* binding */ stringifyValueForError)\n/* harmony export */ });\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base64.js */ \"(ssr)/./node_modules/convex/dist/esm/values/base64.js\");\n/* harmony import */ var _common_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/index.js */ \"(ssr)/./node_modules/convex/dist/esm/common/index.js\");\n\n\n\nconst LITTLE_ENDIAN = true;\nconst MIN_INT64 = BigInt(\"-9223372036854775808\");\nconst MAX_INT64 = BigInt(\"9223372036854775807\");\nconst ZERO = BigInt(\"0\");\nconst EIGHT = BigInt(\"8\");\nconst TWOFIFTYSIX = BigInt(\"256\");\nfunction isSpecial(n) {\n  return Number.isNaN(n) || !Number.isFinite(n) || Object.is(n, -0);\n}\nfunction slowBigIntToBase64(value) {\n  if (value < ZERO) {\n    value -= MIN_INT64 + MIN_INT64;\n  }\n  let hex = value.toString(16);\n  if (hex.length % 2 === 1) hex = \"0\" + hex;\n  const bytes = new Uint8Array(new ArrayBuffer(8));\n  let i = 0;\n  for (const hexByte of hex.match(/.{2}/g).reverse()) {\n    bytes.set([parseInt(hexByte, 16)], i++);\n    value >>= EIGHT;\n  }\n  return _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(bytes);\n}\nfunction slowBase64ToBigInt(encoded) {\n  const integerBytes = _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(encoded);\n  if (integerBytes.byteLength !== 8) {\n    throw new Error(\n      `Received ${integerBytes.byteLength} bytes, expected 8 for $integer`\n    );\n  }\n  let value = ZERO;\n  let power = ZERO;\n  for (const byte of integerBytes) {\n    value += BigInt(byte) * TWOFIFTYSIX ** power;\n    power++;\n  }\n  if (value > MAX_INT64) {\n    value += MIN_INT64 + MIN_INT64;\n  }\n  return value;\n}\nfunction modernBigIntToBase64(value) {\n  if (value < MIN_INT64 || MAX_INT64 < value) {\n    throw new Error(\n      `BigInt ${value} does not fit into a 64-bit signed integer.`\n    );\n  }\n  const buffer = new ArrayBuffer(8);\n  new DataView(buffer).setBigInt64(0, value, true);\n  return _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(new Uint8Array(buffer));\n}\nfunction modernBase64ToBigInt(encoded) {\n  const integerBytes = _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(encoded);\n  if (integerBytes.byteLength !== 8) {\n    throw new Error(\n      `Received ${integerBytes.byteLength} bytes, expected 8 for $integer`\n    );\n  }\n  const intBytesView = new DataView(integerBytes.buffer);\n  return intBytesView.getBigInt64(0, true);\n}\nconst bigIntToBase64 = DataView.prototype.setBigInt64 ? modernBigIntToBase64 : slowBigIntToBase64;\nconst base64ToBigInt = DataView.prototype.getBigInt64 ? modernBase64ToBigInt : slowBase64ToBigInt;\nconst MAX_IDENTIFIER_LEN = 1024;\nfunction validateObjectField(k) {\n  if (k.length > MAX_IDENTIFIER_LEN) {\n    throw new Error(\n      `Field name ${k} exceeds maximum field name length ${MAX_IDENTIFIER_LEN}.`\n    );\n  }\n  if (k.startsWith(\"$\")) {\n    throw new Error(`Field name ${k} starts with a '$', which is reserved.`);\n  }\n  for (let i = 0; i < k.length; i += 1) {\n    const charCode = k.charCodeAt(i);\n    if (charCode < 32 || charCode >= 127) {\n      throw new Error(\n        `Field name ${k} has invalid character '${k[i]}': Field names can only contain non-control ASCII characters`\n      );\n    }\n  }\n}\nfunction jsonToConvex(value) {\n  if (value === null) {\n    return value;\n  }\n  if (typeof value === \"boolean\") {\n    return value;\n  }\n  if (typeof value === \"number\") {\n    return value;\n  }\n  if (typeof value === \"string\") {\n    return value;\n  }\n  if (Array.isArray(value)) {\n    return value.map((value2) => jsonToConvex(value2));\n  }\n  if (typeof value !== \"object\") {\n    throw new Error(`Unexpected type of ${value}`);\n  }\n  const entries = Object.entries(value);\n  if (entries.length === 1) {\n    const key = entries[0][0];\n    if (key === \"$bytes\") {\n      if (typeof value.$bytes !== \"string\") {\n        throw new Error(`Malformed $bytes field on ${value}`);\n      }\n      return _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(value.$bytes).buffer;\n    }\n    if (key === \"$integer\") {\n      if (typeof value.$integer !== \"string\") {\n        throw new Error(`Malformed $integer field on ${value}`);\n      }\n      return base64ToBigInt(value.$integer);\n    }\n    if (key === \"$float\") {\n      if (typeof value.$float !== \"string\") {\n        throw new Error(`Malformed $float field on ${value}`);\n      }\n      const floatBytes = _base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray(value.$float);\n      if (floatBytes.byteLength !== 8) {\n        throw new Error(\n          `Received ${floatBytes.byteLength} bytes, expected 8 for $float`\n        );\n      }\n      const floatBytesView = new DataView(floatBytes.buffer);\n      const float = floatBytesView.getFloat64(0, LITTLE_ENDIAN);\n      if (!isSpecial(float)) {\n        throw new Error(`Float ${float} should be encoded as a number`);\n      }\n      return float;\n    }\n    if (key === \"$set\") {\n      throw new Error(\n        `Received a Set which is no longer supported as a Convex type.`\n      );\n    }\n    if (key === \"$map\") {\n      throw new Error(\n        `Received a Map which is no longer supported as a Convex type.`\n      );\n    }\n  }\n  const out = {};\n  for (const [k, v] of Object.entries(value)) {\n    validateObjectField(k);\n    out[k] = jsonToConvex(v);\n  }\n  return out;\n}\nfunction stringifyValueForError(value) {\n  return JSON.stringify(value, (_key, value2) => {\n    if (value2 === void 0) {\n      return \"undefined\";\n    }\n    if (typeof value2 === \"bigint\") {\n      return `${value2.toString()}n`;\n    }\n    return value2;\n  });\n}\nfunction convexToJsonInternal(value, originalValue, context, includeTopLevelUndefined) {\n  if (value === void 0) {\n    const contextText = context && ` (present at path ${context} in original object ${stringifyValueForError(\n      originalValue\n    )})`;\n    throw new Error(\n      `undefined is not a valid Convex value${contextText}. To learn about Convex's supported types, see https://docs.convex.dev/using/types.`\n    );\n  }\n  if (value === null) {\n    return value;\n  }\n  if (typeof value === \"bigint\") {\n    if (value < MIN_INT64 || MAX_INT64 < value) {\n      throw new Error(\n        `BigInt ${value} does not fit into a 64-bit signed integer.`\n      );\n    }\n    return { $integer: bigIntToBase64(value) };\n  }\n  if (typeof value === \"number\") {\n    if (isSpecial(value)) {\n      const buffer = new ArrayBuffer(8);\n      new DataView(buffer).setFloat64(0, value, LITTLE_ENDIAN);\n      return { $float: _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(new Uint8Array(buffer)) };\n    } else {\n      return value;\n    }\n  }\n  if (typeof value === \"boolean\") {\n    return value;\n  }\n  if (typeof value === \"string\") {\n    return value;\n  }\n  if (value instanceof ArrayBuffer) {\n    return { $bytes: _base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray(new Uint8Array(value)) };\n  }\n  if (Array.isArray(value)) {\n    return value.map(\n      (value2, i) => convexToJsonInternal(value2, originalValue, context + `[${i}]`, false)\n    );\n  }\n  if (value instanceof Set) {\n    throw new Error(\n      errorMessageForUnsupportedType(context, \"Set\", [...value], originalValue)\n    );\n  }\n  if (value instanceof Map) {\n    throw new Error(\n      errorMessageForUnsupportedType(context, \"Map\", [...value], originalValue)\n    );\n  }\n  if (!(0,_common_index_js__WEBPACK_IMPORTED_MODULE_1__.isSimpleObject)(value)) {\n    const theType = value?.constructor?.name;\n    const typeName = theType ? `${theType} ` : \"\";\n    throw new Error(\n      errorMessageForUnsupportedType(context, typeName, value, originalValue)\n    );\n  }\n  const out = {};\n  const entries = Object.entries(value);\n  entries.sort(([k1, _v1], [k2, _v2]) => k1 === k2 ? 0 : k1 < k2 ? -1 : 1);\n  for (const [k, v] of entries) {\n    if (v !== void 0) {\n      validateObjectField(k);\n      out[k] = convexToJsonInternal(v, originalValue, context + `.${k}`, false);\n    } else if (includeTopLevelUndefined) {\n      validateObjectField(k);\n      out[k] = convexOrUndefinedToJsonInternal(\n        v,\n        originalValue,\n        context + `.${k}`\n      );\n    }\n  }\n  return out;\n}\nfunction errorMessageForUnsupportedType(context, typeName, value, originalValue) {\n  if (context) {\n    return `${typeName}${stringifyValueForError(\n      value\n    )} is not a supported Convex type (present at path ${context} in original object ${stringifyValueForError(\n      originalValue\n    )}). To learn about Convex's supported types, see https://docs.convex.dev/using/types.`;\n  } else {\n    return `${typeName}${stringifyValueForError(\n      value\n    )} is not a supported Convex type.`;\n  }\n}\nfunction convexOrUndefinedToJsonInternal(value, originalValue, context) {\n  if (value === void 0) {\n    return { $undefined: null };\n  } else {\n    if (originalValue === void 0) {\n      throw new Error(\n        `Programming error. Current value is ${stringifyValueForError(\n          value\n        )} but original value is undefined`\n      );\n    }\n    return convexToJsonInternal(value, originalValue, context, false);\n  }\n}\nfunction convexToJson(value) {\n  return convexToJsonInternal(value, value, \"\", false);\n}\nfunction convexOrUndefinedToJson(value) {\n  return convexOrUndefinedToJsonInternal(value, value, \"\");\n}\nfunction patchValueToJson(value) {\n  return convexToJsonInternal(value, value, \"\", true);\n}\n//# sourceMappingURL=value.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/convex/dist/esm/values/value.js\n");

/***/ })

};
;